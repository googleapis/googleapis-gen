<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/market/v2/resources.proto

namespace Ccc\Hosted\Marketplace\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ccc.hosted.marketplace.v2.UserLicense</code>
 */
class UserLicense extends \Google\Protobuf\Internal\Message
{
    /**
     * The type of API resource. This is always appsmarket#userLicense.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     */
    protected $kind = '';
    /**
     * The domain administrator has activated the application for this domain.
     *
     * Generated from protobuf field <code>bool enabled = 2;</code>
     */
    protected $enabled = false;
    /**
     * The user's licensing status. One of:
     * - `ACTIVE`: The user has a valid license and should be permitted to use the
     * application.
     * - `UNLICENSED`: The administrator of this user's domain never assigned a
     * seat for the application to this user.
     * - `EXPIRED`: The administrator assigned a seat to this user, but the
     * license is expired.
     *
     * Generated from protobuf field <code>string state = 3;</code>
     */
    protected $state = '';
    /**
     * (Deprecated)
     *
     * Generated from protobuf field <code>string edition_id = 4 [deprecated = true];</code>
     */
    protected $edition_id = '';
    /**
     * The domain name of the user.
     *
     * Generated from protobuf field <code>string customer_id = 5;</code>
     */
    protected $customer_id = '';
    /**
     * The ID of the application corresponding to the license query.
     *
     * Generated from protobuf field <code>string application_id = 6;</code>
     */
    protected $application_id = '';
    /**
     * The ID of user license.
     *
     * Generated from protobuf field <code>string id = 101;</code>
     */
    protected $id = '';
    /**
     * The email address of the user.
     *
     * Generated from protobuf field <code>string user_id = 102;</code>
     */
    protected $user_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $kind
     *           The type of API resource. This is always appsmarket#userLicense.
     *     @type bool $enabled
     *           The domain administrator has activated the application for this domain.
     *     @type string $state
     *           The user's licensing status. One of:
     *           - `ACTIVE`: The user has a valid license and should be permitted to use the
     *           application.
     *           - `UNLICENSED`: The administrator of this user's domain never assigned a
     *           seat for the application to this user.
     *           - `EXPIRED`: The administrator assigned a seat to this user, but the
     *           license is expired.
     *     @type string $edition_id
     *           (Deprecated)
     *     @type string $customer_id
     *           The domain name of the user.
     *     @type string $application_id
     *           The ID of the application corresponding to the license query.
     *     @type string $id
     *           The ID of user license.
     *     @type string $user_id
     *           The email address of the user.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Apps\Market\V2\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The type of API resource. This is always appsmarket#userLicense.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     * @return string
     */
    public function getKind()
    {
        return $this->kind;
    }

    /**
     * The type of API resource. This is always appsmarket#userLicense.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setKind($var)
    {
        GPBUtil::checkString($var, True);
        $this->kind = $var;

        return $this;
    }

    /**
     * The domain administrator has activated the application for this domain.
     *
     * Generated from protobuf field <code>bool enabled = 2;</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * The domain administrator has activated the application for this domain.
     *
     * Generated from protobuf field <code>bool enabled = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     * The user's licensing status. One of:
     * - `ACTIVE`: The user has a valid license and should be permitted to use the
     * application.
     * - `UNLICENSED`: The administrator of this user's domain never assigned a
     * seat for the application to this user.
     * - `EXPIRED`: The administrator assigned a seat to this user, but the
     * license is expired.
     *
     * Generated from protobuf field <code>string state = 3;</code>
     * @return string
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * The user's licensing status. One of:
     * - `ACTIVE`: The user has a valid license and should be permitted to use the
     * application.
     * - `UNLICENSED`: The administrator of this user's domain never assigned a
     * seat for the application to this user.
     * - `EXPIRED`: The administrator assigned a seat to this user, but the
     * license is expired.
     *
     * Generated from protobuf field <code>string state = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkString($var, True);
        $this->state = $var;

        return $this;
    }

    /**
     * (Deprecated)
     *
     * Generated from protobuf field <code>string edition_id = 4 [deprecated = true];</code>
     * @return string
     */
    public function getEditionId()
    {
        return $this->edition_id;
    }

    /**
     * (Deprecated)
     *
     * Generated from protobuf field <code>string edition_id = 4 [deprecated = true];</code>
     * @param string $var
     * @return $this
     */
    public function setEditionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->edition_id = $var;

        return $this;
    }

    /**
     * The domain name of the user.
     *
     * Generated from protobuf field <code>string customer_id = 5;</code>
     * @return string
     */
    public function getCustomerId()
    {
        return $this->customer_id;
    }

    /**
     * The domain name of the user.
     *
     * Generated from protobuf field <code>string customer_id = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setCustomerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->customer_id = $var;

        return $this;
    }

    /**
     * The ID of the application corresponding to the license query.
     *
     * Generated from protobuf field <code>string application_id = 6;</code>
     * @return string
     */
    public function getApplicationId()
    {
        return $this->application_id;
    }

    /**
     * The ID of the application corresponding to the license query.
     *
     * Generated from protobuf field <code>string application_id = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setApplicationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->application_id = $var;

        return $this;
    }

    /**
     * The ID of user license.
     *
     * Generated from protobuf field <code>string id = 101;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * The ID of user license.
     *
     * Generated from protobuf field <code>string id = 101;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * The email address of the user.
     *
     * Generated from protobuf field <code>string user_id = 102;</code>
     * @return string
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * The email address of the user.
     *
     * Generated from protobuf field <code>string user_id = 102;</code>
     * @param string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->user_id = $var;

        return $this;
    }

}

