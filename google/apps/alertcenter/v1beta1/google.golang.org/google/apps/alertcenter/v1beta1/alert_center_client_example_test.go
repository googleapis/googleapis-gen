// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.

package alertcenter_test

import (
	"context"

	"google.golang.org/api/iterator"
	alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"
	alertcenter "google.golang.org/google/apps/alertcenter/v1beta1"
)

func ExampleNewClient() {
	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use client.
	_ = c
}

func ExampleClient_ListAlerts() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.ListAlertsRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListAlerts(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleClient_GetAlert() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.GetAlertRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetAlert(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_DeleteAlert() {
	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.DeleteAlertRequest{
		// TODO: Fill request struct fields.
	}
	err = c.DeleteAlert(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleClient_UndeleteAlert() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.UndeleteAlertRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.UndeleteAlert(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_CreateAlertFeedback() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.CreateAlertFeedbackRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.CreateAlertFeedback(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_ListAlertFeedback() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.ListAlertFeedbackRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.ListAlertFeedback(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_GetAlertMetadata() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.GetAlertMetadataRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetAlertMetadata(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_GetSettings() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.GetSettingsRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetSettings(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_UpdateSettings() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.UpdateSettingsRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.UpdateSettings(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_BatchDeleteAlerts() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.BatchDeleteAlertsRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.BatchDeleteAlerts(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_BatchUndeleteAlerts() {
	// import alertcenterpb "google.golang.org/genproto/googleapis/apps/alertcenter/v1beta1"

	ctx := context.Background()
	c, err := alertcenter.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &alertcenterpb.BatchUndeleteAlertsRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.BatchUndeleteAlerts(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}
