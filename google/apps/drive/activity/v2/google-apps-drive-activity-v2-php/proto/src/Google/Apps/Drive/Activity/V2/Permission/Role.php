<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/drive/activity/v2/action.proto

namespace Google\Apps\Drive\Activity\V2\Permission;

use UnexpectedValueException;

/**
 * The [Google Drive permissions
 * roles](https://developers.google.com/drive/web/manage-sharing#roles).
 *
 * Protobuf type <code>google.apps.drive.activity.v2.Permission.Role</code>
 */
class Role
{
    /**
     * The role is not available.
     *
     * Generated from protobuf enum <code>ROLE_UNSPECIFIED = 0;</code>
     */
    const ROLE_UNSPECIFIED = 0;
    /**
     * A role granting full access.
     *
     * Generated from protobuf enum <code>OWNER = 1;</code>
     */
    const OWNER = 1;
    /**
     * A role granting the ability to manage people and settings.
     *
     * Generated from protobuf enum <code>ORGANIZER = 2;</code>
     */
    const ORGANIZER = 2;
    /**
     * A role granting the ability to contribute and manage content.
     *
     * Generated from protobuf enum <code>FILE_ORGANIZER = 3;</code>
     */
    const FILE_ORGANIZER = 3;
    /**
     * A role granting the ability to contribute content. This role is sometimes
     * also known as "writer".
     *
     * Generated from protobuf enum <code>EDITOR = 4;</code>
     */
    const EDITOR = 4;
    /**
     * A role granting the ability to view and comment on content.
     *
     * Generated from protobuf enum <code>COMMENTER = 5;</code>
     */
    const COMMENTER = 5;
    /**
     * A role granting the ability to view content. This role is sometimes also
     * known as "reader".
     *
     * Generated from protobuf enum <code>VIEWER = 6;</code>
     */
    const VIEWER = 6;
    /**
     * A role granting the ability to view content only after it has been
     * published to the web. This role is sometimes also known as "published
     * reader". See https://support.google.com/sites/answer/6372880 for more
     * information.
     *
     * Generated from protobuf enum <code>PUBLISHED_VIEWER = 7;</code>
     */
    const PUBLISHED_VIEWER = 7;

    private static $valueToName = [
        self::ROLE_UNSPECIFIED => 'ROLE_UNSPECIFIED',
        self::OWNER => 'OWNER',
        self::ORGANIZER => 'ORGANIZER',
        self::FILE_ORGANIZER => 'FILE_ORGANIZER',
        self::EDITOR => 'EDITOR',
        self::COMMENTER => 'COMMENTER',
        self::VIEWER => 'VIEWER',
        self::PUBLISHED_VIEWER => 'PUBLISHED_VIEWER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Role::class, \Google\Apps\Drive\Activity\V2\Permission_Role::class);

