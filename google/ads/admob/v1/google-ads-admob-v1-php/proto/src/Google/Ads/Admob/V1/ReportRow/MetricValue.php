<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/admob/v1/admob_resources.proto

namespace Google\Ads\Admob\V1\ReportRow;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Representation of a metric value.
 *
 * Generated from protobuf message <code>google.ads.admob.v1.ReportRow.MetricValue</code>
 */
class MetricValue extends \Google\Protobuf\Internal\Message
{
    protected $value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $integer_value
     *           Metric integer value.
     *     @type float $double_value
     *           Double precision (approximate) decimal values. Rates are from 0 to 1.
     *     @type int|string $micros_value
     *           Amount in micros. One million is equivalent to one unit. Currency value
     *           is in the unit (USD, EUR or other) specified by the request.
     *           For example, $6.50 whould be represented as 6500000 micros.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Ads\Admob\V1\AdmobResources::initOnce();
        parent::__construct($data);
    }

    /**
     * Metric integer value.
     *
     * Generated from protobuf field <code>int64 integer_value = 1;</code>
     * @return int|string
     */
    public function getIntegerValue()
    {
        return $this->readOneof(1);
    }

    public function hasIntegerValue()
    {
        return $this->hasOneof(1);
    }

    /**
     * Metric integer value.
     *
     * Generated from protobuf field <code>int64 integer_value = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIntegerValue($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Double precision (approximate) decimal values. Rates are from 0 to 1.
     *
     * Generated from protobuf field <code>double double_value = 2;</code>
     * @return float
     */
    public function getDoubleValue()
    {
        return $this->readOneof(2);
    }

    public function hasDoubleValue()
    {
        return $this->hasOneof(2);
    }

    /**
     * Double precision (approximate) decimal values. Rates are from 0 to 1.
     *
     * Generated from protobuf field <code>double double_value = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setDoubleValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Amount in micros. One million is equivalent to one unit. Currency value
     * is in the unit (USD, EUR or other) specified by the request.
     * For example, $6.50 whould be represented as 6500000 micros.
     *
     * Generated from protobuf field <code>int64 micros_value = 3;</code>
     * @return int|string
     */
    public function getMicrosValue()
    {
        return $this->readOneof(3);
    }

    public function hasMicrosValue()
    {
        return $this->hasOneof(3);
    }

    /**
     * Amount in micros. One million is equivalent to one unit. Currency value
     * is in the unit (USD, EUR or other) specified by the request.
     * For example, $6.50 whould be represented as 6500000 micros.
     *
     * Generated from protobuf field <code>int64 micros_value = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMicrosValue($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(MetricValue::class, \Google\Ads\Admob\V1\ReportRow_MetricValue::class);

