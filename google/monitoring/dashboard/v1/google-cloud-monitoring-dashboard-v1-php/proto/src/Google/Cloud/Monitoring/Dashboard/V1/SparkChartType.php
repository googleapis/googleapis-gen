<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/metrics.proto

namespace Google\Cloud\Monitoring\Dashboard\V1;

use UnexpectedValueException;

/**
 * Defines the possible types of spark chart supported by the `Scorecard`.
 *
 * Protobuf type <code>google.monitoring.dashboard.v1.SparkChartType</code>
 */
class SparkChartType
{
    /**
     * Not allowed in well-formed requests.
     *
     * Generated from protobuf enum <code>SPARK_CHART_TYPE_UNSPECIFIED = 0;</code>
     */
    const SPARK_CHART_TYPE_UNSPECIFIED = 0;
    /**
     * The sparkline will be rendered as a small line chart.
     *
     * Generated from protobuf enum <code>SPARK_LINE = 1;</code>
     */
    const SPARK_LINE = 1;
    /**
     * The sparkbar will be rendered as a small bar chart.
     *
     * Generated from protobuf enum <code>SPARK_BAR = 2;</code>
     */
    const SPARK_BAR = 2;

    private static $valueToName = [
        self::SPARK_CHART_TYPE_UNSPECIFIED => 'SPARK_CHART_TYPE_UNSPECIFIED',
        self::SPARK_LINE => 'SPARK_LINE',
        self::SPARK_BAR => 'SPARK_BAR',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

