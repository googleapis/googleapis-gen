<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/xychart.proto

namespace Google\Cloud\Monitoring\Dashboard\V1\XyChart\DataSet;

use UnexpectedValueException;

/**
 * The types of plotting strategies for data sets.
 *
 * Protobuf type <code>google.monitoring.dashboard.v1.XyChart.DataSet.PlotType</code>
 */
class PlotType
{
    /**
     * Plot type is unspecified. The view will default to `LINE`.
     *
     * Generated from protobuf enum <code>PLOT_TYPE_UNSPECIFIED = 0;</code>
     */
    const PLOT_TYPE_UNSPECIFIED = 0;
    /**
     * The data is plotted as a set of lines (one line per series).
     *
     * Generated from protobuf enum <code>LINE = 1;</code>
     */
    const LINE = 1;
    /**
     * The data is plotted as a set of filled areas (one area per series),
     * with the areas stacked vertically (the base of each area is the top of
     * its predecessor, and the base of the first area is the X axis). Since
     * the areas do not overlap, each is filled with a different opaque color.
     *
     * Generated from protobuf enum <code>STACKED_AREA = 2;</code>
     */
    const STACKED_AREA = 2;
    /**
     * The data is plotted as a set of rectangular boxes (one box per series),
     * with the boxes stacked vertically (the base of each box is the top of
     * its predecessor, and the base of the first box is the X axis). Since
     * the boxes do not overlap, each is filled with a different opaque color.
     *
     * Generated from protobuf enum <code>STACKED_BAR = 3;</code>
     */
    const STACKED_BAR = 3;
    /**
     * The data is plotted as a heatmap. The series being plotted must have a
     * `DISTRIBUTION` value type. The value of each bucket in the distribution
     * is displayed as a color. This type is not currently available in the
     * Stackdriver Monitoring application.
     *
     * Generated from protobuf enum <code>HEATMAP = 4;</code>
     */
    const HEATMAP = 4;

    private static $valueToName = [
        self::PLOT_TYPE_UNSPECIFIED => 'PLOT_TYPE_UNSPECIFIED',
        self::LINE => 'LINE',
        self::STACKED_AREA => 'STACKED_AREA',
        self::STACKED_BAR => 'STACKED_BAR',
        self::HEATMAP => 'HEATMAP',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PlotType::class, \Google\Cloud\Monitoring\Dashboard\V1\XyChart_DataSet_PlotType::class);

