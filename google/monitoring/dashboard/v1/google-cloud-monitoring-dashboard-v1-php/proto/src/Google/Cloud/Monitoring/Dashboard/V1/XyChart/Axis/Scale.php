<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/xychart.proto

namespace Google\Cloud\Monitoring\Dashboard\V1\XyChart\Axis;

use UnexpectedValueException;

/**
 * Types of scales used in axes.
 *
 * Protobuf type <code>google.monitoring.dashboard.v1.XyChart.Axis.Scale</code>
 */
class Scale
{
    /**
     * Scale is unspecified. The view will default to `LINEAR`.
     *
     * Generated from protobuf enum <code>SCALE_UNSPECIFIED = 0;</code>
     */
    const SCALE_UNSPECIFIED = 0;
    /**
     * Linear scale.
     *
     * Generated from protobuf enum <code>LINEAR = 1;</code>
     */
    const LINEAR = 1;
    /**
     * Logarithmic scale (base 10).
     *
     * Generated from protobuf enum <code>LOG10 = 2;</code>
     */
    const LOG10 = 2;

    private static $valueToName = [
        self::SCALE_UNSPECIFIED => 'SCALE_UNSPECIFIED',
        self::LINEAR => 'LINEAR',
        self::LOG10 => 'LOG10',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Scale::class, \Google\Cloud\Monitoring\Dashboard\V1\XyChart_Axis_Scale::class);

