<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/common.proto

namespace Google\Monitoring\Dashboard\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A filter that ranks streams based on their statistical relation to other
 * streams in a request.
 * Note: This field is deprecated and completely ignored by the API.
 *
 * Generated from protobuf message <code>google.monitoring.dashboard.v1.StatisticalTimeSeriesFilter</code>
 */
class StatisticalTimeSeriesFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * `rankingMethod` is applied to a set of time series, and then the produced
     * value for each individual time series is used to compare a given time
     * series to others.
     * These are methods that cannot be applied stream-by-stream, but rather
     * require the full context of a request to evaluate time series.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.StatisticalTimeSeriesFilter.Method ranking_method = 1;</code>
     */
    protected $ranking_method = 0;
    /**
     * How many time series to output.
     *
     * Generated from protobuf field <code>int32 num_time_series = 2;</code>
     */
    protected $num_time_series = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $ranking_method
     *           `rankingMethod` is applied to a set of time series, and then the produced
     *           value for each individual time series is used to compare a given time
     *           series to others.
     *           These are methods that cannot be applied stream-by-stream, but rather
     *           require the full context of a request to evaluate time series.
     *     @type int $num_time_series
     *           How many time series to output.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Monitoring\Dashboard\V1\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * `rankingMethod` is applied to a set of time series, and then the produced
     * value for each individual time series is used to compare a given time
     * series to others.
     * These are methods that cannot be applied stream-by-stream, but rather
     * require the full context of a request to evaluate time series.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.StatisticalTimeSeriesFilter.Method ranking_method = 1;</code>
     * @return int
     */
    public function getRankingMethod()
    {
        return $this->ranking_method;
    }

    /**
     * `rankingMethod` is applied to a set of time series, and then the produced
     * value for each individual time series is used to compare a given time
     * series to others.
     * These are methods that cannot be applied stream-by-stream, but rather
     * require the full context of a request to evaluate time series.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.StatisticalTimeSeriesFilter.Method ranking_method = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setRankingMethod($var)
    {
        GPBUtil::checkEnum($var, \Google\Monitoring\Dashboard\V1\StatisticalTimeSeriesFilter\Method::class);
        $this->ranking_method = $var;

        return $this;
    }

    /**
     * How many time series to output.
     *
     * Generated from protobuf field <code>int32 num_time_series = 2;</code>
     * @return int
     */
    public function getNumTimeSeries()
    {
        return $this->num_time_series;
    }

    /**
     * How many time series to output.
     *
     * Generated from protobuf field <code>int32 num_time_series = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setNumTimeSeries($var)
    {
        GPBUtil::checkInt32($var);
        $this->num_time_series = $var;

        return $this;
    }

}

