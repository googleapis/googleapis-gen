<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/common.proto

namespace Google\Monitoring\Dashboard\V1\PickTimeSeriesFilter;

use UnexpectedValueException;

/**
 * The value reducers that can be applied to a `PickTimeSeriesFilter`.
 *
 * Protobuf type <code>google.monitoring.dashboard.v1.PickTimeSeriesFilter.Method</code>
 */
class Method
{
    /**
     * Not allowed. You must specify a different `Method` if you specify a
     * `PickTimeSeriesFilter`.
     *
     * Generated from protobuf enum <code>METHOD_UNSPECIFIED = 0;</code>
     */
    const METHOD_UNSPECIFIED = 0;
    /**
     * Select the mean of all values.
     *
     * Generated from protobuf enum <code>METHOD_MEAN = 1;</code>
     */
    const METHOD_MEAN = 1;
    /**
     * Select the maximum value.
     *
     * Generated from protobuf enum <code>METHOD_MAX = 2;</code>
     */
    const METHOD_MAX = 2;
    /**
     * Select the minimum value.
     *
     * Generated from protobuf enum <code>METHOD_MIN = 3;</code>
     */
    const METHOD_MIN = 3;
    /**
     * Compute the sum of all values.
     *
     * Generated from protobuf enum <code>METHOD_SUM = 4;</code>
     */
    const METHOD_SUM = 4;
    /**
     * Select the most recent value.
     *
     * Generated from protobuf enum <code>METHOD_LATEST = 5;</code>
     */
    const METHOD_LATEST = 5;

    private static $valueToName = [
        self::METHOD_UNSPECIFIED => 'METHOD_UNSPECIFIED',
        self::METHOD_MEAN => 'METHOD_MEAN',
        self::METHOD_MAX => 'METHOD_MAX',
        self::METHOD_MIN => 'METHOD_MIN',
        self::METHOD_SUM => 'METHOD_SUM',
        self::METHOD_LATEST => 'METHOD_LATEST',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Method::class, \Google\Monitoring\Dashboard\V1\PickTimeSeriesFilter_Method::class);

