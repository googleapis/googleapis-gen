<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/text.proto

namespace Google\Monitoring\Dashboard\V1\Text;

use UnexpectedValueException;

/**
 * The format type of the text content.
 *
 * Protobuf type <code>google.monitoring.dashboard.v1.Text.Format</code>
 */
class Format
{
    /**
     * Format is unspecified. Defaults to MARKDOWN.
     *
     * Generated from protobuf enum <code>FORMAT_UNSPECIFIED = 0;</code>
     */
    const FORMAT_UNSPECIFIED = 0;
    /**
     * The text contains Markdown formatting.
     *
     * Generated from protobuf enum <code>MARKDOWN = 1;</code>
     */
    const MARKDOWN = 1;
    /**
     * The text contains no special formatting.
     *
     * Generated from protobuf enum <code>RAW = 2;</code>
     */
    const RAW = 2;

    private static $valueToName = [
        self::FORMAT_UNSPECIFIED => 'FORMAT_UNSPECIFIED',
        self::MARKDOWN => 'MARKDOWN',
        self::RAW => 'RAW',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Format::class, \Google\Monitoring\Dashboard\V1\Text_Format::class);

