<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/iam/v1beta/workload_identity_pool.proto

namespace Google\Iam\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a collection of external workload identities. You can define IAM
 * policies to grant these identities access to Google Cloud resources.
 *
 * Generated from protobuf message <code>google.iam.v1beta.WorkloadIdentityPool</code>
 */
class WorkloadIdentityPool extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The resource name of the pool.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $name = '';
    /**
     * A display name for the pool. Cannot exceed 32 characters.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     */
    protected $display_name = '';
    /**
     * A description of the pool. Cannot exceed 256 characters.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     */
    protected $description = '';
    /**
     * Output only. The state of the pool.
     *
     * Generated from protobuf field <code>.google.iam.v1beta.WorkloadIdentityPool.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $state = 0;
    /**
     * Whether the pool is disabled. You cannot use a disabled pool to exchange
     * tokens, or use existing tokens to access resources. If
     * the pool is re-enabled, existing tokens grant access again.
     *
     * Generated from protobuf field <code>bool disabled = 5;</code>
     */
    protected $disabled = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Output only. The resource name of the pool.
     *     @type string $display_name
     *           A display name for the pool. Cannot exceed 32 characters.
     *     @type string $description
     *           A description of the pool. Cannot exceed 256 characters.
     *     @type int $state
     *           Output only. The state of the pool.
     *     @type bool $disabled
     *           Whether the pool is disabled. You cannot use a disabled pool to exchange
     *           tokens, or use existing tokens to access resources. If
     *           the pool is re-enabled, existing tokens grant access again.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Iam\V1Beta\WorkloadIdentityPool::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. The resource name of the pool.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Output only. The resource name of the pool.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * A display name for the pool. Cannot exceed 32 characters.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * A display name for the pool. Cannot exceed 32 characters.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * A description of the pool. Cannot exceed 256 characters.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * A description of the pool. Cannot exceed 256 characters.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Output only. The state of the pool.
     *
     * Generated from protobuf field <code>.google.iam.v1beta.WorkloadIdentityPool.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Output only. The state of the pool.
     *
     * Generated from protobuf field <code>.google.iam.v1beta.WorkloadIdentityPool.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Iam\V1beta\WorkloadIdentityPool\State::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Whether the pool is disabled. You cannot use a disabled pool to exchange
     * tokens, or use existing tokens to access resources. If
     * the pool is re-enabled, existing tokens grant access again.
     *
     * Generated from protobuf field <code>bool disabled = 5;</code>
     * @return bool
     */
    public function getDisabled()
    {
        return $this->disabled;
    }

    /**
     * Whether the pool is disabled. You cannot use a disabled pool to exchange
     * tokens, or use existing tokens to access resources. If
     * the pool is re-enabled, existing tokens grant access again.
     *
     * Generated from protobuf field <code>bool disabled = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setDisabled($var)
    {
        GPBUtil::checkBool($var);
        $this->disabled = $var;

        return $this;
    }

}

