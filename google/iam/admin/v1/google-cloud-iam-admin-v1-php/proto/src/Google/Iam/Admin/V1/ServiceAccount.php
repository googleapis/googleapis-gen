<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/iam/admin/v1/iam.proto

namespace Google\Iam\Admin\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An IAM service account.
 * A service account is an account for an application or a virtual machine (VM)
 * instance, not a person. You can use a service account to call Google APIs. To
 * learn more, read the [overview of service
 * accounts](https://cloud.google.com/iam/help/service-accounts/overview).
 * When you create a service account, you specify the project ID that owns the
 * service account, as well as a name that must be unique within the project.
 * IAM uses these values to create an email address that identifies the service
 * account.
 *
 * Generated from protobuf message <code>google.iam.admin.v1.ServiceAccount</code>
 */
class ServiceAccount extends \Google\Protobuf\Internal\Message
{
    /**
     * The resource name of the service account.
     * Use one of the following formats:
     * * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}`
     * * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}`
     * As an alternative, you can use the `-` wildcard character instead of the
     * project ID:
     * * `projects/-/serviceAccounts/{EMAIL_ADDRESS}`
     * * `projects/-/serviceAccounts/{UNIQUE_ID}`
     * When possible, avoid using the `-` wildcard character, because it can cause
     * response messages to contain misleading error codes. For example, if you
     * try to get the service account
     * `projects/-/serviceAccounts/fake&#64;example.com`, which does not exist, the
     * response contains an HTTP `403 Forbidden` error instead of a `404 Not
     * Found` error.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Output only. The ID of the project that owns the service account.
     *
     * Generated from protobuf field <code>string project_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $project_id = '';
    /**
     * Output only. The unique, stable numeric ID for the service account.
     * Each service account retains its unique ID even if you delete the service
     * account. For example, if you delete a service account, then create a new
     * service account with the same name, the new service account has a different
     * unique ID than the deleted service account.
     *
     * Generated from protobuf field <code>string unique_id = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $unique_id = '';
    /**
     * Output only. The email address of the service account.
     *
     * Generated from protobuf field <code>string email = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $email = '';
    /**
     * Optional. A user-specified, human-readable name for the service account. The maximum
     * length is 100 UTF-8 bytes.
     *
     * Generated from protobuf field <code>string display_name = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $display_name = '';
    /**
     * Deprecated. Do not use.
     *
     * Generated from protobuf field <code>bytes etag = 7 [deprecated = true];</code>
     * @deprecated
     */
    protected $etag = '';
    /**
     * Optional. A user-specified, human-readable description of the service account. The
     * maximum length is 256 UTF-8 bytes.
     *
     * Generated from protobuf field <code>string description = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $description = '';
    /**
     * Output only. The OAuth 2.0 client ID for the service account.
     *
     * Generated from protobuf field <code>string oauth2_client_id = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $oauth2_client_id = '';
    /**
     * Output only. Whether the service account is disabled.
     *
     * Generated from protobuf field <code>bool disabled = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $disabled = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           The resource name of the service account.
     *           Use one of the following formats:
     *           * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}`
     *           * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}`
     *           As an alternative, you can use the `-` wildcard character instead of the
     *           project ID:
     *           * `projects/-/serviceAccounts/{EMAIL_ADDRESS}`
     *           * `projects/-/serviceAccounts/{UNIQUE_ID}`
     *           When possible, avoid using the `-` wildcard character, because it can cause
     *           response messages to contain misleading error codes. For example, if you
     *           try to get the service account
     *           `projects/-/serviceAccounts/fake&#64;example.com`, which does not exist, the
     *           response contains an HTTP `403 Forbidden` error instead of a `404 Not
     *           Found` error.
     *     @type string $project_id
     *           Output only. The ID of the project that owns the service account.
     *     @type string $unique_id
     *           Output only. The unique, stable numeric ID for the service account.
     *           Each service account retains its unique ID even if you delete the service
     *           account. For example, if you delete a service account, then create a new
     *           service account with the same name, the new service account has a different
     *           unique ID than the deleted service account.
     *     @type string $email
     *           Output only. The email address of the service account.
     *     @type string $display_name
     *           Optional. A user-specified, human-readable name for the service account. The maximum
     *           length is 100 UTF-8 bytes.
     *     @type string $etag
     *           Deprecated. Do not use.
     *     @type string $description
     *           Optional. A user-specified, human-readable description of the service account. The
     *           maximum length is 256 UTF-8 bytes.
     *     @type string $oauth2_client_id
     *           Output only. The OAuth 2.0 client ID for the service account.
     *     @type bool $disabled
     *           Output only. Whether the service account is disabled.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Iam\Admin\V1\Iam::initOnce();
        parent::__construct($data);
    }

    /**
     * The resource name of the service account.
     * Use one of the following formats:
     * * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}`
     * * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}`
     * As an alternative, you can use the `-` wildcard character instead of the
     * project ID:
     * * `projects/-/serviceAccounts/{EMAIL_ADDRESS}`
     * * `projects/-/serviceAccounts/{UNIQUE_ID}`
     * When possible, avoid using the `-` wildcard character, because it can cause
     * response messages to contain misleading error codes. For example, if you
     * try to get the service account
     * `projects/-/serviceAccounts/fake&#64;example.com`, which does not exist, the
     * response contains an HTTP `403 Forbidden` error instead of a `404 Not
     * Found` error.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The resource name of the service account.
     * Use one of the following formats:
     * * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}`
     * * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}`
     * As an alternative, you can use the `-` wildcard character instead of the
     * project ID:
     * * `projects/-/serviceAccounts/{EMAIL_ADDRESS}`
     * * `projects/-/serviceAccounts/{UNIQUE_ID}`
     * When possible, avoid using the `-` wildcard character, because it can cause
     * response messages to contain misleading error codes. For example, if you
     * try to get the service account
     * `projects/-/serviceAccounts/fake&#64;example.com`, which does not exist, the
     * response contains an HTTP `403 Forbidden` error instead of a `404 Not
     * Found` error.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. The ID of the project that owns the service account.
     *
     * Generated from protobuf field <code>string project_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * Output only. The ID of the project that owns the service account.
     *
     * Generated from protobuf field <code>string project_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id = $var;

        return $this;
    }

    /**
     * Output only. The unique, stable numeric ID for the service account.
     * Each service account retains its unique ID even if you delete the service
     * account. For example, if you delete a service account, then create a new
     * service account with the same name, the new service account has a different
     * unique ID than the deleted service account.
     *
     * Generated from protobuf field <code>string unique_id = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getUniqueId()
    {
        return $this->unique_id;
    }

    /**
     * Output only. The unique, stable numeric ID for the service account.
     * Each service account retains its unique ID even if you delete the service
     * account. For example, if you delete a service account, then create a new
     * service account with the same name, the new service account has a different
     * unique ID than the deleted service account.
     *
     * Generated from protobuf field <code>string unique_id = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setUniqueId($var)
    {
        GPBUtil::checkString($var, True);
        $this->unique_id = $var;

        return $this;
    }

    /**
     * Output only. The email address of the service account.
     *
     * Generated from protobuf field <code>string email = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Output only. The email address of the service account.
     *
     * Generated from protobuf field <code>string email = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->email = $var;

        return $this;
    }

    /**
     * Optional. A user-specified, human-readable name for the service account. The maximum
     * length is 100 UTF-8 bytes.
     *
     * Generated from protobuf field <code>string display_name = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Optional. A user-specified, human-readable name for the service account. The maximum
     * length is 100 UTF-8 bytes.
     *
     * Generated from protobuf field <code>string display_name = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Deprecated. Do not use.
     *
     * Generated from protobuf field <code>bytes etag = 7 [deprecated = true];</code>
     * @return string
     * @deprecated
     */
    public function getEtag()
    {
        @trigger_error('etag is deprecated.', E_USER_DEPRECATED);
        return $this->etag;
    }

    /**
     * Deprecated. Do not use.
     *
     * Generated from protobuf field <code>bytes etag = 7 [deprecated = true];</code>
     * @param string $var
     * @return $this
     * @deprecated
     */
    public function setEtag($var)
    {
        @trigger_error('etag is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkString($var, False);
        $this->etag = $var;

        return $this;
    }

    /**
     * Optional. A user-specified, human-readable description of the service account. The
     * maximum length is 256 UTF-8 bytes.
     *
     * Generated from protobuf field <code>string description = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Optional. A user-specified, human-readable description of the service account. The
     * maximum length is 256 UTF-8 bytes.
     *
     * Generated from protobuf field <code>string description = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Output only. The OAuth 2.0 client ID for the service account.
     *
     * Generated from protobuf field <code>string oauth2_client_id = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getOauth2ClientId()
    {
        return $this->oauth2_client_id;
    }

    /**
     * Output only. The OAuth 2.0 client ID for the service account.
     *
     * Generated from protobuf field <code>string oauth2_client_id = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setOauth2ClientId($var)
    {
        GPBUtil::checkString($var, True);
        $this->oauth2_client_id = $var;

        return $this;
    }

    /**
     * Output only. Whether the service account is disabled.
     *
     * Generated from protobuf field <code>bool disabled = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return bool
     */
    public function getDisabled()
    {
        return $this->disabled;
    }

    /**
     * Output only. Whether the service account is disabled.
     *
     * Generated from protobuf field <code>bool disabled = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param bool $var
     * @return $this
     */
    public function setDisabled($var)
    {
        GPBUtil::checkBool($var);
        $this->disabled = $var;

        return $this;
    }

}

