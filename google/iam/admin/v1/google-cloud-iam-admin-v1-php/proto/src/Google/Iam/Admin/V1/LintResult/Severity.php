<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/iam/admin/v1/iam.proto

namespace Google\Iam\Admin\V1\LintResult;

use UnexpectedValueException;

/**
 * Possible Severity values of an issued result.
 *
 * Protobuf type <code>google.iam.admin.v1.LintResult.Severity</code>
 */
class Severity
{
    /**
     * Severity is unspecified.
     *
     * Generated from protobuf enum <code>SEVERITY_UNSPECIFIED = 0;</code>
     */
    const SEVERITY_UNSPECIFIED = 0;
    /**
     * A validation unit returns an error only for critical issues. If an
     * attempt is made to set the problematic policy without rectifying the
     * critical issue, it causes the `setPolicy` operation to fail.
     *
     * Generated from protobuf enum <code>ERROR = 1;</code>
     */
    const ERROR = 1;
    /**
     * Any issue which is severe enough but does not cause an error.
     * For example, suspicious constructs in the input object will not
     * necessarily fail `setPolicy`, but there is a high likelihood that they
     * won't behave as expected during policy evaluation in `checkPolicy`.
     * This includes the following common scenarios:
     * - Unsatisfiable condition: Expired timestamp in date/time condition.
     * - Ineffective condition: Condition on a <member, role> pair which is
     *   granted unconditionally in another binding of the same policy.
     *
     * Generated from protobuf enum <code>WARNING = 2;</code>
     */
    const WARNING = 2;
    /**
     * Reserved for the issues that are not severe as `ERROR`/`WARNING`, but
     * need special handling. For instance, messages about skipped validation
     * units are issued as `NOTICE`.
     *
     * Generated from protobuf enum <code>NOTICE = 3;</code>
     */
    const NOTICE = 3;
    /**
     * Any informative statement which is not severe enough to raise
     * `ERROR`/`WARNING`/`NOTICE`, like auto-correction recommendations on the
     * input content. Note that current version of the linter does not utilize
     * `INFO`.
     *
     * Generated from protobuf enum <code>INFO = 4;</code>
     */
    const INFO = 4;
    /**
     * Deprecated severity level.
     *
     * Generated from protobuf enum <code>DEPRECATED = 5;</code>
     */
    const DEPRECATED = 5;

    private static $valueToName = [
        self::SEVERITY_UNSPECIFIED => 'SEVERITY_UNSPECIFIED',
        self::ERROR => 'ERROR',
        self::WARNING => 'WARNING',
        self::NOTICE => 'NOTICE',
        self::INFO => 'INFO',
        self::DEPRECATED => 'DEPRECATED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Severity::class, \Google\Iam\Admin\V1\LintResult_Severity::class);

