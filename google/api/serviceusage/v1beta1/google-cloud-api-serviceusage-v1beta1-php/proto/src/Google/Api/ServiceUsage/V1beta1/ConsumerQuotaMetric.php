<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/api/serviceusage/v1beta1/resources.proto

namespace Google\Api\ServiceUsage\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Consumer quota settings for a quota metric.
 *
 * Generated from protobuf message <code>google.api.serviceusage.v1beta1.ConsumerQuotaMetric</code>
 */
class ConsumerQuotaMetric extends \Google\Protobuf\Internal\Message
{
    /**
     * The resource name of the quota settings on this metric for this consumer.
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus`
     * The resource name is intended to be opaque and should not be parsed for
     * its component strings, since its representation could change in the future.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * The name of the metric.
     * An example name would be:
     * `compute.googleapis.com/cpus`
     *
     * Generated from protobuf field <code>string metric = 4;</code>
     */
    protected $metric = '';
    /**
     * The display name of the metric.
     * An example name would be:
     * `CPUs`
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     */
    protected $display_name = '';
    /**
     * The consumer quota for each quota limit defined on the metric.
     *
     * Generated from protobuf field <code>repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits = 3;</code>
     */
    private $consumer_quota_limits;
    /**
     * The quota limits targeting the descendant containers of the
     * consumer in request.
     * If the consumer in request is of type `organizations`
     * or `folders`, the field will list per-project limits in the metric; if the
     * consumer in request is of type `project`, the field will be empty.
     * The `quota_buckets` field of each descendant consumer quota limit will not
     * be populated.
     *
     * Generated from protobuf field <code>repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits = 6;</code>
     */
    private $descendant_consumer_quota_limits;
    /**
     * The units in which the metric value is reported.
     *
     * Generated from protobuf field <code>string unit = 5;</code>
     */
    protected $unit = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           The resource name of the quota settings on this metric for this consumer.
     *           An example name would be:
     *           `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus`
     *           The resource name is intended to be opaque and should not be parsed for
     *           its component strings, since its representation could change in the future.
     *     @type string $metric
     *           The name of the metric.
     *           An example name would be:
     *           `compute.googleapis.com/cpus`
     *     @type string $display_name
     *           The display name of the metric.
     *           An example name would be:
     *           `CPUs`
     *     @type \Google\Api\ServiceUsage\V1beta1\ConsumerQuotaLimit[]|\Google\Protobuf\Internal\RepeatedField $consumer_quota_limits
     *           The consumer quota for each quota limit defined on the metric.
     *     @type \Google\Api\ServiceUsage\V1beta1\ConsumerQuotaLimit[]|\Google\Protobuf\Internal\RepeatedField $descendant_consumer_quota_limits
     *           The quota limits targeting the descendant containers of the
     *           consumer in request.
     *           If the consumer in request is of type `organizations`
     *           or `folders`, the field will list per-project limits in the metric; if the
     *           consumer in request is of type `project`, the field will be empty.
     *           The `quota_buckets` field of each descendant consumer quota limit will not
     *           be populated.
     *     @type string $unit
     *           The units in which the metric value is reported.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Api\Serviceusage\V1Beta1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The resource name of the quota settings on this metric for this consumer.
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus`
     * The resource name is intended to be opaque and should not be parsed for
     * its component strings, since its representation could change in the future.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The resource name of the quota settings on this metric for this consumer.
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus`
     * The resource name is intended to be opaque and should not be parsed for
     * its component strings, since its representation could change in the future.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The name of the metric.
     * An example name would be:
     * `compute.googleapis.com/cpus`
     *
     * Generated from protobuf field <code>string metric = 4;</code>
     * @return string
     */
    public function getMetric()
    {
        return $this->metric;
    }

    /**
     * The name of the metric.
     * An example name would be:
     * `compute.googleapis.com/cpus`
     *
     * Generated from protobuf field <code>string metric = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setMetric($var)
    {
        GPBUtil::checkString($var, True);
        $this->metric = $var;

        return $this;
    }

    /**
     * The display name of the metric.
     * An example name would be:
     * `CPUs`
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * The display name of the metric.
     * An example name would be:
     * `CPUs`
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * The consumer quota for each quota limit defined on the metric.
     *
     * Generated from protobuf field <code>repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getConsumerQuotaLimits()
    {
        return $this->consumer_quota_limits;
    }

    /**
     * The consumer quota for each quota limit defined on the metric.
     *
     * Generated from protobuf field <code>repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits = 3;</code>
     * @param \Google\Api\ServiceUsage\V1beta1\ConsumerQuotaLimit[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setConsumerQuotaLimits($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Api\ServiceUsage\V1beta1\ConsumerQuotaLimit::class);
        $this->consumer_quota_limits = $arr;

        return $this;
    }

    /**
     * The quota limits targeting the descendant containers of the
     * consumer in request.
     * If the consumer in request is of type `organizations`
     * or `folders`, the field will list per-project limits in the metric; if the
     * consumer in request is of type `project`, the field will be empty.
     * The `quota_buckets` field of each descendant consumer quota limit will not
     * be populated.
     *
     * Generated from protobuf field <code>repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDescendantConsumerQuotaLimits()
    {
        return $this->descendant_consumer_quota_limits;
    }

    /**
     * The quota limits targeting the descendant containers of the
     * consumer in request.
     * If the consumer in request is of type `organizations`
     * or `folders`, the field will list per-project limits in the metric; if the
     * consumer in request is of type `project`, the field will be empty.
     * The `quota_buckets` field of each descendant consumer quota limit will not
     * be populated.
     *
     * Generated from protobuf field <code>repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits = 6;</code>
     * @param \Google\Api\ServiceUsage\V1beta1\ConsumerQuotaLimit[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDescendantConsumerQuotaLimits($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Api\ServiceUsage\V1beta1\ConsumerQuotaLimit::class);
        $this->descendant_consumer_quota_limits = $arr;

        return $this;
    }

    /**
     * The units in which the metric value is reported.
     *
     * Generated from protobuf field <code>string unit = 5;</code>
     * @return string
     */
    public function getUnit()
    {
        return $this->unit;
    }

    /**
     * The units in which the metric value is reported.
     *
     * Generated from protobuf field <code>string unit = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setUnit($var)
    {
        GPBUtil::checkString($var, True);
        $this->unit = $var;

        return $this;
    }

}

