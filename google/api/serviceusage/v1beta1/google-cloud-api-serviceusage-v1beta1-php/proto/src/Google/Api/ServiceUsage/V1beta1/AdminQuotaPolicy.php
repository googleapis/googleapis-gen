<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/api/serviceusage/v1beta1/resources.proto

namespace Google\Api\ServiceUsage\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Quota policy created by quota administrator.
 *
 * Generated from protobuf message <code>google.api.serviceusage.v1beta1.AdminQuotaPolicy</code>
 */
class AdminQuotaPolicy extends \Google\Protobuf\Internal\Message
{
    /**
     * The resource name of the policy.
     * This name is generated by the server when the policy is created.
     * Example names would be:
     * `organizations/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminQuotaPolicies/4a3f2c1d`
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * The quota policy value.
     * Can be any nonnegative integer, or -1 (unlimited quota).
     *
     * Generated from protobuf field <code>int64 policy_value = 2;</code>
     */
    protected $policy_value = 0;
    /**
     * If this map is nonempty, then this policy applies only to specific values
     * for dimensions defined in the limit unit.
     * For example, an policy on a limit with the unit `1/{project}/{region}`
     * could contain an entry with the key `region` and the value `us-east-1`;
     * the policy is only applied to quota consumed in that region.
     * This map has the following restrictions:
     * *   If `region` appears as a key, its value must be a valid Cloud region.
     * *   If `zone` appears as a key, its value must be a valid Cloud zone.
     * *   Keys other than `region` or `zone` are not valid.
     *
     * Generated from protobuf field <code>map<string, string> dimensions = 3;</code>
     */
    private $dimensions;
    /**
     * The name of the metric to which this policy applies.
     * An example name would be:
     * `compute.googleapis.com/cpus`
     *
     * Generated from protobuf field <code>string metric = 4;</code>
     */
    protected $metric = '';
    /**
     * The limit unit of the limit to which this policy applies.
     * An example unit would be:
     * `1/{project}/{region}`
     * Note that `{project}` and `{region}` are not placeholders in this example;
     * the literal characters `{` and `}` occur in the string.
     *
     * Generated from protobuf field <code>string unit = 5;</code>
     */
    protected $unit = '';
    /**
     * The cloud resource container at which the quota policy is created. The
     * format is `{container_type}/{container_number}`
     *
     * Generated from protobuf field <code>string container = 6;</code>
     */
    protected $container = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           The resource name of the policy.
     *           This name is generated by the server when the policy is created.
     *           Example names would be:
     *           `organizations/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminQuotaPolicies/4a3f2c1d`
     *     @type int|string $policy_value
     *           The quota policy value.
     *           Can be any nonnegative integer, or -1 (unlimited quota).
     *     @type array|\Google\Protobuf\Internal\MapField $dimensions
     *           If this map is nonempty, then this policy applies only to specific values
     *           for dimensions defined in the limit unit.
     *           For example, an policy on a limit with the unit `1/{project}/{region}`
     *           could contain an entry with the key `region` and the value `us-east-1`;
     *           the policy is only applied to quota consumed in that region.
     *           This map has the following restrictions:
     *           *   If `region` appears as a key, its value must be a valid Cloud region.
     *           *   If `zone` appears as a key, its value must be a valid Cloud zone.
     *           *   Keys other than `region` or `zone` are not valid.
     *     @type string $metric
     *           The name of the metric to which this policy applies.
     *           An example name would be:
     *           `compute.googleapis.com/cpus`
     *     @type string $unit
     *           The limit unit of the limit to which this policy applies.
     *           An example unit would be:
     *           `1/{project}/{region}`
     *           Note that `{project}` and `{region}` are not placeholders in this example;
     *           the literal characters `{` and `}` occur in the string.
     *     @type string $container
     *           The cloud resource container at which the quota policy is created. The
     *           format is `{container_type}/{container_number}`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Api\Serviceusage\V1Beta1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The resource name of the policy.
     * This name is generated by the server when the policy is created.
     * Example names would be:
     * `organizations/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminQuotaPolicies/4a3f2c1d`
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The resource name of the policy.
     * This name is generated by the server when the policy is created.
     * Example names would be:
     * `organizations/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminQuotaPolicies/4a3f2c1d`
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The quota policy value.
     * Can be any nonnegative integer, or -1 (unlimited quota).
     *
     * Generated from protobuf field <code>int64 policy_value = 2;</code>
     * @return int|string
     */
    public function getPolicyValue()
    {
        return $this->policy_value;
    }

    /**
     * The quota policy value.
     * Can be any nonnegative integer, or -1 (unlimited quota).
     *
     * Generated from protobuf field <code>int64 policy_value = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPolicyValue($var)
    {
        GPBUtil::checkInt64($var);
        $this->policy_value = $var;

        return $this;
    }

    /**
     * If this map is nonempty, then this policy applies only to specific values
     * for dimensions defined in the limit unit.
     * For example, an policy on a limit with the unit `1/{project}/{region}`
     * could contain an entry with the key `region` and the value `us-east-1`;
     * the policy is only applied to quota consumed in that region.
     * This map has the following restrictions:
     * *   If `region` appears as a key, its value must be a valid Cloud region.
     * *   If `zone` appears as a key, its value must be a valid Cloud zone.
     * *   Keys other than `region` or `zone` are not valid.
     *
     * Generated from protobuf field <code>map<string, string> dimensions = 3;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getDimensions()
    {
        return $this->dimensions;
    }

    /**
     * If this map is nonempty, then this policy applies only to specific values
     * for dimensions defined in the limit unit.
     * For example, an policy on a limit with the unit `1/{project}/{region}`
     * could contain an entry with the key `region` and the value `us-east-1`;
     * the policy is only applied to quota consumed in that region.
     * This map has the following restrictions:
     * *   If `region` appears as a key, its value must be a valid Cloud region.
     * *   If `zone` appears as a key, its value must be a valid Cloud zone.
     * *   Keys other than `region` or `zone` are not valid.
     *
     * Generated from protobuf field <code>map<string, string> dimensions = 3;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setDimensions($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->dimensions = $arr;

        return $this;
    }

    /**
     * The name of the metric to which this policy applies.
     * An example name would be:
     * `compute.googleapis.com/cpus`
     *
     * Generated from protobuf field <code>string metric = 4;</code>
     * @return string
     */
    public function getMetric()
    {
        return $this->metric;
    }

    /**
     * The name of the metric to which this policy applies.
     * An example name would be:
     * `compute.googleapis.com/cpus`
     *
     * Generated from protobuf field <code>string metric = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setMetric($var)
    {
        GPBUtil::checkString($var, True);
        $this->metric = $var;

        return $this;
    }

    /**
     * The limit unit of the limit to which this policy applies.
     * An example unit would be:
     * `1/{project}/{region}`
     * Note that `{project}` and `{region}` are not placeholders in this example;
     * the literal characters `{` and `}` occur in the string.
     *
     * Generated from protobuf field <code>string unit = 5;</code>
     * @return string
     */
    public function getUnit()
    {
        return $this->unit;
    }

    /**
     * The limit unit of the limit to which this policy applies.
     * An example unit would be:
     * `1/{project}/{region}`
     * Note that `{project}` and `{region}` are not placeholders in this example;
     * the literal characters `{` and `}` occur in the string.
     *
     * Generated from protobuf field <code>string unit = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setUnit($var)
    {
        GPBUtil::checkString($var, True);
        $this->unit = $var;

        return $this;
    }

    /**
     * The cloud resource container at which the quota policy is created. The
     * format is `{container_type}/{container_number}`
     *
     * Generated from protobuf field <code>string container = 6;</code>
     * @return string
     */
    public function getContainer()
    {
        return $this->container;
    }

    /**
     * The cloud resource container at which the quota policy is created. The
     * format is `{container_type}/{container_number}`
     *
     * Generated from protobuf field <code>string container = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setContainer($var)
    {
        GPBUtil::checkString($var, True);
        $this->container = $var;

        return $this;
    }

}

