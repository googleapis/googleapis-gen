// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.

package serviceusage_test

import (
	"context"

	serviceusage "cloud.google.com/go/api/serviceusage/apiv1beta1"
	"google.golang.org/api/iterator"
	serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"
)

func ExampleNewClient() {
	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use client.
	_ = c
}

func ExampleClient_EnableService() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.EnableServiceRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.EnableService(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	err = op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleClient_DisableService() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.DisableServiceRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.DisableService(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	err = op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleClient_GetService() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.GetServiceRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetService(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_ListServices() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.ListServicesRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListServices(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleClient_BatchEnableServices() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.BatchEnableServicesRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.BatchEnableServices(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	err = op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleClient_ListConsumerQuotaMetrics() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.ListConsumerQuotaMetricsRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListConsumerQuotaMetrics(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleClient_GetConsumerQuotaMetric() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.GetConsumerQuotaMetricRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetConsumerQuotaMetric(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_GetConsumerQuotaLimit() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.GetConsumerQuotaLimitRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetConsumerQuotaLimit(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_CreateAdminOverride() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.CreateAdminOverrideRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.CreateAdminOverride(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_UpdateAdminOverride() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.UpdateAdminOverrideRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.UpdateAdminOverride(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_DeleteAdminOverride() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.DeleteAdminOverrideRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.DeleteAdminOverride(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	err = op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleClient_ListAdminOverrides() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.ListAdminOverridesRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListAdminOverrides(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleClient_ImportAdminOverrides() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.ImportAdminOverridesRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.ImportAdminOverrides(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_CreateConsumerOverride() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.CreateConsumerOverrideRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.CreateConsumerOverride(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_UpdateConsumerOverride() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.UpdateConsumerOverrideRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.UpdateConsumerOverride(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_DeleteConsumerOverride() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.DeleteConsumerOverrideRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.DeleteConsumerOverride(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	err = op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleClient_ListConsumerOverrides() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.ListConsumerOverridesRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListConsumerOverrides(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleClient_ImportConsumerOverrides() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.ImportConsumerOverridesRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.ImportConsumerOverrides(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_GenerateServiceIdentity() {
	// import serviceusagepb "google.golang.org/genproto/googleapis/api/serviceusage/v1beta1"

	ctx := context.Background()
	c, err := serviceusage.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &serviceusagepb.GenerateServiceIdentityRequest{
		// TODO: Fill request struct fields.
	}
	op, err := c.GenerateServiceIdentity(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}
