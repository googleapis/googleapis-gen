<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2\Bucket\IamConfig;

use UnexpectedValueException;

/**
 * Public Access Prevention config values.
 *
 * Protobuf type <code>google.storage.v2.Bucket.IamConfig.PublicAccessPrevention</code>
 */
class PublicAccessPrevention
{
    /**
     * Does not prevent access from being granted to public members 'allUsers'
     * or 'allAuthenticatedUsers'. This setting may be enforced by Org Policy
     * at the project/folder/organization level.
     *
     * Generated from protobuf enum <code>PUBLIC_ACCESS_PREVENTION_UNSPECIFIED = 0;</code>
     */
    const PUBLIC_ACCESS_PREVENTION_UNSPECIFIED = 0;
    /**
     * Prevents access from being granted to public members 'allUsers' and
     * 'allAuthenticatedUsers'. Prevents attempts to grant new access to
     * public members.
     *
     * Generated from protobuf enum <code>ENFORCED = 1;</code>
     */
    const ENFORCED = 1;

    private static $valueToName = [
        self::PUBLIC_ACCESS_PREVENTION_UNSPECIFIED => 'PUBLIC_ACCESS_PREVENTION_UNSPECIFIED',
        self::ENFORCED => 'ENFORCED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PublicAccessPrevention::class, \Google\Storage\V2\Bucket_IamConfig_PublicAccessPrevention::class);

