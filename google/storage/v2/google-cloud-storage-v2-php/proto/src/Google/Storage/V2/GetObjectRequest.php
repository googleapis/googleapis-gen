<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for GetObject.
 *
 * Generated from protobuf message <code>google.storage.v2.GetObjectRequest</code>
 */
class GetObjectRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Name of the bucket in which the object resides.
     *
     * Generated from protobuf field <code>string bucket = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $bucket = '';
    /**
     * Required. Name of the object.
     *
     * Generated from protobuf field <code>string object = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $object = '';
    /**
     * If present, selects a specific revision of this object (as opposed to the
     * latest version, the default).
     *
     * Generated from protobuf field <code>int64 generation = 3;</code>
     */
    protected $generation = 0;
    /**
     * Makes the operation conditional on whether the object's current generation
     * matches the given value. Setting to 0 makes the operation succeed only if
     * there are no live versions of the object.
     *
     * Generated from protobuf field <code>int64 if_generation_match = 4;</code>
     */
    protected $if_generation_match = null;
    /**
     * Makes the operation conditional on whether the object's current generation
     * does not match the given value. If no live object exists, the precondition
     * fails. Setting to 0 makes the operation succeed only if there is a live
     * version of the object.
     *
     * Generated from protobuf field <code>int64 if_generation_not_match = 5;</code>
     */
    protected $if_generation_not_match = null;
    /**
     * Makes the operation conditional on whether the object's current
     * metageneration matches the given value.
     *
     * Generated from protobuf field <code>int64 if_metageneration_match = 6;</code>
     */
    protected $if_metageneration_match = null;
    /**
     * Makes the operation conditional on whether the object's current
     * metageneration does not match the given value.
     *
     * Generated from protobuf field <code>int64 if_metageneration_not_match = 7;</code>
     */
    protected $if_metageneration_not_match = null;
    /**
     * A set of parameters common to Storage API requests concerning an object.
     *
     * Generated from protobuf field <code>.google.storage.v2.CommonObjectRequestParams common_object_request_params = 8;</code>
     */
    protected $common_object_request_params = null;
    /**
     * A set of parameters common to all Storage API requests.
     *
     * Generated from protobuf field <code>.google.storage.v2.CommonRequestParams common_request_params = 9;</code>
     */
    protected $common_request_params = null;
    /**
     * Mask specifying which fields to read.
     * If no mask is specified, will default to all fields except metadata.acl and
     * metadata.owner.
     * * may be used to mean "all fields".
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask read_mask = 10;</code>
     */
    protected $read_mask = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $bucket
     *           Required. Name of the bucket in which the object resides.
     *     @type string $object
     *           Required. Name of the object.
     *     @type int|string $generation
     *           If present, selects a specific revision of this object (as opposed to the
     *           latest version, the default).
     *     @type int|string $if_generation_match
     *           Makes the operation conditional on whether the object's current generation
     *           matches the given value. Setting to 0 makes the operation succeed only if
     *           there are no live versions of the object.
     *     @type int|string $if_generation_not_match
     *           Makes the operation conditional on whether the object's current generation
     *           does not match the given value. If no live object exists, the precondition
     *           fails. Setting to 0 makes the operation succeed only if there is a live
     *           version of the object.
     *     @type int|string $if_metageneration_match
     *           Makes the operation conditional on whether the object's current
     *           metageneration matches the given value.
     *     @type int|string $if_metageneration_not_match
     *           Makes the operation conditional on whether the object's current
     *           metageneration does not match the given value.
     *     @type \Google\Storage\V2\CommonObjectRequestParams $common_object_request_params
     *           A set of parameters common to Storage API requests concerning an object.
     *     @type \Google\Storage\V2\CommonRequestParams $common_request_params
     *           A set of parameters common to all Storage API requests.
     *     @type \Google\Protobuf\FieldMask $read_mask
     *           Mask specifying which fields to read.
     *           If no mask is specified, will default to all fields except metadata.acl and
     *           metadata.owner.
     *           * may be used to mean "all fields".
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\V2\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Name of the bucket in which the object resides.
     *
     * Generated from protobuf field <code>string bucket = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getBucket()
    {
        return $this->bucket;
    }

    /**
     * Required. Name of the bucket in which the object resides.
     *
     * Generated from protobuf field <code>string bucket = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setBucket($var)
    {
        GPBUtil::checkString($var, True);
        $this->bucket = $var;

        return $this;
    }

    /**
     * Required. Name of the object.
     *
     * Generated from protobuf field <code>string object = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getObject()
    {
        return $this->object;
    }

    /**
     * Required. Name of the object.
     *
     * Generated from protobuf field <code>string object = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setObject($var)
    {
        GPBUtil::checkString($var, True);
        $this->object = $var;

        return $this;
    }

    /**
     * If present, selects a specific revision of this object (as opposed to the
     * latest version, the default).
     *
     * Generated from protobuf field <code>int64 generation = 3;</code>
     * @return int|string
     */
    public function getGeneration()
    {
        return $this->generation;
    }

    /**
     * If present, selects a specific revision of this object (as opposed to the
     * latest version, the default).
     *
     * Generated from protobuf field <code>int64 generation = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setGeneration($var)
    {
        GPBUtil::checkInt64($var);
        $this->generation = $var;

        return $this;
    }

    /**
     * Makes the operation conditional on whether the object's current generation
     * matches the given value. Setting to 0 makes the operation succeed only if
     * there are no live versions of the object.
     *
     * Generated from protobuf field <code>int64 if_generation_match = 4;</code>
     * @return int|string
     */
    public function getIfGenerationMatch()
    {
        return isset($this->if_generation_match) ? $this->if_generation_match : 0;
    }

    public function hasIfGenerationMatch()
    {
        return isset($this->if_generation_match);
    }

    public function clearIfGenerationMatch()
    {
        unset($this->if_generation_match);
    }

    /**
     * Makes the operation conditional on whether the object's current generation
     * matches the given value. Setting to 0 makes the operation succeed only if
     * there are no live versions of the object.
     *
     * Generated from protobuf field <code>int64 if_generation_match = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIfGenerationMatch($var)
    {
        GPBUtil::checkInt64($var);
        $this->if_generation_match = $var;

        return $this;
    }

    /**
     * Makes the operation conditional on whether the object's current generation
     * does not match the given value. If no live object exists, the precondition
     * fails. Setting to 0 makes the operation succeed only if there is a live
     * version of the object.
     *
     * Generated from protobuf field <code>int64 if_generation_not_match = 5;</code>
     * @return int|string
     */
    public function getIfGenerationNotMatch()
    {
        return isset($this->if_generation_not_match) ? $this->if_generation_not_match : 0;
    }

    public function hasIfGenerationNotMatch()
    {
        return isset($this->if_generation_not_match);
    }

    public function clearIfGenerationNotMatch()
    {
        unset($this->if_generation_not_match);
    }

    /**
     * Makes the operation conditional on whether the object's current generation
     * does not match the given value. If no live object exists, the precondition
     * fails. Setting to 0 makes the operation succeed only if there is a live
     * version of the object.
     *
     * Generated from protobuf field <code>int64 if_generation_not_match = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIfGenerationNotMatch($var)
    {
        GPBUtil::checkInt64($var);
        $this->if_generation_not_match = $var;

        return $this;
    }

    /**
     * Makes the operation conditional on whether the object's current
     * metageneration matches the given value.
     *
     * Generated from protobuf field <code>int64 if_metageneration_match = 6;</code>
     * @return int|string
     */
    public function getIfMetagenerationMatch()
    {
        return isset($this->if_metageneration_match) ? $this->if_metageneration_match : 0;
    }

    public function hasIfMetagenerationMatch()
    {
        return isset($this->if_metageneration_match);
    }

    public function clearIfMetagenerationMatch()
    {
        unset($this->if_metageneration_match);
    }

    /**
     * Makes the operation conditional on whether the object's current
     * metageneration matches the given value.
     *
     * Generated from protobuf field <code>int64 if_metageneration_match = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIfMetagenerationMatch($var)
    {
        GPBUtil::checkInt64($var);
        $this->if_metageneration_match = $var;

        return $this;
    }

    /**
     * Makes the operation conditional on whether the object's current
     * metageneration does not match the given value.
     *
     * Generated from protobuf field <code>int64 if_metageneration_not_match = 7;</code>
     * @return int|string
     */
    public function getIfMetagenerationNotMatch()
    {
        return isset($this->if_metageneration_not_match) ? $this->if_metageneration_not_match : 0;
    }

    public function hasIfMetagenerationNotMatch()
    {
        return isset($this->if_metageneration_not_match);
    }

    public function clearIfMetagenerationNotMatch()
    {
        unset($this->if_metageneration_not_match);
    }

    /**
     * Makes the operation conditional on whether the object's current
     * metageneration does not match the given value.
     *
     * Generated from protobuf field <code>int64 if_metageneration_not_match = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIfMetagenerationNotMatch($var)
    {
        GPBUtil::checkInt64($var);
        $this->if_metageneration_not_match = $var;

        return $this;
    }

    /**
     * A set of parameters common to Storage API requests concerning an object.
     *
     * Generated from protobuf field <code>.google.storage.v2.CommonObjectRequestParams common_object_request_params = 8;</code>
     * @return \Google\Storage\V2\CommonObjectRequestParams|null
     */
    public function getCommonObjectRequestParams()
    {
        return isset($this->common_object_request_params) ? $this->common_object_request_params : null;
    }

    public function hasCommonObjectRequestParams()
    {
        return isset($this->common_object_request_params);
    }

    public function clearCommonObjectRequestParams()
    {
        unset($this->common_object_request_params);
    }

    /**
     * A set of parameters common to Storage API requests concerning an object.
     *
     * Generated from protobuf field <code>.google.storage.v2.CommonObjectRequestParams common_object_request_params = 8;</code>
     * @param \Google\Storage\V2\CommonObjectRequestParams $var
     * @return $this
     */
    public function setCommonObjectRequestParams($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\CommonObjectRequestParams::class);
        $this->common_object_request_params = $var;

        return $this;
    }

    /**
     * A set of parameters common to all Storage API requests.
     *
     * Generated from protobuf field <code>.google.storage.v2.CommonRequestParams common_request_params = 9;</code>
     * @return \Google\Storage\V2\CommonRequestParams|null
     */
    public function getCommonRequestParams()
    {
        return isset($this->common_request_params) ? $this->common_request_params : null;
    }

    public function hasCommonRequestParams()
    {
        return isset($this->common_request_params);
    }

    public function clearCommonRequestParams()
    {
        unset($this->common_request_params);
    }

    /**
     * A set of parameters common to all Storage API requests.
     *
     * Generated from protobuf field <code>.google.storage.v2.CommonRequestParams common_request_params = 9;</code>
     * @param \Google\Storage\V2\CommonRequestParams $var
     * @return $this
     */
    public function setCommonRequestParams($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\CommonRequestParams::class);
        $this->common_request_params = $var;

        return $this;
    }

    /**
     * Mask specifying which fields to read.
     * If no mask is specified, will default to all fields except metadata.acl and
     * metadata.owner.
     * * may be used to mean "all fields".
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask read_mask = 10;</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getReadMask()
    {
        return isset($this->read_mask) ? $this->read_mask : null;
    }

    public function hasReadMask()
    {
        return isset($this->read_mask);
    }

    public function clearReadMask()
    {
        unset($this->read_mask);
    }

    /**
     * Mask specifying which fields to read.
     * If no mask is specified, will default to all fields except metadata.acl and
     * metadata.owner.
     * * may be used to mean "all fields".
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask read_mask = 10;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setReadMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->read_mask = $var;

        return $this;
    }

}

