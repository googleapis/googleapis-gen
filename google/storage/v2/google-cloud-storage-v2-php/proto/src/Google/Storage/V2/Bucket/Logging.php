<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2\Bucket;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Logging-related properties of a bucket.
 *
 * Generated from protobuf message <code>google.storage.v2.Bucket.Logging</code>
 */
class Logging extends \Google\Protobuf\Internal\Message
{
    /**
     * The destination bucket where the current bucket's logs should be placed.
     *
     * Generated from protobuf field <code>string log_bucket = 1;</code>
     */
    protected $log_bucket = '';
    /**
     * A prefix for log object names.
     *
     * Generated from protobuf field <code>string log_object_prefix = 2;</code>
     */
    protected $log_object_prefix = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $log_bucket
     *           The destination bucket where the current bucket's logs should be placed.
     *     @type string $log_object_prefix
     *           A prefix for log object names.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\V2\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     * The destination bucket where the current bucket's logs should be placed.
     *
     * Generated from protobuf field <code>string log_bucket = 1;</code>
     * @return string
     */
    public function getLogBucket()
    {
        return $this->log_bucket;
    }

    /**
     * The destination bucket where the current bucket's logs should be placed.
     *
     * Generated from protobuf field <code>string log_bucket = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setLogBucket($var)
    {
        GPBUtil::checkString($var, True);
        $this->log_bucket = $var;

        return $this;
    }

    /**
     * A prefix for log object names.
     *
     * Generated from protobuf field <code>string log_object_prefix = 2;</code>
     * @return string
     */
    public function getLogObjectPrefix()
    {
        return $this->log_object_prefix;
    }

    /**
     * A prefix for log object names.
     *
     * Generated from protobuf field <code>string log_object_prefix = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLogObjectPrefix($var)
    {
        GPBUtil::checkString($var, True);
        $this->log_object_prefix = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Logging::class, \Google\Storage\V2\Bucket_Logging::class);

