<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2\ServiceConstants;

use UnexpectedValueException;

/**
 * A collection of constant values meaningful to the Storage API.
 *
 * Protobuf type <code>google.storage.v2.ServiceConstants.Values</code>
 */
class Values
{
    /**
     * Unused. Proto3 requires first enum to be 0.
     *
     * Generated from protobuf enum <code>VALUES_UNSPECIFIED = 0;</code>
     */
    const VALUES_UNSPECIFIED = 0;
    /**
     * The maximum size chunk that can will be returned in a single
     * ReadRequest.
     * 2 MiB.
     *
     * Generated from protobuf enum <code>MAX_READ_CHUNK_BYTES = 2097152;</code>
     */
    const MAX_READ_CHUNK_BYTES = 2097152;
    /**
     * The maximum size chunk that can be sent in a single WriteObjectRequest.
     * 2 MiB.
     *
     * Generated from protobuf enum <code>MAX_WRITE_CHUNK_BYTES = 2097152;</code>
     */
    const MAX_WRITE_CHUNK_BYTES = 2097152;
    /**
     * The maximum size of an object in MB - whether written in a single stream
     * or composed from multiple other objects.
     * 5 TiB.
     *
     * Generated from protobuf enum <code>MAX_OBJECT_SIZE_MB = 5242880;</code>
     */
    const MAX_OBJECT_SIZE_MB = 5242880;
    /**
     * The maximum length field name that can be sent in a single
     * custom metadata field.
     * 1 KiB.
     *
     * Generated from protobuf enum <code>MAX_CUSTOM_METADATA_FIELD_NAME_BYTES = 1024;</code>
     */
    const MAX_CUSTOM_METADATA_FIELD_NAME_BYTES = 1024;
    /**
     * The maximum length field value that can be sent in a single
     * custom_metadata field.
     * 4 KiB.
     *
     * Generated from protobuf enum <code>MAX_CUSTOM_METADATA_FIELD_VALUE_BYTES = 4096;</code>
     */
    const MAX_CUSTOM_METADATA_FIELD_VALUE_BYTES = 4096;
    /**
     * The maximum total bytes that can be populated into all field names and
     * values of the custom_metadata for one object.
     * 8 KiB.
     *
     * Generated from protobuf enum <code>MAX_CUSTOM_METADATA_TOTAL_SIZE_BYTES = 8192;</code>
     */
    const MAX_CUSTOM_METADATA_TOTAL_SIZE_BYTES = 8192;
    /**
     * The maximum total bytes that can be populated into all bucket metadata
     * fields.
     * 20 KiB.
     *
     * Generated from protobuf enum <code>MAX_BUCKET_METADATA_TOTAL_SIZE_BYTES = 20480;</code>
     */
    const MAX_BUCKET_METADATA_TOTAL_SIZE_BYTES = 20480;
    /**
     * The maximum number of NotificationConfigs that can be registered
     * for a given bucket.
     *
     * Generated from protobuf enum <code>MAX_NOTIFICATION_CONFIGS_PER_BUCKET = 100;</code>
     */
    const MAX_NOTIFICATION_CONFIGS_PER_BUCKET = 100;
    /**
     * The maximum number of LifecycleRules that can be registered for a given
     * bucket.
     *
     * Generated from protobuf enum <code>MAX_LIFECYCLE_RULES_PER_BUCKET = 100;</code>
     */
    const MAX_LIFECYCLE_RULES_PER_BUCKET = 100;
    /**
     * The maximum number of custom attributes per NotificationConfigs.
     *
     * Generated from protobuf enum <code>MAX_NOTIFICATION_CUSTOM_ATTRIBUTES = 5;</code>
     */
    const MAX_NOTIFICATION_CUSTOM_ATTRIBUTES = 5;
    /**
     * The maximum length of a custom attribute key included in
     * NotificationConfig.
     *
     * Generated from protobuf enum <code>MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_KEY_LENGTH = 256;</code>
     */
    const MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_KEY_LENGTH = 256;
    /**
     * The maximum length of a custom attribute value included in a
     * NotificationConfig.
     *
     * Generated from protobuf enum <code>MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_VALUE_LENGTH = 1024;</code>
     */
    const MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_VALUE_LENGTH = 1024;
    /**
     * The maximum number of key/value entries per bucket label.
     *
     * Generated from protobuf enum <code>MAX_LABELS_ENTRIES_COUNT = 64;</code>
     */
    const MAX_LABELS_ENTRIES_COUNT = 64;
    /**
     * The maximum character length of the key or value in a bucket
     * label map.
     *
     * Generated from protobuf enum <code>MAX_LABELS_KEY_VALUE_LENGTH = 63;</code>
     */
    const MAX_LABELS_KEY_VALUE_LENGTH = 63;
    /**
     * The maximum byte size of the key or value in a bucket label
     * map.
     *
     * Generated from protobuf enum <code>MAX_LABELS_KEY_VALUE_BYTES = 128;</code>
     */
    const MAX_LABELS_KEY_VALUE_BYTES = 128;
    /**
     * The maximum number of object IDs that can be included in a
     * DeleteObjectsRequest.
     *
     * Generated from protobuf enum <code>MAX_OBJECT_IDS_PER_DELETE_OBJECTS_REQUEST = 1000;</code>
     */
    const MAX_OBJECT_IDS_PER_DELETE_OBJECTS_REQUEST = 1000;
    /**
     * The maximum number of days for which a token returned by the
     * GetListObjectsSplitPoints RPC is valid.
     *
     * Generated from protobuf enum <code>SPLIT_TOKEN_MAX_VALID_DAYS = 14;</code>
     */
    const SPLIT_TOKEN_MAX_VALID_DAYS = 14;

    private static $valueToName = [
        self::VALUES_UNSPECIFIED => 'VALUES_UNSPECIFIED',
        self::MAX_READ_CHUNK_BYTES => 'MAX_READ_CHUNK_BYTES',
        self::MAX_WRITE_CHUNK_BYTES => 'MAX_WRITE_CHUNK_BYTES',
        self::MAX_OBJECT_SIZE_MB => 'MAX_OBJECT_SIZE_MB',
        self::MAX_CUSTOM_METADATA_FIELD_NAME_BYTES => 'MAX_CUSTOM_METADATA_FIELD_NAME_BYTES',
        self::MAX_CUSTOM_METADATA_FIELD_VALUE_BYTES => 'MAX_CUSTOM_METADATA_FIELD_VALUE_BYTES',
        self::MAX_CUSTOM_METADATA_TOTAL_SIZE_BYTES => 'MAX_CUSTOM_METADATA_TOTAL_SIZE_BYTES',
        self::MAX_BUCKET_METADATA_TOTAL_SIZE_BYTES => 'MAX_BUCKET_METADATA_TOTAL_SIZE_BYTES',
        self::MAX_NOTIFICATION_CONFIGS_PER_BUCKET => 'MAX_NOTIFICATION_CONFIGS_PER_BUCKET',
        self::MAX_LIFECYCLE_RULES_PER_BUCKET => 'MAX_LIFECYCLE_RULES_PER_BUCKET',
        self::MAX_NOTIFICATION_CUSTOM_ATTRIBUTES => 'MAX_NOTIFICATION_CUSTOM_ATTRIBUTES',
        self::MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_KEY_LENGTH => 'MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_KEY_LENGTH',
        self::MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_VALUE_LENGTH => 'MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_VALUE_LENGTH',
        self::MAX_LABELS_ENTRIES_COUNT => 'MAX_LABELS_ENTRIES_COUNT',
        self::MAX_LABELS_KEY_VALUE_LENGTH => 'MAX_LABELS_KEY_VALUE_LENGTH',
        self::MAX_LABELS_KEY_VALUE_BYTES => 'MAX_LABELS_KEY_VALUE_BYTES',
        self::MAX_OBJECT_IDS_PER_DELETE_OBJECTS_REQUEST => 'MAX_OBJECT_IDS_PER_DELETE_OBJECTS_REQUEST',
        self::SPLIT_TOKEN_MAX_VALID_DAYS => 'SPLIT_TOKEN_MAX_VALID_DAYS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Values::class, \Google\Storage\V2\ServiceConstants_Values::class);

