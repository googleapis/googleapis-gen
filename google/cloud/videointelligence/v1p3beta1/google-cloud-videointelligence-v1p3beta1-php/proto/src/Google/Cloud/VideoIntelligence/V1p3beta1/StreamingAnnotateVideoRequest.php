<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/videointelligence/v1p3beta1/video_intelligence.proto

namespace Google\Cloud\VideoIntelligence\V1p3beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The top-level message sent by the client for the `StreamingAnnotateVideo`
 * method. Multiple `StreamingAnnotateVideoRequest` messages are sent.
 * The first message must only contain a `StreamingVideoConfig` message.
 * All subsequent messages must only contain `input_content` data.
 *
 * Generated from protobuf message <code>google.cloud.videointelligence.v1p3beta1.StreamingAnnotateVideoRequest</code>
 */
class StreamingAnnotateVideoRequest extends \Google\Protobuf\Internal\Message
{
    protected $streaming_request;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\VideoIntelligence\V1p3beta1\StreamingVideoConfig $video_config
     *           Provides information to the annotator, specifing how to process the
     *           request. The first `AnnotateStreamingVideoRequest` message must only
     *           contain a `video_config` message.
     *     @type string $input_content
     *           The video data to be annotated. Chunks of video data are sequentially
     *           sent in `StreamingAnnotateVideoRequest` messages. Except the initial
     *           `StreamingAnnotateVideoRequest` message containing only
     *           `video_config`, all subsequent `AnnotateStreamingVideoRequest`
     *           messages must only contain `input_content` field.
     *           Note: as with all bytes fields, protobuffers use a pure binary
     *           representation (not base64).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Videointelligence\V1P3Beta1\VideoIntelligence::initOnce();
        parent::__construct($data);
    }

    /**
     * Provides information to the annotator, specifing how to process the
     * request. The first `AnnotateStreamingVideoRequest` message must only
     * contain a `video_config` message.
     *
     * Generated from protobuf field <code>.google.cloud.videointelligence.v1p3beta1.StreamingVideoConfig video_config = 1;</code>
     * @return \Google\Cloud\VideoIntelligence\V1p3beta1\StreamingVideoConfig
     */
    public function getVideoConfig()
    {
        return $this->readOneof(1);
    }

    public function hasVideoConfig()
    {
        return $this->hasOneof(1);
    }

    /**
     * Provides information to the annotator, specifing how to process the
     * request. The first `AnnotateStreamingVideoRequest` message must only
     * contain a `video_config` message.
     *
     * Generated from protobuf field <code>.google.cloud.videointelligence.v1p3beta1.StreamingVideoConfig video_config = 1;</code>
     * @param \Google\Cloud\VideoIntelligence\V1p3beta1\StreamingVideoConfig $var
     * @return $this
     */
    public function setVideoConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VideoIntelligence\V1p3beta1\StreamingVideoConfig::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * The video data to be annotated. Chunks of video data are sequentially
     * sent in `StreamingAnnotateVideoRequest` messages. Except the initial
     * `StreamingAnnotateVideoRequest` message containing only
     * `video_config`, all subsequent `AnnotateStreamingVideoRequest`
     * messages must only contain `input_content` field.
     * Note: as with all bytes fields, protobuffers use a pure binary
     * representation (not base64).
     *
     * Generated from protobuf field <code>bytes input_content = 2;</code>
     * @return string
     */
    public function getInputContent()
    {
        return $this->readOneof(2);
    }

    public function hasInputContent()
    {
        return $this->hasOneof(2);
    }

    /**
     * The video data to be annotated. Chunks of video data are sequentially
     * sent in `StreamingAnnotateVideoRequest` messages. Except the initial
     * `StreamingAnnotateVideoRequest` message containing only
     * `video_config`, all subsequent `AnnotateStreamingVideoRequest`
     * messages must only contain `input_content` field.
     * Note: as with all bytes fields, protobuffers use a pure binary
     * representation (not base64).
     *
     * Generated from protobuf field <code>bytes input_content = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInputContent($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getStreamingRequest()
    {
        return $this->whichOneof("streaming_request");
    }

}

