<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/osconfig/v1alpha/os_policy_assignments.proto

namespace Google\Cloud\OsConfig\V1alpha\OSPolicyAssignment;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message to represent the filters to select VMs for an assignment
 *
 * Generated from protobuf message <code>google.cloud.osconfig.v1alpha.OSPolicyAssignment.InstanceFilter</code>
 */
class InstanceFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * Target all VMs in the project. If true, no other criteria is
     * permitted.
     *
     * Generated from protobuf field <code>bool all = 1;</code>
     */
    protected $all = false;
    /**
     * A VM is included if it's OS short name matches with any of the
     * values provided in this list.
     *
     * Generated from protobuf field <code>repeated string os_short_names = 2;</code>
     */
    private $os_short_names;
    /**
     * List of label sets used for VM inclusion.
     * If the list has more than one `LabelSet`, the VM is included if any
     * of the label sets are applicable for the VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1alpha.OSPolicyAssignment.LabelSet inclusion_labels = 3;</code>
     */
    private $inclusion_labels;
    /**
     * List of label sets used for VM exclusion.
     * If the list has more than one label set, the VM is excluded if any
     * of the label sets are applicable for the VM.
     * This filter is applied last in the filtering chain and therefore a
     * VM is guaranteed to be excluded if it satisfies one of the below
     * label sets.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1alpha.OSPolicyAssignment.LabelSet exclusion_labels = 4;</code>
     */
    private $exclusion_labels;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $all
     *           Target all VMs in the project. If true, no other criteria is
     *           permitted.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $os_short_names
     *           A VM is included if it's OS short name matches with any of the
     *           values provided in this list.
     *     @type \Google\Cloud\OsConfig\V1alpha\OSPolicyAssignment\LabelSet[]|\Google\Protobuf\Internal\RepeatedField $inclusion_labels
     *           List of label sets used for VM inclusion.
     *           If the list has more than one `LabelSet`, the VM is included if any
     *           of the label sets are applicable for the VM.
     *     @type \Google\Cloud\OsConfig\V1alpha\OSPolicyAssignment\LabelSet[]|\Google\Protobuf\Internal\RepeatedField $exclusion_labels
     *           List of label sets used for VM exclusion.
     *           If the list has more than one label set, the VM is excluded if any
     *           of the label sets are applicable for the VM.
     *           This filter is applied last in the filtering chain and therefore a
     *           VM is guaranteed to be excluded if it satisfies one of the below
     *           label sets.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Osconfig\V1Alpha\OsPolicyAssignments::initOnce();
        parent::__construct($data);
    }

    /**
     * Target all VMs in the project. If true, no other criteria is
     * permitted.
     *
     * Generated from protobuf field <code>bool all = 1;</code>
     * @return bool
     */
    public function getAll()
    {
        return $this->all;
    }

    /**
     * Target all VMs in the project. If true, no other criteria is
     * permitted.
     *
     * Generated from protobuf field <code>bool all = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setAll($var)
    {
        GPBUtil::checkBool($var);
        $this->all = $var;

        return $this;
    }

    /**
     * A VM is included if it's OS short name matches with any of the
     * values provided in this list.
     *
     * Generated from protobuf field <code>repeated string os_short_names = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getOsShortNames()
    {
        return $this->os_short_names;
    }

    /**
     * A VM is included if it's OS short name matches with any of the
     * values provided in this list.
     *
     * Generated from protobuf field <code>repeated string os_short_names = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setOsShortNames($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->os_short_names = $arr;

        return $this;
    }

    /**
     * List of label sets used for VM inclusion.
     * If the list has more than one `LabelSet`, the VM is included if any
     * of the label sets are applicable for the VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1alpha.OSPolicyAssignment.LabelSet inclusion_labels = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInclusionLabels()
    {
        return $this->inclusion_labels;
    }

    /**
     * List of label sets used for VM inclusion.
     * If the list has more than one `LabelSet`, the VM is included if any
     * of the label sets are applicable for the VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1alpha.OSPolicyAssignment.LabelSet inclusion_labels = 3;</code>
     * @param \Google\Cloud\OsConfig\V1alpha\OSPolicyAssignment\LabelSet[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInclusionLabels($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\OsConfig\V1alpha\OSPolicyAssignment\LabelSet::class);
        $this->inclusion_labels = $arr;

        return $this;
    }

    /**
     * List of label sets used for VM exclusion.
     * If the list has more than one label set, the VM is excluded if any
     * of the label sets are applicable for the VM.
     * This filter is applied last in the filtering chain and therefore a
     * VM is guaranteed to be excluded if it satisfies one of the below
     * label sets.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1alpha.OSPolicyAssignment.LabelSet exclusion_labels = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getExclusionLabels()
    {
        return $this->exclusion_labels;
    }

    /**
     * List of label sets used for VM exclusion.
     * If the list has more than one label set, the VM is excluded if any
     * of the label sets are applicable for the VM.
     * This filter is applied last in the filtering chain and therefore a
     * VM is guaranteed to be excluded if it satisfies one of the below
     * label sets.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1alpha.OSPolicyAssignment.LabelSet exclusion_labels = 4;</code>
     * @param \Google\Cloud\OsConfig\V1alpha\OSPolicyAssignment\LabelSet[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setExclusionLabels($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\OsConfig\V1alpha\OSPolicyAssignment\LabelSet::class);
        $this->exclusion_labels = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InstanceFilter::class, \Google\Cloud\OsConfig\V1alpha\OSPolicyAssignment_InstanceFilter::class);

