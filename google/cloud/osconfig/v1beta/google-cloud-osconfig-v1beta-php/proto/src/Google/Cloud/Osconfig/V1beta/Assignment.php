<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/osconfig/v1beta/guest_policies.proto

namespace Google\Cloud\Osconfig\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An assignment represents the group or groups of VM instances that the policy
 * applies to.
 * If an assignment is empty, it applies to all VM instances. Otherwise, the
 * targeted VM instances must meet all the criteria specified. So if both
 * labels and zones are specified, the policy applies to VM instances with those
 * labels and in those zones.
 *
 * Generated from protobuf message <code>google.cloud.osconfig.v1beta.Assignment</code>
 */
class Assignment extends \Google\Protobuf\Internal\Message
{
    /**
     * Targets instances matching at least one of these label sets. This allows
     * an assignment to target disparate groups, for example "env=prod or
     * env=staging".
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Assignment.GroupLabel group_labels = 1;</code>
     */
    private $group_labels;
    /**
     * Targets instances in any of these zones. Leave empty to target instances
     * in any zone.
     * Zonal targeting is uncommon and is supported to facilitate the management
     * of changes by zone.
     *
     * Generated from protobuf field <code>repeated string zones = 2;</code>
     */
    private $zones;
    /**
     * Targets any of the instances specified. Instances are specified by their
     * URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`.
     * Instance targeting is uncommon and is supported to facilitate the
     * management of changes by the instance or to target specific VM instances
     * for development and testing.
     * Only supported for project-level policies and must reference instances
     * within this project.
     *
     * Generated from protobuf field <code>repeated string instances = 3;</code>
     */
    private $instances;
    /**
     * Targets VM instances whose name starts with one of these prefixes.
     * Like labels, this is another way to group VM instances when targeting
     * configs, for example prefix="prod-".
     * Only supported for project-level policies.
     *
     * Generated from protobuf field <code>repeated string instance_name_prefixes = 4;</code>
     */
    private $instance_name_prefixes;
    /**
     * Targets VM instances matching at least one of the following OS types.
     * VM instances must match all supplied criteria for a given OsType to be
     * included.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Assignment.OsType os_types = 5;</code>
     */
    private $os_types;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Osconfig\V1beta\Assignment\GroupLabel[]|\Google\Protobuf\Internal\RepeatedField $group_labels
     *           Targets instances matching at least one of these label sets. This allows
     *           an assignment to target disparate groups, for example "env=prod or
     *           env=staging".
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $zones
     *           Targets instances in any of these zones. Leave empty to target instances
     *           in any zone.
     *           Zonal targeting is uncommon and is supported to facilitate the management
     *           of changes by zone.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $instances
     *           Targets any of the instances specified. Instances are specified by their
     *           URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`.
     *           Instance targeting is uncommon and is supported to facilitate the
     *           management of changes by the instance or to target specific VM instances
     *           for development and testing.
     *           Only supported for project-level policies and must reference instances
     *           within this project.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $instance_name_prefixes
     *           Targets VM instances whose name starts with one of these prefixes.
     *           Like labels, this is another way to group VM instances when targeting
     *           configs, for example prefix="prod-".
     *           Only supported for project-level policies.
     *     @type \Google\Cloud\Osconfig\V1beta\Assignment\OsType[]|\Google\Protobuf\Internal\RepeatedField $os_types
     *           Targets VM instances matching at least one of the following OS types.
     *           VM instances must match all supplied criteria for a given OsType to be
     *           included.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Osconfig\V1Beta\GuestPolicies::initOnce();
        parent::__construct($data);
    }

    /**
     * Targets instances matching at least one of these label sets. This allows
     * an assignment to target disparate groups, for example "env=prod or
     * env=staging".
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Assignment.GroupLabel group_labels = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGroupLabels()
    {
        return $this->group_labels;
    }

    /**
     * Targets instances matching at least one of these label sets. This allows
     * an assignment to target disparate groups, for example "env=prod or
     * env=staging".
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Assignment.GroupLabel group_labels = 1;</code>
     * @param \Google\Cloud\Osconfig\V1beta\Assignment\GroupLabel[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGroupLabels($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Osconfig\V1beta\Assignment\GroupLabel::class);
        $this->group_labels = $arr;

        return $this;
    }

    /**
     * Targets instances in any of these zones. Leave empty to target instances
     * in any zone.
     * Zonal targeting is uncommon and is supported to facilitate the management
     * of changes by zone.
     *
     * Generated from protobuf field <code>repeated string zones = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getZones()
    {
        return $this->zones;
    }

    /**
     * Targets instances in any of these zones. Leave empty to target instances
     * in any zone.
     * Zonal targeting is uncommon and is supported to facilitate the management
     * of changes by zone.
     *
     * Generated from protobuf field <code>repeated string zones = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setZones($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->zones = $arr;

        return $this;
    }

    /**
     * Targets any of the instances specified. Instances are specified by their
     * URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`.
     * Instance targeting is uncommon and is supported to facilitate the
     * management of changes by the instance or to target specific VM instances
     * for development and testing.
     * Only supported for project-level policies and must reference instances
     * within this project.
     *
     * Generated from protobuf field <code>repeated string instances = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInstances()
    {
        return $this->instances;
    }

    /**
     * Targets any of the instances specified. Instances are specified by their
     * URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`.
     * Instance targeting is uncommon and is supported to facilitate the
     * management of changes by the instance or to target specific VM instances
     * for development and testing.
     * Only supported for project-level policies and must reference instances
     * within this project.
     *
     * Generated from protobuf field <code>repeated string instances = 3;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInstances($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->instances = $arr;

        return $this;
    }

    /**
     * Targets VM instances whose name starts with one of these prefixes.
     * Like labels, this is another way to group VM instances when targeting
     * configs, for example prefix="prod-".
     * Only supported for project-level policies.
     *
     * Generated from protobuf field <code>repeated string instance_name_prefixes = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInstanceNamePrefixes()
    {
        return $this->instance_name_prefixes;
    }

    /**
     * Targets VM instances whose name starts with one of these prefixes.
     * Like labels, this is another way to group VM instances when targeting
     * configs, for example prefix="prod-".
     * Only supported for project-level policies.
     *
     * Generated from protobuf field <code>repeated string instance_name_prefixes = 4;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInstanceNamePrefixes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->instance_name_prefixes = $arr;

        return $this;
    }

    /**
     * Targets VM instances matching at least one of the following OS types.
     * VM instances must match all supplied criteria for a given OsType to be
     * included.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Assignment.OsType os_types = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getOsTypes()
    {
        return $this->os_types;
    }

    /**
     * Targets VM instances matching at least one of the following OS types.
     * VM instances must match all supplied criteria for a given OsType to be
     * included.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Assignment.OsType os_types = 5;</code>
     * @param \Google\Cloud\Osconfig\V1beta\Assignment\OsType[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setOsTypes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Osconfig\V1beta\Assignment\OsType::class);
        $this->os_types = $arr;

        return $this;
    }

}

