<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/osconfig/v1beta/guest_policies.proto

namespace Google\Cloud\Osconfig\V1beta\SoftwareRecipe\Step\ExtractArchive;

use UnexpectedValueException;

/**
 * Specifying the type of archive.
 *
 * Protobuf type <code>google.cloud.osconfig.v1beta.SoftwareRecipe.Step.ExtractArchive.ArchiveType</code>
 */
class ArchiveType
{
    /**
     * Indicates that the archive type isn't specified.
     *
     * Generated from protobuf enum <code>ARCHIVE_TYPE_UNSPECIFIED = 0;</code>
     */
    const ARCHIVE_TYPE_UNSPECIFIED = 0;
    /**
     * Indicates that the archive is a tar archive with no encryption.
     *
     * Generated from protobuf enum <code>TAR = 1;</code>
     */
    const TAR = 1;
    /**
     * Indicates that the archive is a tar archive with gzip encryption.
     *
     * Generated from protobuf enum <code>TAR_GZIP = 2;</code>
     */
    const TAR_GZIP = 2;
    /**
     * Indicates that the archive is a tar archive with bzip encryption.
     *
     * Generated from protobuf enum <code>TAR_BZIP = 3;</code>
     */
    const TAR_BZIP = 3;
    /**
     * Indicates that the archive is a tar archive with lzma encryption.
     *
     * Generated from protobuf enum <code>TAR_LZMA = 4;</code>
     */
    const TAR_LZMA = 4;
    /**
     * Indicates that the archive is a tar archive with xz encryption.
     *
     * Generated from protobuf enum <code>TAR_XZ = 5;</code>
     */
    const TAR_XZ = 5;
    /**
     * Indicates that the archive is a zip archive.
     *
     * Generated from protobuf enum <code>ZIP = 11;</code>
     */
    const ZIP = 11;

    private static $valueToName = [
        self::ARCHIVE_TYPE_UNSPECIFIED => 'ARCHIVE_TYPE_UNSPECIFIED',
        self::TAR => 'TAR',
        self::TAR_GZIP => 'TAR_GZIP',
        self::TAR_BZIP => 'TAR_BZIP',
        self::TAR_LZMA => 'TAR_LZMA',
        self::TAR_XZ => 'TAR_XZ',
        self::ZIP => 'ZIP',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ArchiveType::class, \Google\Cloud\Osconfig\V1beta\SoftwareRecipe_Step_ExtractArchive_ArchiveType::class);

