<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/osconfig/v1beta/guest_policies.proto

namespace Google\Cloud\Osconfig\V1beta\Assignment;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Defines the criteria for selecting VM Instances by OS type.
 *
 * Generated from protobuf message <code>google.cloud.osconfig.v1beta.Assignment.OsType</code>
 */
class OsType extends \Google\Protobuf\Internal\Message
{
    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * OS short name, for example "debian" or "windows".
     *
     * Generated from protobuf field <code>string os_short_name = 1;</code>
     */
    protected $os_short_name = '';
    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * following OS version.
     *
     * Generated from protobuf field <code>string os_version = 2;</code>
     */
    protected $os_version = '';
    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * OS architecture.
     *
     * Generated from protobuf field <code>string os_architecture = 3;</code>
     */
    protected $os_architecture = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $os_short_name
     *           Targets VM instances with OS Inventory enabled and having the following
     *           OS short name, for example "debian" or "windows".
     *     @type string $os_version
     *           Targets VM instances with OS Inventory enabled and having the following
     *           following OS version.
     *     @type string $os_architecture
     *           Targets VM instances with OS Inventory enabled and having the following
     *           OS architecture.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Osconfig\V1Beta\GuestPolicies::initOnce();
        parent::__construct($data);
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * OS short name, for example "debian" or "windows".
     *
     * Generated from protobuf field <code>string os_short_name = 1;</code>
     * @return string
     */
    public function getOsShortName()
    {
        return $this->os_short_name;
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * OS short name, for example "debian" or "windows".
     *
     * Generated from protobuf field <code>string os_short_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setOsShortName($var)
    {
        GPBUtil::checkString($var, True);
        $this->os_short_name = $var;

        return $this;
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * following OS version.
     *
     * Generated from protobuf field <code>string os_version = 2;</code>
     * @return string
     */
    public function getOsVersion()
    {
        return $this->os_version;
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * following OS version.
     *
     * Generated from protobuf field <code>string os_version = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setOsVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->os_version = $var;

        return $this;
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * OS architecture.
     *
     * Generated from protobuf field <code>string os_architecture = 3;</code>
     * @return string
     */
    public function getOsArchitecture()
    {
        return $this->os_architecture;
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following
     * OS architecture.
     *
     * Generated from protobuf field <code>string os_architecture = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setOsArchitecture($var)
    {
        GPBUtil::checkString($var, True);
        $this->os_architecture = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(OsType::class, \Google\Cloud\Osconfig\V1beta\Assignment_OsType::class);

