<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigquery/connection/v1beta1/connection.proto

namespace Google\Cloud\BigQuery\Connection\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Credential to use with a connection.
 *
 * Generated from protobuf message <code>google.cloud.bigquery.connection.v1beta1.ConnectionCredential</code>
 */
class ConnectionCredential extends \Google\Protobuf\Internal\Message
{
    protected $credential;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\BigQuery\Connection\V1beta1\CloudSqlCredential $cloud_sql
     *           Credential for Cloud SQL database.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Bigquery\Connection\V1Beta1\Connection::initOnce();
        parent::__construct($data);
    }

    /**
     * Credential for Cloud SQL database.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.connection.v1beta1.CloudSqlCredential cloud_sql = 1;</code>
     * @return \Google\Cloud\BigQuery\Connection\V1beta1\CloudSqlCredential|null
     */
    public function getCloudSql()
    {
        return $this->readOneof(1);
    }

    public function hasCloudSql()
    {
        return $this->hasOneof(1);
    }

    /**
     * Credential for Cloud SQL database.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.connection.v1beta1.CloudSqlCredential cloud_sql = 1;</code>
     * @param \Google\Cloud\BigQuery\Connection\V1beta1\CloudSqlCredential $var
     * @return $this
     */
    public function setCloudSql($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\BigQuery\Connection\V1beta1\CloudSqlCredential::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getCredential()
    {
        return $this->whichOneof("credential");
    }

}

