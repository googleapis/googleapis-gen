<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigquery/storage/v1beta2/storage.proto

namespace Google\Cloud\Bigquery\Storage\V1beta2\StorageError;

use UnexpectedValueException;

/**
 * Error code for `StorageError`.
 *
 * Protobuf type <code>google.cloud.bigquery.storage.v1beta2.StorageError.StorageErrorCode</code>
 */
class StorageErrorCode
{
    /**
     * Default error.
     *
     * Generated from protobuf enum <code>STORAGE_ERROR_CODE_UNSPECIFIED = 0;</code>
     */
    const STORAGE_ERROR_CODE_UNSPECIFIED = 0;
    /**
     * Table is not found in the system.
     *
     * Generated from protobuf enum <code>TABLE_NOT_FOUND = 1;</code>
     */
    const TABLE_NOT_FOUND = 1;
    /**
     * Stream is already committed.
     *
     * Generated from protobuf enum <code>STREAM_ALREADY_COMMITTED = 2;</code>
     */
    const STREAM_ALREADY_COMMITTED = 2;
    /**
     * Stream is not found.
     *
     * Generated from protobuf enum <code>STREAM_NOT_FOUND = 3;</code>
     */
    const STREAM_NOT_FOUND = 3;
    /**
     * Invalid Stream type.
     * For example, you try to commit a stream that is not pending.
     *
     * Generated from protobuf enum <code>INVALID_STREAM_TYPE = 4;</code>
     */
    const INVALID_STREAM_TYPE = 4;
    /**
     * Invalid Stream state.
     * For example, you try to commit a stream that is not fianlized or is
     * garbaged.
     *
     * Generated from protobuf enum <code>INVALID_STREAM_STATE = 5;</code>
     */
    const INVALID_STREAM_STATE = 5;

    private static $valueToName = [
        self::STORAGE_ERROR_CODE_UNSPECIFIED => 'STORAGE_ERROR_CODE_UNSPECIFIED',
        self::TABLE_NOT_FOUND => 'TABLE_NOT_FOUND',
        self::STREAM_ALREADY_COMMITTED => 'STREAM_ALREADY_COMMITTED',
        self::STREAM_NOT_FOUND => 'STREAM_NOT_FOUND',
        self::INVALID_STREAM_TYPE => 'INVALID_STREAM_TYPE',
        self::INVALID_STREAM_STATE => 'INVALID_STREAM_STATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(StorageErrorCode::class, \Google\Cloud\Bigquery\Storage\V1beta2\StorageError_StorageErrorCode::class);

