// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/bigquery/storage/v1/storage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.BigQuery.Storage.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/bigquery/storage/v1/storage.proto</summary>
  public static partial class StorageReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/bigquery/storage/v1/storage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StorageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5nb29nbGUvY2xvdWQvYmlncXVlcnkvc3RvcmFnZS92MS9zdG9yYWdlLnBy",
            "b3RvEiBnb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MRocZ29vZ2xl",
            "L2FwaS9hbm5vdGF0aW9ucy5wcm90bxoXZ29vZ2xlL2FwaS9jbGllbnQucHJv",
            "dG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9h",
            "cGkvcmVzb3VyY2UucHJvdG8aLGdvb2dsZS9jbG91ZC9iaWdxdWVyeS9zdG9y",
            "YWdlL3YxL2Fycm93LnByb3RvGitnb29nbGUvY2xvdWQvYmlncXVlcnkvc3Rv",
            "cmFnZS92MS9hdnJvLnByb3RvGi1nb29nbGUvY2xvdWQvYmlncXVlcnkvc3Rv",
            "cmFnZS92MS9zdHJlYW0ucHJvdG8iwwEKGENyZWF0ZVJlYWRTZXNzaW9uUmVx",
            "dWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLQorY2xvdWRyZXNvdXJjZW1h",
            "bmFnZXIuZ29vZ2xlYXBpcy5jb20vUHJvamVjdBJICgxyZWFkX3Nlc3Npb24Y",
            "AiABKAsyLS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MS5SZWFk",
            "U2Vzc2lvbkID4EECEhgKEG1heF9zdHJlYW1fY291bnQYAyABKAUiaQoPUmVh",
            "ZFJvd3NSZXF1ZXN0EkYKC3JlYWRfc3RyZWFtGAEgASgJQjHgQQL6QSsKKWJp",
            "Z3F1ZXJ5c3RvcmFnZS5nb29nbGVhcGlzLmNvbS9SZWFkU3RyZWFtEg4KBm9m",
            "ZnNldBgCIAEoAyIpCg1UaHJvdHRsZVN0YXRlEhgKEHRocm90dGxlX3BlcmNl",
            "bnQYASABKAUilwEKC1N0cmVhbVN0YXRzEkgKCHByb2dyZXNzGAIgASgLMjYu",
            "Z29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjEuU3RyZWFtU3RhdHMu",
            "UHJvZ3Jlc3MaPgoIUHJvZ3Jlc3MSGQoRYXRfcmVzcG9uc2Vfc3RhcnQYASAB",
            "KAESFwoPYXRfcmVzcG9uc2VfZW5kGAIgASgBIucDChBSZWFkUm93c1Jlc3Bv",
            "bnNlEj8KCWF2cm9fcm93cxgDIAEoCzIqLmdvb2dsZS5jbG91ZC5iaWdxdWVy",
            "eS5zdG9yYWdlLnYxLkF2cm9Sb3dzSAASUAoSYXJyb3dfcmVjb3JkX2JhdGNo",
            "GAQgASgLMjIuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjEuQXJy",
            "b3dSZWNvcmRCYXRjaEgAEhEKCXJvd19jb3VudBgGIAEoAxI8CgVzdGF0cxgC",
            "IAEoCzItLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxLlN0cmVh",
            "bVN0YXRzEkcKDnRocm90dGxlX3N0YXRlGAUgASgLMi8uZ29vZ2xlLmNsb3Vk",
            "LmJpZ3F1ZXJ5LnN0b3JhZ2UudjEuVGhyb3R0bGVTdGF0ZRJICgthdnJvX3Nj",
            "aGVtYRgHIAEoCzIsLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYx",
            "LkF2cm9TY2hlbWFCA+BBA0gBEkoKDGFycm93X3NjaGVtYRgIIAEoCzItLmdv",
            "b2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxLkFycm93U2NoZW1hQgPg",
            "QQNIAUIGCgRyb3dzQggKBnNjaGVtYSJrChZTcGxpdFJlYWRTdHJlYW1SZXF1",
            "ZXN0Ej8KBG5hbWUYASABKAlCMeBBAvpBKwopYmlncXVlcnlzdG9yYWdlLmdv",
            "b2dsZWFwaXMuY29tL1JlYWRTdHJlYW0SEAoIZnJhY3Rpb24YAiABKAEipwEK",
            "F1NwbGl0UmVhZFN0cmVhbVJlc3BvbnNlEkQKDnByaW1hcnlfc3RyZWFtGAEg",
            "ASgLMiwuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjEuUmVhZFN0",
            "cmVhbRJGChByZW1haW5kZXJfc3RyZWFtGAIgASgLMiwuZ29vZ2xlLmNsb3Vk",
            "LmJpZ3F1ZXJ5LnN0b3JhZ2UudjEuUmVhZFN0cmVhbTLGBgoMQmlnUXVlcnlS",
            "ZWFkEukBChFDcmVhdGVSZWFkU2Vzc2lvbhI6Lmdvb2dsZS5jbG91ZC5iaWdx",
            "dWVyeS5zdG9yYWdlLnYxLkNyZWF0ZVJlYWRTZXNzaW9uUmVxdWVzdBotLmdv",
            "b2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxLlJlYWRTZXNzaW9uImmC",
            "0+STAjwiNy92MS97cmVhZF9zZXNzaW9uLnRhYmxlPXByb2plY3RzLyovZGF0",
            "YXNldHMvKi90YWJsZXMvKn06ASraQSRwYXJlbnQscmVhZF9zZXNzaW9uLG1h",
            "eF9zdHJlYW1fY291bnQSzwEKCFJlYWRSb3dzEjEuZ29vZ2xlLmNsb3VkLmJp",
            "Z3F1ZXJ5LnN0b3JhZ2UudjEuUmVhZFJvd3NSZXF1ZXN0GjIuZ29vZ2xlLmNs",
            "b3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjEuUmVhZFJvd3NSZXNwb25zZSJagtPk",
            "kwI/Ej0vdjEve3JlYWRfc3RyZWFtPXByb2plY3RzLyovbG9jYXRpb25zLyov",
            "c2Vzc2lvbnMvKi9zdHJlYW1zLyp92kEScmVhZF9zdHJlYW0sb2Zmc2V0MAES",
            "xgEKD1NwbGl0UmVhZFN0cmVhbRI4Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5z",
            "dG9yYWdlLnYxLlNwbGl0UmVhZFN0cmVhbVJlcXVlc3QaOS5nb29nbGUuY2xv",
            "dWQuYmlncXVlcnkuc3RvcmFnZS52MS5TcGxpdFJlYWRTdHJlYW1SZXNwb25z",
            "ZSI+gtPkkwI4EjYvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9z",
            "ZXNzaW9ucy8qL3N0cmVhbXMvKn0argHKQR5iaWdxdWVyeXN0b3JhZ2UuZ29v",
            "Z2xlYXBpcy5jb23SQYkBaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0",
            "aC9iaWdxdWVyeSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Jp",
            "Z3F1ZXJ5LnJlYWRvbmx5LGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1",
            "dGgvY2xvdWQtcGxhdGZvcm1CnQIKJGNvbS5nb29nbGUuY2xvdWQuYmlncXVl",
            "cnkuc3RvcmFnZS52MUIMU3RvcmFnZVByb3RvUAFaR2dvb2dsZS5nb2xhbmcu",
            "b3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvYmlncXVlcnkvc3RvcmFn",
            "ZS92MTtzdG9yYWdlqgIgR29vZ2xlLkNsb3VkLkJpZ1F1ZXJ5LlN0b3JhZ2Uu",
            "VjHKAiBHb29nbGVcQ2xvdWRcQmlnUXVlcnlcU3RvcmFnZVxWMepBVQodYmln",
            "cXVlcnkuZ29vZ2xlYXBpcy5jb20vVGFibGUSNHByb2plY3RzL3twcm9qZWN0",
            "fS9kYXRhc2V0cy97ZGF0YXNldH0vdGFibGVzL3t0YWJsZX1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.BigQuery.Storage.V1.ArrowReflection.Descriptor, global::Google.Cloud.BigQuery.Storage.V1.AvroReflection.Descriptor, global::Google.Cloud.BigQuery.Storage.V1.StreamReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.BigQuery.Storage.V1.CreateReadSessionRequest), global::Google.Cloud.BigQuery.Storage.V1.CreateReadSessionRequest.Parser, new[]{ "Parent", "ReadSession", "MaxStreamCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.BigQuery.Storage.V1.ReadRowsRequest), global::Google.Cloud.BigQuery.Storage.V1.ReadRowsRequest.Parser, new[]{ "ReadStream", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.BigQuery.Storage.V1.ThrottleState), global::Google.Cloud.BigQuery.Storage.V1.ThrottleState.Parser, new[]{ "ThrottlePercent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.BigQuery.Storage.V1.StreamStats), global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Parser, new[]{ "Progress" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Types.Progress), global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Types.Progress.Parser, new[]{ "AtResponseStart", "AtResponseEnd" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.BigQuery.Storage.V1.ReadRowsResponse), global::Google.Cloud.BigQuery.Storage.V1.ReadRowsResponse.Parser, new[]{ "AvroRows", "ArrowRecordBatch", "RowCount", "Stats", "ThrottleState", "AvroSchema", "ArrowSchema" }, new[]{ "Rows", "Schema" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.BigQuery.Storage.V1.SplitReadStreamRequest), global::Google.Cloud.BigQuery.Storage.V1.SplitReadStreamRequest.Parser, new[]{ "Name", "Fraction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.BigQuery.Storage.V1.SplitReadStreamResponse), global::Google.Cloud.BigQuery.Storage.V1.SplitReadStreamResponse.Parser, new[]{ "PrimaryStream", "RemainderStream" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for `CreateReadSession`.
  /// </summary>
  public sealed partial class CreateReadSessionRequest : pb::IMessage<CreateReadSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateReadSessionRequest> _parser = new pb::MessageParser<CreateReadSessionRequest>(() => new CreateReadSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateReadSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.BigQuery.Storage.V1.StorageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest(CreateReadSessionRequest other) : this() {
      parent_ = other.parent_;
      readSession_ = other.readSession_ != null ? other.readSession_.Clone() : null;
      maxStreamCount_ = other.maxStreamCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest Clone() {
      return new CreateReadSessionRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The request project that owns the session, in the form of
    /// `projects/{project_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "read_session" field.</summary>
    public const int ReadSessionFieldNumber = 2;
    private global::Google.Cloud.BigQuery.Storage.V1.ReadSession readSession_;
    /// <summary>
    /// Required. Session to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.ReadSession ReadSession {
      get { return readSession_; }
      set {
        readSession_ = value;
      }
    }

    /// <summary>Field number for the "max_stream_count" field.</summary>
    public const int MaxStreamCountFieldNumber = 3;
    private int maxStreamCount_;
    /// <summary>
    /// Max initial number of streams. If unset or zero, the server will
    /// provide a value of streams so as to produce reasonable throughput. Must be
    /// non-negative. The number of streams may be lower than the requested number,
    /// depending on the amount parallelism that is reasonable for the table. Error
    /// will be returned if the max count is greater than the current system
    /// max limit of 1,000.
    ///
    /// Streams must be read starting from offset 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxStreamCount {
      get { return maxStreamCount_; }
      set {
        maxStreamCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateReadSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateReadSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(ReadSession, other.ReadSession)) return false;
      if (MaxStreamCount != other.MaxStreamCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (readSession_ != null) hash ^= ReadSession.GetHashCode();
      if (MaxStreamCount != 0) hash ^= MaxStreamCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (readSession_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadSession);
      }
      if (MaxStreamCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxStreamCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (readSession_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadSession);
      }
      if (MaxStreamCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxStreamCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (readSession_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadSession);
      }
      if (MaxStreamCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStreamCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateReadSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.readSession_ != null) {
        if (readSession_ == null) {
          ReadSession = new global::Google.Cloud.BigQuery.Storage.V1.ReadSession();
        }
        ReadSession.MergeFrom(other.ReadSession);
      }
      if (other.MaxStreamCount != 0) {
        MaxStreamCount = other.MaxStreamCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (readSession_ == null) {
              ReadSession = new global::Google.Cloud.BigQuery.Storage.V1.ReadSession();
            }
            input.ReadMessage(ReadSession);
            break;
          }
          case 24: {
            MaxStreamCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (readSession_ == null) {
              ReadSession = new global::Google.Cloud.BigQuery.Storage.V1.ReadSession();
            }
            input.ReadMessage(ReadSession);
            break;
          }
          case 24: {
            MaxStreamCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for `ReadRows`.
  /// </summary>
  public sealed partial class ReadRowsRequest : pb::IMessage<ReadRowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsRequest> _parser = new pb::MessageParser<ReadRowsRequest>(() => new ReadRowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.BigQuery.Storage.V1.StorageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest(ReadRowsRequest other) : this() {
      readStream_ = other.readStream_;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest Clone() {
      return new ReadRowsRequest(this);
    }

    /// <summary>Field number for the "read_stream" field.</summary>
    public const int ReadStreamFieldNumber = 1;
    private string readStream_ = "";
    /// <summary>
    /// Required. Stream to read rows from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReadStream {
      get { return readStream_; }
      set {
        readStream_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    /// <summary>
    /// The offset requested must be less than the last row read from Read.
    /// Requesting a larger offset is undefined. If not specified, start reading
    /// from offset zero.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReadStream != other.ReadStream) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReadStream.Length != 0) hash ^= ReadStream.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReadStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReadStream);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReadStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReadStream);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReadStream.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReadStream);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ReadStream.Length != 0) {
        ReadStream = other.ReadStream;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReadStream = input.ReadString();
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ReadStream = input.ReadString();
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information on if the current connection is being throttled.
  /// </summary>
  public sealed partial class ThrottleState : pb::IMessage<ThrottleState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThrottleState> _parser = new pb::MessageParser<ThrottleState>(() => new ThrottleState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrottleState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.BigQuery.Storage.V1.StorageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleState(ThrottleState other) : this() {
      throttlePercent_ = other.throttlePercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleState Clone() {
      return new ThrottleState(this);
    }

    /// <summary>Field number for the "throttle_percent" field.</summary>
    public const int ThrottlePercentFieldNumber = 1;
    private int throttlePercent_;
    /// <summary>
    /// How much this connection is being throttled. Zero means no throttling,
    /// 100 means fully throttled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThrottlePercent {
      get { return throttlePercent_; }
      set {
        throttlePercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrottleState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrottleState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThrottlePercent != other.ThrottlePercent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ThrottlePercent != 0) hash ^= ThrottlePercent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThrottlePercent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThrottlePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThrottlePercent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThrottlePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ThrottlePercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThrottlePercent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrottleState other) {
      if (other == null) {
        return;
      }
      if (other.ThrottlePercent != 0) {
        ThrottlePercent = other.ThrottlePercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThrottlePercent = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ThrottlePercent = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Estimated stream statistics for a given Stream.
  /// </summary>
  public sealed partial class StreamStats : pb::IMessage<StreamStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamStats> _parser = new pb::MessageParser<StreamStats>(() => new StreamStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.BigQuery.Storage.V1.StorageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStats(StreamStats other) : this() {
      progress_ = other.progress_ != null ? other.progress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStats Clone() {
      return new StreamStats(this);
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Types.Progress progress_;
    /// <summary>
    /// Represents the progress of the current stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Types.Progress Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Progress, other.Progress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (progress_ != null) hash ^= Progress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (progress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (progress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (progress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamStats other) {
      if (other == null) {
        return;
      }
      if (other.progress_ != null) {
        if (progress_ == null) {
          Progress = new global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Types.Progress();
        }
        Progress.MergeFrom(other.Progress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Types.Progress();
            }
            input.ReadMessage(Progress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Types.Progress();
            }
            input.ReadMessage(Progress);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StreamStats message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Progress : pb::IMessage<Progress>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Progress> _parser = new pb::MessageParser<Progress>(() => new Progress());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Progress> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.BigQuery.Storage.V1.StreamStats.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Progress() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Progress(Progress other) : this() {
          atResponseStart_ = other.atResponseStart_;
          atResponseEnd_ = other.atResponseEnd_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Progress Clone() {
          return new Progress(this);
        }

        /// <summary>Field number for the "at_response_start" field.</summary>
        public const int AtResponseStartFieldNumber = 1;
        private double atResponseStart_;
        /// <summary>
        /// The fraction of rows assigned to the stream that have been processed by
        /// the server so far, not including the rows in the current response
        /// message.
        ///
        /// This value, along with `at_response_end`, can be used to interpolate
        /// the progress made as the rows in the message are being processed using
        /// the following formula: `at_response_start + (at_response_end -
        /// at_response_start) * rows_processed_from_response / rows_in_response`.
        ///
        /// Note that if a filter is provided, the `at_response_end` value of the
        /// previous response may not necessarily be equal to the
        /// `at_response_start` value of the current response.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double AtResponseStart {
          get { return atResponseStart_; }
          set {
            atResponseStart_ = value;
          }
        }

        /// <summary>Field number for the "at_response_end" field.</summary>
        public const int AtResponseEndFieldNumber = 2;
        private double atResponseEnd_;
        /// <summary>
        /// Similar to `at_response_start`, except that this value includes the
        /// rows in the current response.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double AtResponseEnd {
          get { return atResponseEnd_; }
          set {
            atResponseEnd_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Progress);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Progress other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AtResponseStart, other.AtResponseStart)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AtResponseEnd, other.AtResponseEnd)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AtResponseStart != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AtResponseStart);
          if (AtResponseEnd != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AtResponseEnd);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AtResponseStart != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(AtResponseStart);
          }
          if (AtResponseEnd != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(AtResponseEnd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AtResponseStart != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(AtResponseStart);
          }
          if (AtResponseEnd != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(AtResponseEnd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AtResponseStart != 0D) {
            size += 1 + 8;
          }
          if (AtResponseEnd != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Progress other) {
          if (other == null) {
            return;
          }
          if (other.AtResponseStart != 0D) {
            AtResponseStart = other.AtResponseStart;
          }
          if (other.AtResponseEnd != 0D) {
            AtResponseEnd = other.AtResponseEnd;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                AtResponseStart = input.ReadDouble();
                break;
              }
              case 17: {
                AtResponseEnd = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                AtResponseStart = input.ReadDouble();
                break;
              }
              case 17: {
                AtResponseEnd = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Response from calling `ReadRows` may include row data, progress and
  /// throttling information.
  /// </summary>
  public sealed partial class ReadRowsResponse : pb::IMessage<ReadRowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsResponse> _parser = new pb::MessageParser<ReadRowsResponse>(() => new ReadRowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.BigQuery.Storage.V1.StorageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse(ReadRowsResponse other) : this() {
      rowCount_ = other.rowCount_;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      throttleState_ = other.throttleState_ != null ? other.throttleState_.Clone() : null;
      switch (other.RowsCase) {
        case RowsOneofCase.AvroRows:
          AvroRows = other.AvroRows.Clone();
          break;
        case RowsOneofCase.ArrowRecordBatch:
          ArrowRecordBatch = other.ArrowRecordBatch.Clone();
          break;
      }

      switch (other.SchemaCase) {
        case SchemaOneofCase.AvroSchema:
          AvroSchema = other.AvroSchema.Clone();
          break;
        case SchemaOneofCase.ArrowSchema:
          ArrowSchema = other.ArrowSchema.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse Clone() {
      return new ReadRowsResponse(this);
    }

    /// <summary>Field number for the "avro_rows" field.</summary>
    public const int AvroRowsFieldNumber = 3;
    /// <summary>
    /// Serialized row data in AVRO format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.AvroRows AvroRows {
      get { return rowsCase_ == RowsOneofCase.AvroRows ? (global::Google.Cloud.BigQuery.Storage.V1.AvroRows) rows_ : null; }
      set {
        rows_ = value;
        rowsCase_ = value == null ? RowsOneofCase.None : RowsOneofCase.AvroRows;
      }
    }

    /// <summary>Field number for the "arrow_record_batch" field.</summary>
    public const int ArrowRecordBatchFieldNumber = 4;
    /// <summary>
    /// Serialized row data in Arrow RecordBatch format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.ArrowRecordBatch ArrowRecordBatch {
      get { return rowsCase_ == RowsOneofCase.ArrowRecordBatch ? (global::Google.Cloud.BigQuery.Storage.V1.ArrowRecordBatch) rows_ : null; }
      set {
        rows_ = value;
        rowsCase_ = value == null ? RowsOneofCase.None : RowsOneofCase.ArrowRecordBatch;
      }
    }

    /// <summary>Field number for the "row_count" field.</summary>
    public const int RowCountFieldNumber = 6;
    private long rowCount_;
    /// <summary>
    /// Number of serialized rows in the rows block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 2;
    private global::Google.Cloud.BigQuery.Storage.V1.StreamStats stats_;
    /// <summary>
    /// Statistics for the stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.StreamStats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "throttle_state" field.</summary>
    public const int ThrottleStateFieldNumber = 5;
    private global::Google.Cloud.BigQuery.Storage.V1.ThrottleState throttleState_;
    /// <summary>
    /// Throttling state. If unset, the latest response still describes
    /// the current throttling status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.ThrottleState ThrottleState {
      get { return throttleState_; }
      set {
        throttleState_ = value;
      }
    }

    /// <summary>Field number for the "avro_schema" field.</summary>
    public const int AvroSchemaFieldNumber = 7;
    /// <summary>
    /// Output only. Avro schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.AvroSchema AvroSchema {
      get { return schemaCase_ == SchemaOneofCase.AvroSchema ? (global::Google.Cloud.BigQuery.Storage.V1.AvroSchema) schema_ : null; }
      set {
        schema_ = value;
        schemaCase_ = value == null ? SchemaOneofCase.None : SchemaOneofCase.AvroSchema;
      }
    }

    /// <summary>Field number for the "arrow_schema" field.</summary>
    public const int ArrowSchemaFieldNumber = 8;
    /// <summary>
    /// Output only. Arrow schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.ArrowSchema ArrowSchema {
      get { return schemaCase_ == SchemaOneofCase.ArrowSchema ? (global::Google.Cloud.BigQuery.Storage.V1.ArrowSchema) schema_ : null; }
      set {
        schema_ = value;
        schemaCase_ = value == null ? SchemaOneofCase.None : SchemaOneofCase.ArrowSchema;
      }
    }

    private object rows_;
    /// <summary>Enum of possible cases for the "rows" oneof.</summary>
    public enum RowsOneofCase {
      None = 0,
      AvroRows = 3,
      ArrowRecordBatch = 4,
    }
    private RowsOneofCase rowsCase_ = RowsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowsOneofCase RowsCase {
      get { return rowsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRows() {
      rowsCase_ = RowsOneofCase.None;
      rows_ = null;
    }

    private object schema_;
    /// <summary>Enum of possible cases for the "schema" oneof.</summary>
    public enum SchemaOneofCase {
      None = 0,
      AvroSchema = 7,
      ArrowSchema = 8,
    }
    private SchemaOneofCase schemaCase_ = SchemaOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchemaOneofCase SchemaCase {
      get { return schemaCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSchema() {
      schemaCase_ = SchemaOneofCase.None;
      schema_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AvroRows, other.AvroRows)) return false;
      if (!object.Equals(ArrowRecordBatch, other.ArrowRecordBatch)) return false;
      if (RowCount != other.RowCount) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      if (!object.Equals(ThrottleState, other.ThrottleState)) return false;
      if (!object.Equals(AvroSchema, other.AvroSchema)) return false;
      if (!object.Equals(ArrowSchema, other.ArrowSchema)) return false;
      if (RowsCase != other.RowsCase) return false;
      if (SchemaCase != other.SchemaCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rowsCase_ == RowsOneofCase.AvroRows) hash ^= AvroRows.GetHashCode();
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) hash ^= ArrowRecordBatch.GetHashCode();
      if (RowCount != 0L) hash ^= RowCount.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (throttleState_ != null) hash ^= ThrottleState.GetHashCode();
      if (schemaCase_ == SchemaOneofCase.AvroSchema) hash ^= AvroSchema.GetHashCode();
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) hash ^= ArrowSchema.GetHashCode();
      hash ^= (int) rowsCase_;
      hash ^= (int) schemaCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        output.WriteRawTag(26);
        output.WriteMessage(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        output.WriteRawTag(34);
        output.WriteMessage(ArrowRecordBatch);
      }
      if (throttleState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ThrottleState);
      }
      if (RowCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RowCount);
      }
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        output.WriteRawTag(58);
        output.WriteMessage(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        output.WriteRawTag(66);
        output.WriteMessage(ArrowSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        output.WriteRawTag(26);
        output.WriteMessage(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        output.WriteRawTag(34);
        output.WriteMessage(ArrowRecordBatch);
      }
      if (throttleState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ThrottleState);
      }
      if (RowCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RowCount);
      }
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        output.WriteRawTag(58);
        output.WriteMessage(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        output.WriteRawTag(66);
        output.WriteMessage(ArrowSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrowRecordBatch);
      }
      if (RowCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowCount);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (throttleState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThrottleState);
      }
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrowSchema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsResponse other) {
      if (other == null) {
        return;
      }
      if (other.RowCount != 0L) {
        RowCount = other.RowCount;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::Google.Cloud.BigQuery.Storage.V1.StreamStats();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.throttleState_ != null) {
        if (throttleState_ == null) {
          ThrottleState = new global::Google.Cloud.BigQuery.Storage.V1.ThrottleState();
        }
        ThrottleState.MergeFrom(other.ThrottleState);
      }
      switch (other.RowsCase) {
        case RowsOneofCase.AvroRows:
          if (AvroRows == null) {
            AvroRows = new global::Google.Cloud.BigQuery.Storage.V1.AvroRows();
          }
          AvroRows.MergeFrom(other.AvroRows);
          break;
        case RowsOneofCase.ArrowRecordBatch:
          if (ArrowRecordBatch == null) {
            ArrowRecordBatch = new global::Google.Cloud.BigQuery.Storage.V1.ArrowRecordBatch();
          }
          ArrowRecordBatch.MergeFrom(other.ArrowRecordBatch);
          break;
      }

      switch (other.SchemaCase) {
        case SchemaOneofCase.AvroSchema:
          if (AvroSchema == null) {
            AvroSchema = new global::Google.Cloud.BigQuery.Storage.V1.AvroSchema();
          }
          AvroSchema.MergeFrom(other.AvroSchema);
          break;
        case SchemaOneofCase.ArrowSchema:
          if (ArrowSchema == null) {
            ArrowSchema = new global::Google.Cloud.BigQuery.Storage.V1.ArrowSchema();
          }
          ArrowSchema.MergeFrom(other.ArrowSchema);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (stats_ == null) {
              Stats = new global::Google.Cloud.BigQuery.Storage.V1.StreamStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            global::Google.Cloud.BigQuery.Storage.V1.AvroRows subBuilder = new global::Google.Cloud.BigQuery.Storage.V1.AvroRows();
            if (rowsCase_ == RowsOneofCase.AvroRows) {
              subBuilder.MergeFrom(AvroRows);
            }
            input.ReadMessage(subBuilder);
            AvroRows = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.BigQuery.Storage.V1.ArrowRecordBatch subBuilder = new global::Google.Cloud.BigQuery.Storage.V1.ArrowRecordBatch();
            if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
              subBuilder.MergeFrom(ArrowRecordBatch);
            }
            input.ReadMessage(subBuilder);
            ArrowRecordBatch = subBuilder;
            break;
          }
          case 42: {
            if (throttleState_ == null) {
              ThrottleState = new global::Google.Cloud.BigQuery.Storage.V1.ThrottleState();
            }
            input.ReadMessage(ThrottleState);
            break;
          }
          case 48: {
            RowCount = input.ReadInt64();
            break;
          }
          case 58: {
            global::Google.Cloud.BigQuery.Storage.V1.AvroSchema subBuilder = new global::Google.Cloud.BigQuery.Storage.V1.AvroSchema();
            if (schemaCase_ == SchemaOneofCase.AvroSchema) {
              subBuilder.MergeFrom(AvroSchema);
            }
            input.ReadMessage(subBuilder);
            AvroSchema = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.BigQuery.Storage.V1.ArrowSchema subBuilder = new global::Google.Cloud.BigQuery.Storage.V1.ArrowSchema();
            if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
              subBuilder.MergeFrom(ArrowSchema);
            }
            input.ReadMessage(subBuilder);
            ArrowSchema = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (stats_ == null) {
              Stats = new global::Google.Cloud.BigQuery.Storage.V1.StreamStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            global::Google.Cloud.BigQuery.Storage.V1.AvroRows subBuilder = new global::Google.Cloud.BigQuery.Storage.V1.AvroRows();
            if (rowsCase_ == RowsOneofCase.AvroRows) {
              subBuilder.MergeFrom(AvroRows);
            }
            input.ReadMessage(subBuilder);
            AvroRows = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.BigQuery.Storage.V1.ArrowRecordBatch subBuilder = new global::Google.Cloud.BigQuery.Storage.V1.ArrowRecordBatch();
            if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
              subBuilder.MergeFrom(ArrowRecordBatch);
            }
            input.ReadMessage(subBuilder);
            ArrowRecordBatch = subBuilder;
            break;
          }
          case 42: {
            if (throttleState_ == null) {
              ThrottleState = new global::Google.Cloud.BigQuery.Storage.V1.ThrottleState();
            }
            input.ReadMessage(ThrottleState);
            break;
          }
          case 48: {
            RowCount = input.ReadInt64();
            break;
          }
          case 58: {
            global::Google.Cloud.BigQuery.Storage.V1.AvroSchema subBuilder = new global::Google.Cloud.BigQuery.Storage.V1.AvroSchema();
            if (schemaCase_ == SchemaOneofCase.AvroSchema) {
              subBuilder.MergeFrom(AvroSchema);
            }
            input.ReadMessage(subBuilder);
            AvroSchema = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.BigQuery.Storage.V1.ArrowSchema subBuilder = new global::Google.Cloud.BigQuery.Storage.V1.ArrowSchema();
            if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
              subBuilder.MergeFrom(ArrowSchema);
            }
            input.ReadMessage(subBuilder);
            ArrowSchema = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for `SplitReadStream`.
  /// </summary>
  public sealed partial class SplitReadStreamRequest : pb::IMessage<SplitReadStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SplitReadStreamRequest> _parser = new pb::MessageParser<SplitReadStreamRequest>(() => new SplitReadStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SplitReadStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.BigQuery.Storage.V1.StorageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest(SplitReadStreamRequest other) : this() {
      name_ = other.name_;
      fraction_ = other.fraction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest Clone() {
      return new SplitReadStreamRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the stream to split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fraction" field.</summary>
    public const int FractionFieldNumber = 2;
    private double fraction_;
    /// <summary>
    /// A value in the range (0.0, 1.0) that specifies the fractional point at
    /// which the original stream should be split. The actual split point is
    /// evaluated on pre-filtered rows, so if a filter is provided, then there is
    /// no guarantee that the division of the rows between the new child streams
    /// will be proportional to this fractional value. Additionally, because the
    /// server-side unit for assigning data is collections of rows, this fraction
    /// will always map to a data storage boundary on the server side.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Fraction {
      get { return fraction_; }
      set {
        fraction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SplitReadStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SplitReadStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Fraction, other.Fraction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Fraction != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Fraction);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Fraction != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Fraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Fraction != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Fraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Fraction != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SplitReadStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Fraction != 0D) {
        Fraction = other.Fraction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Fraction = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Fraction = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for `SplitReadStream`.
  /// </summary>
  public sealed partial class SplitReadStreamResponse : pb::IMessage<SplitReadStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SplitReadStreamResponse> _parser = new pb::MessageParser<SplitReadStreamResponse>(() => new SplitReadStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SplitReadStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.BigQuery.Storage.V1.StorageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse(SplitReadStreamResponse other) : this() {
      primaryStream_ = other.primaryStream_ != null ? other.primaryStream_.Clone() : null;
      remainderStream_ = other.remainderStream_ != null ? other.remainderStream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse Clone() {
      return new SplitReadStreamResponse(this);
    }

    /// <summary>Field number for the "primary_stream" field.</summary>
    public const int PrimaryStreamFieldNumber = 1;
    private global::Google.Cloud.BigQuery.Storage.V1.ReadStream primaryStream_;
    /// <summary>
    /// Primary stream, which contains the beginning portion of
    /// |original_stream|. An empty value indicates that the original stream can no
    /// longer be split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.ReadStream PrimaryStream {
      get { return primaryStream_; }
      set {
        primaryStream_ = value;
      }
    }

    /// <summary>Field number for the "remainder_stream" field.</summary>
    public const int RemainderStreamFieldNumber = 2;
    private global::Google.Cloud.BigQuery.Storage.V1.ReadStream remainderStream_;
    /// <summary>
    /// Remainder stream, which contains the tail of |original_stream|. An empty
    /// value indicates that the original stream can no longer be split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.BigQuery.Storage.V1.ReadStream RemainderStream {
      get { return remainderStream_; }
      set {
        remainderStream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SplitReadStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SplitReadStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrimaryStream, other.PrimaryStream)) return false;
      if (!object.Equals(RemainderStream, other.RemainderStream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (primaryStream_ != null) hash ^= PrimaryStream.GetHashCode();
      if (remainderStream_ != null) hash ^= RemainderStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (primaryStream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimaryStream);
      }
      if (remainderStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RemainderStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (primaryStream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimaryStream);
      }
      if (remainderStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RemainderStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (primaryStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryStream);
      }
      if (remainderStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemainderStream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SplitReadStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.primaryStream_ != null) {
        if (primaryStream_ == null) {
          PrimaryStream = new global::Google.Cloud.BigQuery.Storage.V1.ReadStream();
        }
        PrimaryStream.MergeFrom(other.PrimaryStream);
      }
      if (other.remainderStream_ != null) {
        if (remainderStream_ == null) {
          RemainderStream = new global::Google.Cloud.BigQuery.Storage.V1.ReadStream();
        }
        RemainderStream.MergeFrom(other.RemainderStream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (primaryStream_ == null) {
              PrimaryStream = new global::Google.Cloud.BigQuery.Storage.V1.ReadStream();
            }
            input.ReadMessage(PrimaryStream);
            break;
          }
          case 18: {
            if (remainderStream_ == null) {
              RemainderStream = new global::Google.Cloud.BigQuery.Storage.V1.ReadStream();
            }
            input.ReadMessage(RemainderStream);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (primaryStream_ == null) {
              PrimaryStream = new global::Google.Cloud.BigQuery.Storage.V1.ReadStream();
            }
            input.ReadMessage(PrimaryStream);
            break;
          }
          case 18: {
            if (remainderStream_ == null) {
              RemainderStream = new global::Google.Cloud.BigQuery.Storage.V1.ReadStream();
            }
            input.ReadMessage(RemainderStream);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
