<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigquery/storage/v1beta1/storage.proto

namespace Google\Cloud\Bigquery\Storage\V1beta1;

use UnexpectedValueException;

/**
 * Strategy for distributing data among multiple streams in a read session.
 *
 * Protobuf type <code>google.cloud.bigquery.storage.v1beta1.ShardingStrategy</code>
 */
class ShardingStrategy
{
    /**
     * Same as LIQUID.
     *
     * Generated from protobuf enum <code>SHARDING_STRATEGY_UNSPECIFIED = 0;</code>
     */
    const SHARDING_STRATEGY_UNSPECIFIED = 0;
    /**
     * Assigns data to each stream based on the client's read rate. The faster the
     * client reads from a stream, the more data is assigned to the stream. In
     * this strategy, it's possible to read all data from a single stream even if
     * there are other streams present.
     *
     * Generated from protobuf enum <code>LIQUID = 1;</code>
     */
    const LIQUID = 1;
    /**
     * Assigns data to each stream such that roughly the same number of rows can
     * be read from each stream. Because the server-side unit for assigning data
     * is collections of rows, the API does not guarantee that each stream will
     * return the same number or rows. Additionally, the limits are enforced based
     * on the number of pre-filtering rows, so some filters can lead to lopsided
     * assignments.
     *
     * Generated from protobuf enum <code>BALANCED = 2;</code>
     */
    const BALANCED = 2;

    private static $valueToName = [
        self::SHARDING_STRATEGY_UNSPECIFIED => 'SHARDING_STRATEGY_UNSPECIFIED',
        self::LIQUID => 'LIQUID',
        self::BALANCED => 'BALANCED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

