<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataqna/v1alpha/user_feedback.proto

namespace Google\Cloud\DataQnA\V1alpha\UserFeedback;

use UnexpectedValueException;

/**
 * Enumeration of feedback ratings.
 *
 * Protobuf type <code>google.cloud.dataqna.v1alpha.UserFeedback.UserFeedbackRating</code>
 */
class UserFeedbackRating
{
    /**
     * No rating was specified.
     *
     * Generated from protobuf enum <code>USER_FEEDBACK_RATING_UNSPECIFIED = 0;</code>
     */
    const USER_FEEDBACK_RATING_UNSPECIFIED = 0;
    /**
     * The user provided positive feedback.
     *
     * Generated from protobuf enum <code>POSITIVE = 1;</code>
     */
    const POSITIVE = 1;
    /**
     * The user provided negative feedback.
     *
     * Generated from protobuf enum <code>NEGATIVE = 2;</code>
     */
    const NEGATIVE = 2;

    private static $valueToName = [
        self::USER_FEEDBACK_RATING_UNSPECIFIED => 'USER_FEEDBACK_RATING_UNSPECIFIED',
        self::POSITIVE => 'POSITIVE',
        self::NEGATIVE => 'NEGATIVE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(UserFeedbackRating::class, \Google\Cloud\DataQnA\V1alpha\UserFeedback_UserFeedbackRating::class);

