<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataqna/v1alpha/question.proto

namespace Google\Cloud\DataQnA\V1alpha\InterpretError;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details about an incomplete query.
 *
 * Generated from protobuf message <code>google.cloud.dataqna.v1alpha.InterpretError.InterpretIncompleteQueryDetails</code>
 */
class InterpretIncompleteQueryDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * List of missing interpret entities.
     *
     * Generated from protobuf field <code>repeated .google.cloud.dataqna.v1alpha.InterpretEntity entities = 1;</code>
     */
    private $entities;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int[]|\Google\Protobuf\Internal\RepeatedField $entities
     *           List of missing interpret entities.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataqna\V1Alpha\Question::initOnce();
        parent::__construct($data);
    }

    /**
     * List of missing interpret entities.
     *
     * Generated from protobuf field <code>repeated .google.cloud.dataqna.v1alpha.InterpretEntity entities = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEntities()
    {
        return $this->entities;
    }

    /**
     * List of missing interpret entities.
     *
     * Generated from protobuf field <code>repeated .google.cloud.dataqna.v1alpha.InterpretEntity entities = 1;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEntities($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Google\Cloud\DataQnA\V1alpha\InterpretEntity::class);
        $this->entities = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InterpretIncompleteQueryDetails::class, \Google\Cloud\DataQnA\V1alpha\InterpretError_InterpretIncompleteQueryDetails::class);

