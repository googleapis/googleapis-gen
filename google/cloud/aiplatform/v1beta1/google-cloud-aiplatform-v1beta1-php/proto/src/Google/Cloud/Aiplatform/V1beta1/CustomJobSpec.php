<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1beta1/custom_job.proto

namespace Google\Cloud\Aiplatform\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents the spec of a CustomJob.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1beta1.CustomJobSpec</code>
 */
class CustomJobSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The spec of the worker pools including machine type and Docker image.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1beta1.WorkerPoolSpec worker_pool_specs = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $worker_pool_specs;
    /**
     * Scheduling options for a CustomJob.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.Scheduling scheduling = 3;</code>
     */
    protected $scheduling = null;
    /**
     * Specifies the service account for workload run-as account.
     * Users submitting jobs must have act-as permission on this run-as account.
     * If unspecified, the AI Platform Custom Code Service Agent for the
     * CustomJob's project is used.
     *
     * Generated from protobuf field <code>string service_account = 4;</code>
     */
    protected $service_account = '';
    /**
     * The full name of the Compute Engine
     * [network](/compute/docs/networks-and-firewalls#networks) to which the Job
     * should be peered. For example, `projects/12345/global/networks/myVPC`.
     * [Format](/compute/docs/reference/rest/v1/networks/insert)
     * is of the form `projects/{project}/global/networks/{network}`.
     * Where {project} is a project number, as in `12345`, and {network} is a
     * network name.
     * Private services access must already be configured for the network. If left
     * unspecified, the job is not peered with any network.
     *
     * Generated from protobuf field <code>string network = 5;</code>
     */
    protected $network = '';
    /**
     * The Cloud Storage location to store the output of this CustomJob or
     * HyperparameterTuningJob. For HyperparameterTuningJob,
     * the baseOutputDirectory of
     * each child CustomJob backing a Trial is set to a subdirectory of name
     * [id][google.cloud.aiplatform.v1beta1.Trial.id] under its parent HyperparameterTuningJob's
     * baseOutputDirectory.
     * The following AI Platform environment variables will be passed to
     * containers or python modules when this field is set:
     *   For CustomJob:
     *   * AIP_MODEL_DIR = `<base_output_directory>/model/`
     *   * AIP_CHECKPOINT_DIR = `<base_output_directory>/checkpoints/`
     *   * AIP_TENSORBOARD_LOG_DIR = `<base_output_directory>/logs/`
     *   For CustomJob backing a Trial of HyperparameterTuningJob:
     *   * AIP_MODEL_DIR = `<base_output_directory>/<trial_id>/model/`
     *   * AIP_CHECKPOINT_DIR = `<base_output_directory>/<trial_id>/checkpoints/`
     *   * AIP_TENSORBOARD_LOG_DIR = `<base_output_directory>/<trial_id>/logs/`
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.GcsDestination base_output_directory = 6;</code>
     */
    protected $base_output_directory = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Aiplatform\V1beta1\WorkerPoolSpec[]|\Google\Protobuf\Internal\RepeatedField $worker_pool_specs
     *           Required. The spec of the worker pools including machine type and Docker image.
     *     @type \Google\Cloud\Aiplatform\V1beta1\Scheduling $scheduling
     *           Scheduling options for a CustomJob.
     *     @type string $service_account
     *           Specifies the service account for workload run-as account.
     *           Users submitting jobs must have act-as permission on this run-as account.
     *           If unspecified, the AI Platform Custom Code Service Agent for the
     *           CustomJob's project is used.
     *     @type string $network
     *           The full name of the Compute Engine
     *           [network](/compute/docs/networks-and-firewalls#networks) to which the Job
     *           should be peered. For example, `projects/12345/global/networks/myVPC`.
     *           [Format](/compute/docs/reference/rest/v1/networks/insert)
     *           is of the form `projects/{project}/global/networks/{network}`.
     *           Where {project} is a project number, as in `12345`, and {network} is a
     *           network name.
     *           Private services access must already be configured for the network. If left
     *           unspecified, the job is not peered with any network.
     *     @type \Google\Cloud\Aiplatform\V1beta1\GcsDestination $base_output_directory
     *           The Cloud Storage location to store the output of this CustomJob or
     *           HyperparameterTuningJob. For HyperparameterTuningJob,
     *           the baseOutputDirectory of
     *           each child CustomJob backing a Trial is set to a subdirectory of name
     *           [id][google.cloud.aiplatform.v1beta1.Trial.id] under its parent HyperparameterTuningJob's
     *           baseOutputDirectory.
     *           The following AI Platform environment variables will be passed to
     *           containers or python modules when this field is set:
     *             For CustomJob:
     *             * AIP_MODEL_DIR = `<base_output_directory>/model/`
     *             * AIP_CHECKPOINT_DIR = `<base_output_directory>/checkpoints/`
     *             * AIP_TENSORBOARD_LOG_DIR = `<base_output_directory>/logs/`
     *             For CustomJob backing a Trial of HyperparameterTuningJob:
     *             * AIP_MODEL_DIR = `<base_output_directory>/<trial_id>/model/`
     *             * AIP_CHECKPOINT_DIR = `<base_output_directory>/<trial_id>/checkpoints/`
     *             * AIP_TENSORBOARD_LOG_DIR = `<base_output_directory>/<trial_id>/logs/`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1Beta1\CustomJob::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The spec of the worker pools including machine type and Docker image.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1beta1.WorkerPoolSpec worker_pool_specs = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getWorkerPoolSpecs()
    {
        return $this->worker_pool_specs;
    }

    /**
     * Required. The spec of the worker pools including machine type and Docker image.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1beta1.WorkerPoolSpec worker_pool_specs = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Aiplatform\V1beta1\WorkerPoolSpec[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setWorkerPoolSpecs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Aiplatform\V1beta1\WorkerPoolSpec::class);
        $this->worker_pool_specs = $arr;

        return $this;
    }

    /**
     * Scheduling options for a CustomJob.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.Scheduling scheduling = 3;</code>
     * @return \Google\Cloud\Aiplatform\V1beta1\Scheduling
     */
    public function getScheduling()
    {
        return isset($this->scheduling) ? $this->scheduling : null;
    }

    public function hasScheduling()
    {
        return isset($this->scheduling);
    }

    public function clearScheduling()
    {
        unset($this->scheduling);
    }

    /**
     * Scheduling options for a CustomJob.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.Scheduling scheduling = 3;</code>
     * @param \Google\Cloud\Aiplatform\V1beta1\Scheduling $var
     * @return $this
     */
    public function setScheduling($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Aiplatform\V1beta1\Scheduling::class);
        $this->scheduling = $var;

        return $this;
    }

    /**
     * Specifies the service account for workload run-as account.
     * Users submitting jobs must have act-as permission on this run-as account.
     * If unspecified, the AI Platform Custom Code Service Agent for the
     * CustomJob's project is used.
     *
     * Generated from protobuf field <code>string service_account = 4;</code>
     * @return string
     */
    public function getServiceAccount()
    {
        return $this->service_account;
    }

    /**
     * Specifies the service account for workload run-as account.
     * Users submitting jobs must have act-as permission on this run-as account.
     * If unspecified, the AI Platform Custom Code Service Agent for the
     * CustomJob's project is used.
     *
     * Generated from protobuf field <code>string service_account = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setServiceAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->service_account = $var;

        return $this;
    }

    /**
     * The full name of the Compute Engine
     * [network](/compute/docs/networks-and-firewalls#networks) to which the Job
     * should be peered. For example, `projects/12345/global/networks/myVPC`.
     * [Format](/compute/docs/reference/rest/v1/networks/insert)
     * is of the form `projects/{project}/global/networks/{network}`.
     * Where {project} is a project number, as in `12345`, and {network} is a
     * network name.
     * Private services access must already be configured for the network. If left
     * unspecified, the job is not peered with any network.
     *
     * Generated from protobuf field <code>string network = 5;</code>
     * @return string
     */
    public function getNetwork()
    {
        return $this->network;
    }

    /**
     * The full name of the Compute Engine
     * [network](/compute/docs/networks-and-firewalls#networks) to which the Job
     * should be peered. For example, `projects/12345/global/networks/myVPC`.
     * [Format](/compute/docs/reference/rest/v1/networks/insert)
     * is of the form `projects/{project}/global/networks/{network}`.
     * Where {project} is a project number, as in `12345`, and {network} is a
     * network name.
     * Private services access must already be configured for the network. If left
     * unspecified, the job is not peered with any network.
     *
     * Generated from protobuf field <code>string network = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setNetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->network = $var;

        return $this;
    }

    /**
     * The Cloud Storage location to store the output of this CustomJob or
     * HyperparameterTuningJob. For HyperparameterTuningJob,
     * the baseOutputDirectory of
     * each child CustomJob backing a Trial is set to a subdirectory of name
     * [id][google.cloud.aiplatform.v1beta1.Trial.id] under its parent HyperparameterTuningJob's
     * baseOutputDirectory.
     * The following AI Platform environment variables will be passed to
     * containers or python modules when this field is set:
     *   For CustomJob:
     *   * AIP_MODEL_DIR = `<base_output_directory>/model/`
     *   * AIP_CHECKPOINT_DIR = `<base_output_directory>/checkpoints/`
     *   * AIP_TENSORBOARD_LOG_DIR = `<base_output_directory>/logs/`
     *   For CustomJob backing a Trial of HyperparameterTuningJob:
     *   * AIP_MODEL_DIR = `<base_output_directory>/<trial_id>/model/`
     *   * AIP_CHECKPOINT_DIR = `<base_output_directory>/<trial_id>/checkpoints/`
     *   * AIP_TENSORBOARD_LOG_DIR = `<base_output_directory>/<trial_id>/logs/`
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.GcsDestination base_output_directory = 6;</code>
     * @return \Google\Cloud\Aiplatform\V1beta1\GcsDestination
     */
    public function getBaseOutputDirectory()
    {
        return isset($this->base_output_directory) ? $this->base_output_directory : null;
    }

    public function hasBaseOutputDirectory()
    {
        return isset($this->base_output_directory);
    }

    public function clearBaseOutputDirectory()
    {
        unset($this->base_output_directory);
    }

    /**
     * The Cloud Storage location to store the output of this CustomJob or
     * HyperparameterTuningJob. For HyperparameterTuningJob,
     * the baseOutputDirectory of
     * each child CustomJob backing a Trial is set to a subdirectory of name
     * [id][google.cloud.aiplatform.v1beta1.Trial.id] under its parent HyperparameterTuningJob's
     * baseOutputDirectory.
     * The following AI Platform environment variables will be passed to
     * containers or python modules when this field is set:
     *   For CustomJob:
     *   * AIP_MODEL_DIR = `<base_output_directory>/model/`
     *   * AIP_CHECKPOINT_DIR = `<base_output_directory>/checkpoints/`
     *   * AIP_TENSORBOARD_LOG_DIR = `<base_output_directory>/logs/`
     *   For CustomJob backing a Trial of HyperparameterTuningJob:
     *   * AIP_MODEL_DIR = `<base_output_directory>/<trial_id>/model/`
     *   * AIP_CHECKPOINT_DIR = `<base_output_directory>/<trial_id>/checkpoints/`
     *   * AIP_TENSORBOARD_LOG_DIR = `<base_output_directory>/<trial_id>/logs/`
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.GcsDestination base_output_directory = 6;</code>
     * @param \Google\Cloud\Aiplatform\V1beta1\GcsDestination $var
     * @return $this
     */
    public function setBaseOutputDirectory($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Aiplatform\V1beta1\GcsDestination::class);
        $this->base_output_directory = $var;

        return $this;
    }

}

