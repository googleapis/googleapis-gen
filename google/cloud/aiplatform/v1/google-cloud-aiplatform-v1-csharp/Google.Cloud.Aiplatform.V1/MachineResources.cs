// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1/machine_resources.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Aiplatform.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/aiplatform/v1/machine_resources.proto</summary>
  public static partial class MachineResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/aiplatform/v1/machine_resources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MachineResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9tYWNoaW5lX3Jlc291cmNl",
            "cy5wcm90bxIaZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEaH2dvb2dsZS9h",
            "cGkvZmllbGRfYmVoYXZpb3IucHJvdG8aMWdvb2dsZS9jbG91ZC9haXBsYXRm",
            "b3JtL3YxL2FjY2VsZXJhdG9yX3R5cGUucHJvdG8aHGdvb2dsZS9hcGkvYW5u",
            "b3RhdGlvbnMucHJvdG8ijwEKC01hY2hpbmVTcGVjEhkKDG1hY2hpbmVfdHlw",
            "ZRgBIAEoCUID4EEFEkoKEGFjY2VsZXJhdG9yX3R5cGUYAiABKA4yKy5nb29n",
            "bGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5BY2NlbGVyYXRvclR5cGVCA+BBBRIZ",
            "ChFhY2NlbGVyYXRvcl9jb3VudBgDIAEoBSKeAQoSRGVkaWNhdGVkUmVzb3Vy",
            "Y2VzEkUKDG1hY2hpbmVfc3BlYxgBIAEoCzInLmdvb2dsZS5jbG91ZC5haXBs",
            "YXRmb3JtLnYxLk1hY2hpbmVTcGVjQgbgQQLgQQUSIQoRbWluX3JlcGxpY2Ff",
            "Y291bnQYAiABKAVCBuBBAuBBBRIeChFtYXhfcmVwbGljYV9jb3VudBgDIAEo",
            "BUID4EEFIlQKEkF1dG9tYXRpY1Jlc291cmNlcxIeChFtaW5fcmVwbGljYV9j",
            "b3VudBgBIAEoBUID4EEFEh4KEW1heF9yZXBsaWNhX2NvdW50GAIgASgFQgPg",
            "QQUipQEKF0JhdGNoRGVkaWNhdGVkUmVzb3VyY2VzEkUKDG1hY2hpbmVfc3Bl",
            "YxgBIAEoCzInLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk1hY2hpbmVT",
            "cGVjQgbgQQLgQQUSIwoWc3RhcnRpbmdfcmVwbGljYV9jb3VudBgCIAEoBUID",
            "4EEFEh4KEW1heF9yZXBsaWNhX2NvdW50GAMgASgFQgPgQQUiLwoRUmVzb3Vy",
            "Y2VzQ29uc3VtZWQSGgoNcmVwbGljYV9ob3VycxgBIAEoAUID4EEDIj0KCERp",
            "c2tTcGVjEhYKDmJvb3RfZGlza190eXBlGAEgASgJEhkKEWJvb3RfZGlza19z",
            "aXplX2diGAIgASgFQn8KHmNvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52",
            "MUIVTWFjaGluZVJlc291cmNlc1Byb3RvUAFaRGdvb2dsZS5nb2xhbmcub3Jn",
            "L2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvYWlwbGF0Zm9ybS92MTthaXBs",
            "YXRmb3JtYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Cloud.Aiplatform.V1.AcceleratorTypeReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Aiplatform.V1.MachineSpec), global::Google.Cloud.Aiplatform.V1.MachineSpec.Parser, new[]{ "MachineType", "AcceleratorType", "AcceleratorCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Aiplatform.V1.DedicatedResources), global::Google.Cloud.Aiplatform.V1.DedicatedResources.Parser, new[]{ "MachineSpec", "MinReplicaCount", "MaxReplicaCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Aiplatform.V1.AutomaticResources), global::Google.Cloud.Aiplatform.V1.AutomaticResources.Parser, new[]{ "MinReplicaCount", "MaxReplicaCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Aiplatform.V1.BatchDedicatedResources), global::Google.Cloud.Aiplatform.V1.BatchDedicatedResources.Parser, new[]{ "MachineSpec", "StartingReplicaCount", "MaxReplicaCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Aiplatform.V1.ResourcesConsumed), global::Google.Cloud.Aiplatform.V1.ResourcesConsumed.Parser, new[]{ "ReplicaHours" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Aiplatform.V1.DiskSpec), global::Google.Cloud.Aiplatform.V1.DiskSpec.Parser, new[]{ "BootDiskType", "BootDiskSizeGb" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Specification of a single machine.
  /// </summary>
  public sealed partial class MachineSpec : pb::IMessage<MachineSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MachineSpec> _parser = new pb::MessageParser<MachineSpec>(() => new MachineSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MachineSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Aiplatform.V1.MachineResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineSpec(MachineSpec other) : this() {
      machineType_ = other.machineType_;
      acceleratorType_ = other.acceleratorType_;
      acceleratorCount_ = other.acceleratorCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineSpec Clone() {
      return new MachineSpec(this);
    }

    /// <summary>Field number for the "machine_type" field.</summary>
    public const int MachineTypeFieldNumber = 1;
    private string machineType_ = "";
    /// <summary>
    /// Immutable. The type of the machine. For the machine types supported for prediction,
    /// see https://tinyurl.com/aip-docs/predictions/machine-types.
    /// For machine types supported for creating a custom training job, see
    /// https://tinyurl.com/aip-docs/training/configure-compute.
    ///
    /// For [DeployedModel][google.cloud.aiplatform.v1.DeployedModel] this field is optional, and the default
    /// value is `n1-standard-2`. For [BatchPredictionJob][google.cloud.aiplatform.v1.BatchPredictionJob] or as part of
    /// [WorkerPoolSpec][google.cloud.aiplatform.v1.WorkerPoolSpec] this field is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MachineType {
      get { return machineType_; }
      set {
        machineType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accelerator_type" field.</summary>
    public const int AcceleratorTypeFieldNumber = 2;
    private global::Google.Cloud.Aiplatform.V1.AcceleratorType acceleratorType_ = global::Google.Cloud.Aiplatform.V1.AcceleratorType.Unspecified;
    /// <summary>
    /// Immutable. The type of accelerator(s) that may be attached to the machine as per
    /// [accelerator_count][google.cloud.aiplatform.v1.MachineSpec.accelerator_count].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Aiplatform.V1.AcceleratorType AcceleratorType {
      get { return acceleratorType_; }
      set {
        acceleratorType_ = value;
      }
    }

    /// <summary>Field number for the "accelerator_count" field.</summary>
    public const int AcceleratorCountFieldNumber = 3;
    private int acceleratorCount_;
    /// <summary>
    /// The number of accelerators to attach to the machine.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AcceleratorCount {
      get { return acceleratorCount_; }
      set {
        acceleratorCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MachineSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MachineSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MachineType != other.MachineType) return false;
      if (AcceleratorType != other.AcceleratorType) return false;
      if (AcceleratorCount != other.AcceleratorCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MachineType.Length != 0) hash ^= MachineType.GetHashCode();
      if (AcceleratorType != global::Google.Cloud.Aiplatform.V1.AcceleratorType.Unspecified) hash ^= AcceleratorType.GetHashCode();
      if (AcceleratorCount != 0) hash ^= AcceleratorCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MachineType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MachineType);
      }
      if (AcceleratorType != global::Google.Cloud.Aiplatform.V1.AcceleratorType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AcceleratorType);
      }
      if (AcceleratorCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AcceleratorCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MachineType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MachineType);
      }
      if (AcceleratorType != global::Google.Cloud.Aiplatform.V1.AcceleratorType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AcceleratorType);
      }
      if (AcceleratorCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AcceleratorCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MachineType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineType);
      }
      if (AcceleratorType != global::Google.Cloud.Aiplatform.V1.AcceleratorType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AcceleratorType);
      }
      if (AcceleratorCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AcceleratorCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MachineSpec other) {
      if (other == null) {
        return;
      }
      if (other.MachineType.Length != 0) {
        MachineType = other.MachineType;
      }
      if (other.AcceleratorType != global::Google.Cloud.Aiplatform.V1.AcceleratorType.Unspecified) {
        AcceleratorType = other.AcceleratorType;
      }
      if (other.AcceleratorCount != 0) {
        AcceleratorCount = other.AcceleratorCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MachineType = input.ReadString();
            break;
          }
          case 16: {
            AcceleratorType = (global::Google.Cloud.Aiplatform.V1.AcceleratorType) input.ReadEnum();
            break;
          }
          case 24: {
            AcceleratorCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MachineType = input.ReadString();
            break;
          }
          case 16: {
            AcceleratorType = (global::Google.Cloud.Aiplatform.V1.AcceleratorType) input.ReadEnum();
            break;
          }
          case 24: {
            AcceleratorCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A description of resources that are dedicated to a DeployedModel, and
  /// that need a higher degree of manual configuration.
  /// </summary>
  public sealed partial class DedicatedResources : pb::IMessage<DedicatedResources>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DedicatedResources> _parser = new pb::MessageParser<DedicatedResources>(() => new DedicatedResources());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DedicatedResources> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Aiplatform.V1.MachineResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DedicatedResources() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DedicatedResources(DedicatedResources other) : this() {
      machineSpec_ = other.machineSpec_ != null ? other.machineSpec_.Clone() : null;
      minReplicaCount_ = other.minReplicaCount_;
      maxReplicaCount_ = other.maxReplicaCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DedicatedResources Clone() {
      return new DedicatedResources(this);
    }

    /// <summary>Field number for the "machine_spec" field.</summary>
    public const int MachineSpecFieldNumber = 1;
    private global::Google.Cloud.Aiplatform.V1.MachineSpec machineSpec_;
    /// <summary>
    /// Required. Immutable. The specification of a single machine used by the prediction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Aiplatform.V1.MachineSpec MachineSpec {
      get { return machineSpec_; }
      set {
        machineSpec_ = value;
      }
    }

    /// <summary>Field number for the "min_replica_count" field.</summary>
    public const int MinReplicaCountFieldNumber = 2;
    private int minReplicaCount_;
    /// <summary>
    /// Required. Immutable. The minimum number of machine replicas this DeployedModel will be always
    /// deployed on. If traffic against it increases, it may dynamically be
    /// deployed onto more replicas, and as traffic decreases, some of these extra
    /// replicas may be freed.
    /// Note: if [machine_spec.accelerator_count][google.cloud.aiplatform.v1.MachineSpec.accelerator_count] is
    /// above 0, currently the model will be always deployed precisely on
    /// [min_replica_count][google.cloud.aiplatform.v1.DedicatedResources.min_replica_count].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinReplicaCount {
      get { return minReplicaCount_; }
      set {
        minReplicaCount_ = value;
      }
    }

    /// <summary>Field number for the "max_replica_count" field.</summary>
    public const int MaxReplicaCountFieldNumber = 3;
    private int maxReplicaCount_;
    /// <summary>
    /// Immutable. The maximum number of replicas this DeployedModel may be deployed on when
    /// the traffic against it increases. If the requested value is too large,
    /// the deployment will error, but if deployment succeeds then the ability
    /// to scale the model to that many replicas is guaranteed (barring service
    /// outages). If traffic against the DeployedModel increases beyond what its
    /// replicas at maximum may handle, a portion of the traffic will be dropped.
    /// If this value is not provided, will use [min_replica_count][google.cloud.aiplatform.v1.DedicatedResources.min_replica_count] as the
    /// default value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxReplicaCount {
      get { return maxReplicaCount_; }
      set {
        maxReplicaCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DedicatedResources);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DedicatedResources other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MachineSpec, other.MachineSpec)) return false;
      if (MinReplicaCount != other.MinReplicaCount) return false;
      if (MaxReplicaCount != other.MaxReplicaCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (machineSpec_ != null) hash ^= MachineSpec.GetHashCode();
      if (MinReplicaCount != 0) hash ^= MinReplicaCount.GetHashCode();
      if (MaxReplicaCount != 0) hash ^= MaxReplicaCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (machineSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MachineSpec);
      }
      if (MinReplicaCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (machineSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MachineSpec);
      }
      if (MinReplicaCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (machineSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MachineSpec);
      }
      if (MinReplicaCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DedicatedResources other) {
      if (other == null) {
        return;
      }
      if (other.machineSpec_ != null) {
        if (machineSpec_ == null) {
          MachineSpec = new global::Google.Cloud.Aiplatform.V1.MachineSpec();
        }
        MachineSpec.MergeFrom(other.MachineSpec);
      }
      if (other.MinReplicaCount != 0) {
        MinReplicaCount = other.MinReplicaCount;
      }
      if (other.MaxReplicaCount != 0) {
        MaxReplicaCount = other.MaxReplicaCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (machineSpec_ == null) {
              MachineSpec = new global::Google.Cloud.Aiplatform.V1.MachineSpec();
            }
            input.ReadMessage(MachineSpec);
            break;
          }
          case 16: {
            MinReplicaCount = input.ReadInt32();
            break;
          }
          case 24: {
            MaxReplicaCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (machineSpec_ == null) {
              MachineSpec = new global::Google.Cloud.Aiplatform.V1.MachineSpec();
            }
            input.ReadMessage(MachineSpec);
            break;
          }
          case 16: {
            MinReplicaCount = input.ReadInt32();
            break;
          }
          case 24: {
            MaxReplicaCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A description of resources that to large degree are decided by AI Platform,
  /// and require only a modest additional configuration.
  /// Each Model supporting these resources documents its specific guidelines.
  /// </summary>
  public sealed partial class AutomaticResources : pb::IMessage<AutomaticResources>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutomaticResources> _parser = new pb::MessageParser<AutomaticResources>(() => new AutomaticResources());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutomaticResources> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Aiplatform.V1.MachineResourcesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutomaticResources() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutomaticResources(AutomaticResources other) : this() {
      minReplicaCount_ = other.minReplicaCount_;
      maxReplicaCount_ = other.maxReplicaCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutomaticResources Clone() {
      return new AutomaticResources(this);
    }

    /// <summary>Field number for the "min_replica_count" field.</summary>
    public const int MinReplicaCountFieldNumber = 1;
    private int minReplicaCount_;
    /// <summary>
    /// Immutable. The minimum number of replicas this DeployedModel will be always deployed
    /// on. If traffic against it increases, it may dynamically be deployed onto
    /// more replicas up to [max_replica_count][google.cloud.aiplatform.v1.AutomaticResources.max_replica_count], and as traffic decreases, some
    /// of these extra replicas may be freed.
    /// If the requested value is too large, the deployment will error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinReplicaCount {
      get { return minReplicaCount_; }
      set {
        minReplicaCount_ = value;
      }
    }

    /// <summary>Field number for the "max_replica_count" field.</summary>
    public const int MaxReplicaCountFieldNumber = 2;
    private int maxReplicaCount_;
    /// <summary>
    /// Immutable. The maximum number of replicas this DeployedModel may be deployed on when
    /// the traffic against it increases. If the requested value is too large,
    /// the deployment will error, but if deployment succeeds then the ability
    /// to scale the model to that many replicas is guaranteed (barring service
    /// outages). If traffic against the DeployedModel increases beyond what its
    /// replicas at maximum may handle, a portion of the traffic will be dropped.
    /// If this value is not provided, a no upper bound for scaling under heavy
    /// traffic will be assume, though AI Platform may be unable to scale beyond
    /// certain replica number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxReplicaCount {
      get { return maxReplicaCount_; }
      set {
        maxReplicaCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutomaticResources);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutomaticResources other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinReplicaCount != other.MinReplicaCount) return false;
      if (MaxReplicaCount != other.MaxReplicaCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MinReplicaCount != 0) hash ^= MinReplicaCount.GetHashCode();
      if (MaxReplicaCount != 0) hash ^= MaxReplicaCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MinReplicaCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MinReplicaCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MinReplicaCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutomaticResources other) {
      if (other == null) {
        return;
      }
      if (other.MinReplicaCount != 0) {
        MinReplicaCount = other.MinReplicaCount;
      }
      if (other.MaxReplicaCount != 0) {
        MaxReplicaCount = other.MaxReplicaCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinReplicaCount = input.ReadInt32();
            break;
          }
          case 16: {
            MaxReplicaCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinReplicaCount = input.ReadInt32();
            break;
          }
          case 16: {
            MaxReplicaCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A description of resources that are used for performing batch operations, are
  /// dedicated to a Model, and need manual configuration.
  /// </summary>
  public sealed partial class BatchDedicatedResources : pb::IMessage<BatchDedicatedResources>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchDedicatedResources> _parser = new pb::MessageParser<BatchDedicatedResources>(() => new BatchDedicatedResources());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchDedicatedResources> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Aiplatform.V1.MachineResourcesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDedicatedResources() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDedicatedResources(BatchDedicatedResources other) : this() {
      machineSpec_ = other.machineSpec_ != null ? other.machineSpec_.Clone() : null;
      startingReplicaCount_ = other.startingReplicaCount_;
      maxReplicaCount_ = other.maxReplicaCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDedicatedResources Clone() {
      return new BatchDedicatedResources(this);
    }

    /// <summary>Field number for the "machine_spec" field.</summary>
    public const int MachineSpecFieldNumber = 1;
    private global::Google.Cloud.Aiplatform.V1.MachineSpec machineSpec_;
    /// <summary>
    /// Required. Immutable. The specification of a single machine.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Aiplatform.V1.MachineSpec MachineSpec {
      get { return machineSpec_; }
      set {
        machineSpec_ = value;
      }
    }

    /// <summary>Field number for the "starting_replica_count" field.</summary>
    public const int StartingReplicaCountFieldNumber = 2;
    private int startingReplicaCount_;
    /// <summary>
    /// Immutable. The number of machine replicas used at the start of the batch operation.
    /// If not set, AI Platform decides starting number, not greater than
    /// [max_replica_count][google.cloud.aiplatform.v1.BatchDedicatedResources.max_replica_count]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartingReplicaCount {
      get { return startingReplicaCount_; }
      set {
        startingReplicaCount_ = value;
      }
    }

    /// <summary>Field number for the "max_replica_count" field.</summary>
    public const int MaxReplicaCountFieldNumber = 3;
    private int maxReplicaCount_;
    /// <summary>
    /// Immutable. The maximum number of machine replicas the batch operation may be scaled
    /// to. The default value is 10.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxReplicaCount {
      get { return maxReplicaCount_; }
      set {
        maxReplicaCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchDedicatedResources);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchDedicatedResources other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MachineSpec, other.MachineSpec)) return false;
      if (StartingReplicaCount != other.StartingReplicaCount) return false;
      if (MaxReplicaCount != other.MaxReplicaCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (machineSpec_ != null) hash ^= MachineSpec.GetHashCode();
      if (StartingReplicaCount != 0) hash ^= StartingReplicaCount.GetHashCode();
      if (MaxReplicaCount != 0) hash ^= MaxReplicaCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (machineSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MachineSpec);
      }
      if (StartingReplicaCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartingReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (machineSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MachineSpec);
      }
      if (StartingReplicaCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartingReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (machineSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MachineSpec);
      }
      if (StartingReplicaCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartingReplicaCount);
      }
      if (MaxReplicaCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxReplicaCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchDedicatedResources other) {
      if (other == null) {
        return;
      }
      if (other.machineSpec_ != null) {
        if (machineSpec_ == null) {
          MachineSpec = new global::Google.Cloud.Aiplatform.V1.MachineSpec();
        }
        MachineSpec.MergeFrom(other.MachineSpec);
      }
      if (other.StartingReplicaCount != 0) {
        StartingReplicaCount = other.StartingReplicaCount;
      }
      if (other.MaxReplicaCount != 0) {
        MaxReplicaCount = other.MaxReplicaCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (machineSpec_ == null) {
              MachineSpec = new global::Google.Cloud.Aiplatform.V1.MachineSpec();
            }
            input.ReadMessage(MachineSpec);
            break;
          }
          case 16: {
            StartingReplicaCount = input.ReadInt32();
            break;
          }
          case 24: {
            MaxReplicaCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (machineSpec_ == null) {
              MachineSpec = new global::Google.Cloud.Aiplatform.V1.MachineSpec();
            }
            input.ReadMessage(MachineSpec);
            break;
          }
          case 16: {
            StartingReplicaCount = input.ReadInt32();
            break;
          }
          case 24: {
            MaxReplicaCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Statistics information about resource consumption.
  /// </summary>
  public sealed partial class ResourcesConsumed : pb::IMessage<ResourcesConsumed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResourcesConsumed> _parser = new pb::MessageParser<ResourcesConsumed>(() => new ResourcesConsumed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourcesConsumed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Aiplatform.V1.MachineResourcesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourcesConsumed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourcesConsumed(ResourcesConsumed other) : this() {
      replicaHours_ = other.replicaHours_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourcesConsumed Clone() {
      return new ResourcesConsumed(this);
    }

    /// <summary>Field number for the "replica_hours" field.</summary>
    public const int ReplicaHoursFieldNumber = 1;
    private double replicaHours_;
    /// <summary>
    /// Output only. The number of replica hours used. Note that many replicas may run in
    /// parallel, and additionally any given work may be queued for some time.
    /// Therefore this value is not strictly related to wall time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ReplicaHours {
      get { return replicaHours_; }
      set {
        replicaHours_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourcesConsumed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourcesConsumed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReplicaHours, other.ReplicaHours)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReplicaHours != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReplicaHours);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReplicaHours != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(ReplicaHours);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReplicaHours != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(ReplicaHours);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReplicaHours != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourcesConsumed other) {
      if (other == null) {
        return;
      }
      if (other.ReplicaHours != 0D) {
        ReplicaHours = other.ReplicaHours;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            ReplicaHours = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            ReplicaHours = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the spec of disk options.
  /// </summary>
  public sealed partial class DiskSpec : pb::IMessage<DiskSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiskSpec> _parser = new pb::MessageParser<DiskSpec>(() => new DiskSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiskSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Aiplatform.V1.MachineResourcesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskSpec(DiskSpec other) : this() {
      bootDiskType_ = other.bootDiskType_;
      bootDiskSizeGb_ = other.bootDiskSizeGb_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskSpec Clone() {
      return new DiskSpec(this);
    }

    /// <summary>Field number for the "boot_disk_type" field.</summary>
    public const int BootDiskTypeFieldNumber = 1;
    private string bootDiskType_ = "";
    /// <summary>
    /// Type of the boot disk (default is "pd-ssd").
    /// Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or
    /// "pd-standard" (Persistent Disk Hard Disk Drive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BootDiskType {
      get { return bootDiskType_; }
      set {
        bootDiskType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boot_disk_size_gb" field.</summary>
    public const int BootDiskSizeGbFieldNumber = 2;
    private int bootDiskSizeGb_;
    /// <summary>
    /// Size in GB of the boot disk (default is 100GB).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BootDiskSizeGb {
      get { return bootDiskSizeGb_; }
      set {
        bootDiskSizeGb_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiskSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiskSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BootDiskType != other.BootDiskType) return false;
      if (BootDiskSizeGb != other.BootDiskSizeGb) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BootDiskType.Length != 0) hash ^= BootDiskType.GetHashCode();
      if (BootDiskSizeGb != 0) hash ^= BootDiskSizeGb.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BootDiskType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BootDiskType);
      }
      if (BootDiskSizeGb != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BootDiskSizeGb);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BootDiskType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BootDiskType);
      }
      if (BootDiskSizeGb != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BootDiskSizeGb);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BootDiskType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BootDiskType);
      }
      if (BootDiskSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BootDiskSizeGb);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiskSpec other) {
      if (other == null) {
        return;
      }
      if (other.BootDiskType.Length != 0) {
        BootDiskType = other.BootDiskType;
      }
      if (other.BootDiskSizeGb != 0) {
        BootDiskSizeGb = other.BootDiskSizeGb;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BootDiskType = input.ReadString();
            break;
          }
          case 16: {
            BootDiskSizeGb = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BootDiskType = input.ReadString();
            break;
          }
          case 16: {
            BootDiskSizeGb = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
