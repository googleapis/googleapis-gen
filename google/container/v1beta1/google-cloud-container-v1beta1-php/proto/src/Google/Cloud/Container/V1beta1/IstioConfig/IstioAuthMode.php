<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1beta1/cluster_service.proto

namespace Google\Cloud\Container\V1beta1\IstioConfig;

use UnexpectedValueException;

/**
 * Istio auth mode, https://istio.io/docs/concepts/security/mutual-tls.html
 *
 * Protobuf type <code>google.container.v1beta1.IstioConfig.IstioAuthMode</code>
 */
class IstioAuthMode
{
    /**
     * auth not enabled
     *
     * Generated from protobuf enum <code>AUTH_NONE = 0;</code>
     */
    const AUTH_NONE = 0;
    /**
     * auth mutual TLS enabled
     *
     * Generated from protobuf enum <code>AUTH_MUTUAL_TLS = 1;</code>
     */
    const AUTH_MUTUAL_TLS = 1;

    private static $valueToName = [
        self::AUTH_NONE => 'AUTH_NONE',
        self::AUTH_MUTUAL_TLS => 'AUTH_MUTUAL_TLS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(IstioAuthMode::class, \Google\Cloud\Container\V1beta1\IstioConfig_IstioAuthMode::class);

