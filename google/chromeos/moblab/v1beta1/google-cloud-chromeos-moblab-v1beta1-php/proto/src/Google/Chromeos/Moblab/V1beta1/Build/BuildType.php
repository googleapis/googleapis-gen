<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chromeos/moblab/v1beta1/resources.proto

namespace Google\Chromeos\Moblab\V1beta1\Build;

use UnexpectedValueException;

/**
 * The build types.
 *
 * Protobuf type <code>google.chromeos.moblab.v1beta1.Build.BuildType</code>
 */
class BuildType
{
    /**
     * Invalid build type.
     *
     * Generated from protobuf enum <code>BUILD_TYPE_UNSPECIFIED = 0;</code>
     */
    const BUILD_TYPE_UNSPECIFIED = 0;
    /**
     * The release build.
     *
     * Generated from protobuf enum <code>RELEASE = 1;</code>
     */
    const RELEASE = 1;
    /**
     * The firmware build.
     *
     * Generated from protobuf enum <code>FIRMWARE = 2;</code>
     */
    const FIRMWARE = 2;

    private static $valueToName = [
        self::BUILD_TYPE_UNSPECIFIED => 'BUILD_TYPE_UNSPECIFIED',
        self::RELEASE => 'RELEASE',
        self::FIRMWARE => 'FIRMWARE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(BuildType::class, \Google\Chromeos\Moblab\V1beta1\Build_BuildType::class);

