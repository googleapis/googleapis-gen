<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chromeos/moblab/v1beta1/resources.proto

namespace Google\Chromeos\Moblab\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Resource that represents a build artifact stored in Google Cloud Storage for
 * the given build target, model, build version and bucket. NEXT_TAG: 6
 *
 * Generated from protobuf message <code>google.chromeos.moblab.v1beta1.BuildArtifact</code>
 */
class BuildArtifact extends \Google\Protobuf\Internal\Message
{
    /**
     * The resource name of the build artifact.
     * Format:
     * buildTargets/{build_target}/models/{model}/builds/{build}/artifacts/{artifact}
     * Example:
     * buildTargets/octopus/models/bobba/builds/1234.0.0/artifacts/chromeos-moblab-peng-staging
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * The build metadata of the build artifact.
     *
     * Generated from protobuf field <code>string build = 2 [(.google.api.resource_reference) = {</code>
     */
    protected $build = '';
    /**
     * The bucket that stores the build artifact.
     *
     * Generated from protobuf field <code>string bucket = 3;</code>
     */
    protected $bucket = '';
    /**
     * The path of the build artifact in the bucket.
     *
     * Generated from protobuf field <code>string path = 4;</code>
     */
    protected $path = '';
    /**
     * The number of objects in the build artifact folder. The object number can
     * be used to calculated the stage progress by comparing the source build
     * artifact with the destination build artifact.
     *
     * Generated from protobuf field <code>uint32 object_count = 5;</code>
     */
    protected $object_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           The resource name of the build artifact.
     *           Format:
     *           buildTargets/{build_target}/models/{model}/builds/{build}/artifacts/{artifact}
     *           Example:
     *           buildTargets/octopus/models/bobba/builds/1234.0.0/artifacts/chromeos-moblab-peng-staging
     *     @type string $build
     *           The build metadata of the build artifact.
     *     @type string $bucket
     *           The bucket that stores the build artifact.
     *     @type string $path
     *           The path of the build artifact in the bucket.
     *     @type int $object_count
     *           The number of objects in the build artifact folder. The object number can
     *           be used to calculated the stage progress by comparing the source build
     *           artifact with the destination build artifact.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Chromeos\Moblab\V1Beta1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The resource name of the build artifact.
     * Format:
     * buildTargets/{build_target}/models/{model}/builds/{build}/artifacts/{artifact}
     * Example:
     * buildTargets/octopus/models/bobba/builds/1234.0.0/artifacts/chromeos-moblab-peng-staging
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The resource name of the build artifact.
     * Format:
     * buildTargets/{build_target}/models/{model}/builds/{build}/artifacts/{artifact}
     * Example:
     * buildTargets/octopus/models/bobba/builds/1234.0.0/artifacts/chromeos-moblab-peng-staging
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The build metadata of the build artifact.
     *
     * Generated from protobuf field <code>string build = 2 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getBuild()
    {
        return $this->build;
    }

    /**
     * The build metadata of the build artifact.
     *
     * Generated from protobuf field <code>string build = 2 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setBuild($var)
    {
        GPBUtil::checkString($var, True);
        $this->build = $var;

        return $this;
    }

    /**
     * The bucket that stores the build artifact.
     *
     * Generated from protobuf field <code>string bucket = 3;</code>
     * @return string
     */
    public function getBucket()
    {
        return $this->bucket;
    }

    /**
     * The bucket that stores the build artifact.
     *
     * Generated from protobuf field <code>string bucket = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setBucket($var)
    {
        GPBUtil::checkString($var, True);
        $this->bucket = $var;

        return $this;
    }

    /**
     * The path of the build artifact in the bucket.
     *
     * Generated from protobuf field <code>string path = 4;</code>
     * @return string
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * The path of the build artifact in the bucket.
     *
     * Generated from protobuf field <code>string path = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->path = $var;

        return $this;
    }

    /**
     * The number of objects in the build artifact folder. The object number can
     * be used to calculated the stage progress by comparing the source build
     * artifact with the destination build artifact.
     *
     * Generated from protobuf field <code>uint32 object_count = 5;</code>
     * @return int
     */
    public function getObjectCount()
    {
        return $this->object_count;
    }

    /**
     * The number of objects in the build artifact folder. The object number can
     * be used to calculated the stage progress by comparing the source build
     * artifact with the destination build artifact.
     *
     * Generated from protobuf field <code>uint32 object_count = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setObjectCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->object_count = $var;

        return $this;
    }

}

