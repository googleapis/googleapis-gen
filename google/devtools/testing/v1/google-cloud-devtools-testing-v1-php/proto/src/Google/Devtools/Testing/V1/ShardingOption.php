<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Options for enabling sharding.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.ShardingOption</code>
 */
class ShardingOption extends \Google\Protobuf\Internal\Message
{
    protected $option;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Testing\V1\UniformSharding $uniform_sharding
     *           Uniformly shards test cases given a total number of shards.
     *     @type \Google\Devtools\Testing\V1\ManualSharding $manual_sharding
     *           Shards test cases into the specified groups of packages, classes, and/or
     *           methods.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * Uniformly shards test cases given a total number of shards.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     * @return \Google\Devtools\Testing\V1\UniformSharding|null
     */
    public function getUniformSharding()
    {
        return $this->readOneof(1);
    }

    public function hasUniformSharding()
    {
        return $this->hasOneof(1);
    }

    /**
     * Uniformly shards test cases given a total number of shards.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     * @param \Google\Devtools\Testing\V1\UniformSharding $var
     * @return $this
     */
    public function setUniformSharding($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\UniformSharding::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     * @return \Google\Devtools\Testing\V1\ManualSharding|null
     */
    public function getManualSharding()
    {
        return $this->readOneof(2);
    }

    public function hasManualSharding()
    {
        return $this->hasOneof(2);
    }

    /**
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     * @param \Google\Devtools\Testing\V1\ManualSharding $var
     * @return $this
     */
    public function setManualSharding($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\ManualSharding::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getOption()
    {
        return $this->whichOneof("option");
    }

}

