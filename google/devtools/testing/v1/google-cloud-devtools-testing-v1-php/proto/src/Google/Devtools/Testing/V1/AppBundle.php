<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An Android App Bundle file format, containing a BundleConfig.pb file,
 * a base module directory, zero or more dynamic feature module directories.
 * <p>See https://developer.android.com/guide/app-bundle/build for guidance on
 * building App Bundles.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.AppBundle</code>
 */
class AppBundle extends \Google\Protobuf\Internal\Message
{
    protected $bundle;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Testing\V1\FileReference $bundle_location
     *           .aab file representing the app bundle under test.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * .aab file representing the app bundle under test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference bundle_location = 1;</code>
     * @return \Google\Devtools\Testing\V1\FileReference|null
     */
    public function getBundleLocation()
    {
        return $this->readOneof(1);
    }

    public function hasBundleLocation()
    {
        return $this->hasOneof(1);
    }

    /**
     * .aab file representing the app bundle under test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference bundle_location = 1;</code>
     * @param \Google\Devtools\Testing\V1\FileReference $var
     * @return $this
     */
    public function setBundleLocation($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\FileReference::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getBundle()
    {
        return $this->whichOneof("bundle");
    }

}

