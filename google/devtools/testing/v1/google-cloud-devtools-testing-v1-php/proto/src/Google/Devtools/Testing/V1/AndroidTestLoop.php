<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A test of an Android Application with a Test Loop.
 * The intent \<intent-name\> will be implicitly added, since Games is the only
 * user of this api, for the time being.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.AndroidTestLoop</code>
 */
class AndroidTestLoop extends \Google\Protobuf\Internal\Message
{
    /**
     * The java package for the application under test.
     * The default is determined by examining the application's manifest.
     *
     * Generated from protobuf field <code>string app_package_id = 2;</code>
     */
    protected $app_package_id = '';
    /**
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     *
     * Generated from protobuf field <code>repeated int32 scenarios = 3;</code>
     */
    private $scenarios;
    /**
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     *
     * Generated from protobuf field <code>repeated string scenario_labels = 4;</code>
     */
    private $scenario_labels;
    protected $app_under_test;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Testing\V1\FileReference $app_apk
     *           The APK for the application under test.
     *     @type \Google\Devtools\Testing\V1\AppBundle $app_bundle
     *           A multi-apk app bundle for the application under test.
     *     @type string $app_package_id
     *           The java package for the application under test.
     *           The default is determined by examining the application's manifest.
     *     @type int[]|\Google\Protobuf\Internal\RepeatedField $scenarios
     *           The list of scenarios that should be run during the test.
     *           The default is all test loops, derived from the application's
     *           manifest.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $scenario_labels
     *           The list of scenario labels that should be run during the test.
     *           The scenario labels should map to labels defined in the application's
     *           manifest. For example, player_experience and
     *           com.google.test.loops.player_experience add all of the loops labeled in the
     *           manifest with the com.google.test.loops.player_experience name to the
     *           execution.
     *           Scenarios can also be specified in the scenarios field.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * The APK for the application under test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     * @return \Google\Devtools\Testing\V1\FileReference|null
     */
    public function getAppApk()
    {
        return $this->readOneof(1);
    }

    public function hasAppApk()
    {
        return $this->hasOneof(1);
    }

    /**
     * The APK for the application under test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     * @param \Google\Devtools\Testing\V1\FileReference $var
     * @return $this
     */
    public function setAppApk($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\FileReference::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * A multi-apk app bundle for the application under test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     * @return \Google\Devtools\Testing\V1\AppBundle|null
     */
    public function getAppBundle()
    {
        return $this->readOneof(5);
    }

    public function hasAppBundle()
    {
        return $this->hasOneof(5);
    }

    /**
     * A multi-apk app bundle for the application under test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     * @param \Google\Devtools\Testing\V1\AppBundle $var
     * @return $this
     */
    public function setAppBundle($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\AppBundle::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * The java package for the application under test.
     * The default is determined by examining the application's manifest.
     *
     * Generated from protobuf field <code>string app_package_id = 2;</code>
     * @return string
     */
    public function getAppPackageId()
    {
        return $this->app_package_id;
    }

    /**
     * The java package for the application under test.
     * The default is determined by examining the application's manifest.
     *
     * Generated from protobuf field <code>string app_package_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAppPackageId($var)
    {
        GPBUtil::checkString($var, True);
        $this->app_package_id = $var;

        return $this;
    }

    /**
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     *
     * Generated from protobuf field <code>repeated int32 scenarios = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getScenarios()
    {
        return $this->scenarios;
    }

    /**
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     *
     * Generated from protobuf field <code>repeated int32 scenarios = 3;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setScenarios($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT32);
        $this->scenarios = $arr;

        return $this;
    }

    /**
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     *
     * Generated from protobuf field <code>repeated string scenario_labels = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getScenarioLabels()
    {
        return $this->scenario_labels;
    }

    /**
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     *
     * Generated from protobuf field <code>repeated string scenario_labels = 4;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setScenarioLabels($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->scenario_labels = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getAppUnderTest()
    {
        return $this->whichOneof("app_under_test");
    }

}

