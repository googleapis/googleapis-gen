<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A reference to a file, used for user inputs.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.FileReference</code>
 */
class FileReference extends \Google\Protobuf\Internal\Message
{
    protected $file;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $gcs_path
     *           A path to a file in Google Cloud Storage.
     *           Example: gs://build-app-1414623860166/app%40debug-unaligned.apk
     *           These paths are expected to be url encoded (percent encoding)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * A path to a file in Google Cloud Storage.
     * Example: gs://build-app-1414623860166/app%40debug-unaligned.apk
     * These paths are expected to be url encoded (percent encoding)
     *
     * Generated from protobuf field <code>string gcs_path = 1;</code>
     * @return string
     */
    public function getGcsPath()
    {
        return $this->readOneof(1);
    }

    public function hasGcsPath()
    {
        return $this->hasOneof(1);
    }

    /**
     * A path to a file in Google Cloud Storage.
     * Example: gs://build-app-1414623860166/app%40debug-unaligned.apk
     * These paths are expected to be url encoded (percent encoding)
     *
     * Generated from protobuf field <code>string gcs_path = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setGcsPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getFile()
    {
        return $this->whichOneof("file");
    }

}

