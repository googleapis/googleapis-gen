<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/cloudtrace/v1/trace.proto

namespace Google\Cloud\Trace\V1\ListTracesRequest;

use UnexpectedValueException;

/**
 * Type of data returned for traces in the list.
 *
 * Protobuf type <code>google.devtools.cloudtrace.v1.ListTracesRequest.ViewType</code>
 */
class ViewType
{
    /**
     * Default is `MINIMAL` if unspecified.
     *
     * Generated from protobuf enum <code>VIEW_TYPE_UNSPECIFIED = 0;</code>
     */
    const VIEW_TYPE_UNSPECIFIED = 0;
    /**
     * Minimal view of the trace record that contains only the project
     * and trace IDs.
     *
     * Generated from protobuf enum <code>MINIMAL = 1;</code>
     */
    const MINIMAL = 1;
    /**
     * Root span view of the trace record that returns the root spans along
     * with the minimal trace data.
     *
     * Generated from protobuf enum <code>ROOTSPAN = 2;</code>
     */
    const ROOTSPAN = 2;
    /**
     * Complete view of the trace record that contains the actual trace data.
     * This is equivalent to calling the REST `get` or RPC `GetTrace` method
     * using the ID of each listed trace.
     *
     * Generated from protobuf enum <code>COMPLETE = 3;</code>
     */
    const COMPLETE = 3;

    private static $valueToName = [
        self::VIEW_TYPE_UNSPECIFIED => 'VIEW_TYPE_UNSPECIFIED',
        self::MINIMAL => 'MINIMAL',
        self::ROOTSPAN => 'ROOTSPAN',
        self::COMPLETE => 'COMPLETE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ViewType::class, \Google\Cloud\Trace\V1\ListTracesRequest_ViewType::class);

