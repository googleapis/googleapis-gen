<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/build/v1/build_events.proto

namespace Google\Devtools\Build\V1\BuildEvent;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Notification that an invocation attempt has finished.
 *
 * Generated from protobuf message <code>google.devtools.build.v1.BuildEvent.InvocationAttemptFinished</code>
 */
class InvocationAttemptFinished extends \Google\Protobuf\Internal\Message
{
    /**
     * Final status of the invocation.
     *
     * Generated from protobuf field <code>.google.devtools.build.v1.BuildStatus invocation_status = 3;</code>
     */
    protected $invocation_status = null;
    /**
     * Arbitrary details about the invocation attempt.
     *
     * Generated from protobuf field <code>.google.protobuf.Any details = 4;</code>
     */
    protected $details = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Build\V1\BuildStatus $invocation_status
     *           Final status of the invocation.
     *     @type \Google\Protobuf\Any $details
     *           Arbitrary details about the invocation attempt.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Build\V1\BuildEvents::initOnce();
        parent::__construct($data);
    }

    /**
     * Final status of the invocation.
     *
     * Generated from protobuf field <code>.google.devtools.build.v1.BuildStatus invocation_status = 3;</code>
     * @return \Google\Devtools\Build\V1\BuildStatus
     */
    public function getInvocationStatus()
    {
        return isset($this->invocation_status) ? $this->invocation_status : null;
    }

    public function hasInvocationStatus()
    {
        return isset($this->invocation_status);
    }

    public function clearInvocationStatus()
    {
        unset($this->invocation_status);
    }

    /**
     * Final status of the invocation.
     *
     * Generated from protobuf field <code>.google.devtools.build.v1.BuildStatus invocation_status = 3;</code>
     * @param \Google\Devtools\Build\V1\BuildStatus $var
     * @return $this
     */
    public function setInvocationStatus($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Build\V1\BuildStatus::class);
        $this->invocation_status = $var;

        return $this;
    }

    /**
     * Arbitrary details about the invocation attempt.
     *
     * Generated from protobuf field <code>.google.protobuf.Any details = 4;</code>
     * @return \Google\Protobuf\Any
     */
    public function getDetails()
    {
        return isset($this->details) ? $this->details : null;
    }

    public function hasDetails()
    {
        return isset($this->details);
    }

    public function clearDetails()
    {
        unset($this->details);
    }

    /**
     * Arbitrary details about the invocation attempt.
     *
     * Generated from protobuf field <code>.google.protobuf.Any details = 4;</code>
     * @param \Google\Protobuf\Any $var
     * @return $this
     */
    public function setDetails($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Any::class);
        $this->details = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InvocationAttemptFinished::class, \Google\Devtools\Build\V1\BuildEvent_InvocationAttemptFinished::class);

