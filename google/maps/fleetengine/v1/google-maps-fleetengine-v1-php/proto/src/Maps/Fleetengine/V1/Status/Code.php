<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/fleetengine.proto

namespace Maps\Fleetengine\V1\Status;

use UnexpectedValueException;

/**
 * The canonical error code.
 *
 * Protobuf type <code>maps.fleetengine.v1.Status.Code</code>
 */
class Code
{
    /**
     * Unspecified status, not a valid value to set.
     *
     * Generated from protobuf enum <code>UNSPECIFIED = 0;</code>
     */
    const UNSPECIFIED = 0;
    /**
     * Internal server error. Usually expect the client to retry in this case.
     *
     * Generated from protobuf enum <code>FAILURE = 1;</code>
     */
    const FAILURE = 1;
    /**
     * There is no possible route. Client should not retry.
     *
     * Generated from protobuf enum <code>ROUTE_NOT_POSSIBLE = 2;</code>
     */
    const ROUTE_NOT_POSSIBLE = 2;

    private static $valueToName = [
        self::UNSPECIFIED => 'UNSPECIFIED',
        self::FAILURE => 'FAILURE',
        self::ROUTE_NOT_POSSIBLE => 'ROUTE_NOT_POSSIBLE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Code::class, \Maps\Fleetengine\V1\Status_Code::class);

