# frozen_string_literal: true

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Maps
  module Fleetengine
    module V1
      # Vehicle metadata.
      # @!attribute [rw] name
      #   @return [::String]
      #     The unique name for this vehicle.
      #     The format is providers/\\{provider}/vehicles/\\{vehicle}
      # @!attribute [rw] vehicle_state
      #   @return [::Maps::Fleetengine::V1::VehicleState]
      #     The vehicle state.
      # @!attribute [rw] supported_trip_types
      #   @return [::Array<::Maps::Fleetengine::V1::TripType>]
      #     Supported trip types.
      # @!attribute [rw] current_trips
      #   @return [::Array<::String>]
      #     List of IDs for trips in progress.
      # @!attribute [rw] last_location
      #   @return [::Maps::Fleetengine::V1::VehicleLocation]
      #     Last reported location of the vehicle.
      # @!attribute [rw] maximum_capacity
      #   @return [::Integer]
      #     Maximum capacity of the vehicle.  This is the total numbers of riders
      #     on trips this vehicle can contain.  The driver is not considered in
      #     this value.  This value must be greater than or equal to one.
      # @!attribute [rw] available_capacity
      #   @return [::Integer]
      #     The current available capacity of the vehicle.  This is the
      #     maximum_capacity minus the current number of riders.
      # @!attribute [rw] attributes
      #   @return [::Array<::Maps::Fleetengine::V1::VehicleAttribute>]
      #     List of vehicle service attributes.
      # @!attribute [rw] vehicle_type
      #   @return [::Maps::Fleetengine::V1::Vehicle::VehicleType]
      #     The type of this Vehicle.  Can be filtered during SearchVehicles.  Also
      #     influences ETA and route calculations.
      # @!attribute [rw] license_plate
      #   @return [::Maps::Fleetengine::V1::LicensePlate]
      #     License plate information for the vehicle.
      # @!attribute [rw] route
      #   @return [::Array<::Maps::Fleetengine::V1::TerminalLocation>]
      #     Deprecated. Use vehicle.waypoint instead.
      # @!attribute [rw] current_route_segment
      #   @return [::String]
      #     The polyline specifying the route the driver app intends to take to
      #     the next waypoint. Your driver app updates this every time a waypoint is
      #     passed or the driver reroutes. This list is also returned in
      #     Trip.current_route_segment for all active trips assigned to the vehicle.
      #     Note: This field is intended only for use by the Driver SDK.
      # @!attribute [rw] current_route_segment_version
      #   @return [::Google::Protobuf::Timestamp]
      #     Time when current_route_segment was set. This field is ignored in
      #     UpdateVehicleRequests as it is calculated by the server. It should be
      #     stored by client and passed in to future requests to prevent returning
      #     routes to first way point that haven't changed.
      # @!attribute [rw] current_route_segment_end_point
      #   @return [::Maps::Fleetengine::V1::TripWaypoint]
      #     The waypoint where current_route_segment ends. This can be supplied by
      #     drivers on UpdateVehicle calls either as a full trip waypoint, a waypoint
      #     latlnt, or as a the last latlng of the current_route_segment. FleetEngine
      #     will then do its best to interpolate to an actual waypoint if it is not
      #     fully specified. This field is ignored in UpdateVehicle calls unless
      #     current_route_segment is also specified.
      # @!attribute [rw] remaining_distance_meters
      #   @return [::Google::Protobuf::Int32Value]
      #     The remaining driving distance for the 'current_route_segment'. This field
      #     facilitates journey sharing between the Driver app and the Consumer app.
      #     This value is updated by the Driver SDK. Fleet Engine does not update it.
      #     This field is also returned in Trip.remaining_distance_meters for all
      #     active trips assigned to the vehicle. The value is unspecified if the
      #     `Vehicle.current_route_segment` field is empty, or if the Driver app has
      #     not updated its value.
      # @!attribute [rw] eta_to_first_waypoint
      #   @return [::Google::Protobuf::Timestamp]
      #     The ETA to the next waypoint that is the first entry in Vehicle.waypoint
      #     field. This field facilitates journey sharing between a Driver app and a
      #     Consumer app and is updated by the Driver SDK, and Fleet Engine does not
      #     update it. This field is also returned in Trip.eta_to_first_waypoint for
      #     all active trips assigned to the vehicle. The value is unspecified if the
      #     Vehicle.waypoint field is empty, or the Driver app has not updated its
      #     value.
      # @!attribute [rw] remaining_time_seconds
      #   @return [::Google::Protobuf::Int32Value]
      #     The remaining driving time for the 'current_route_segment'. This field
      #     facilitates journey sharing between the Driver app and the Consumer app.
      #     This value is updated by the Driver SDK. Fleet Engine does not update it.
      #     The value is unspecified if the `Vehicle.current_route_segment` field is
      #     empty, or if the Driver app has not updated its value. This value should
      #     match eta_to_first_waypoint - current_time if all parties are using the
      #     same clock. This field is currently write-only and will not yet be
      #     populated in Vehicle's get/update/search operations. When updating a
      #     vehicle, if you update both eta_to_first_waypoint and
      #     remaining_time_seconds in the same request, then only
      #     remaining_time_seconds is considered.
      # @!attribute [rw] waypoints
      #   @return [::Array<::Maps::Fleetengine::V1::TripWaypoint>]
      #     The remaining set of waypoints assigned to this Vehicle.
      # @!attribute [rw] waypoints_version
      #   @return [::Google::Protobuf::Timestamp]
      #     Last time the waypoints was updated. Client should cache
      #     this value and pass it in GetVehicleRequest to ensure the
      #     waypoints.path_to_waypoint is only returned if it is updated
      # @!attribute [rw] back_to_back_enabled
      #   @return [::Boolean]
      #     Indicates if the driver accepts back-to-back rides. If
      #     `true`, services include the vehicle for back-to-back matches.
      #     If `false`, services exclude the vehicle from back-to-back matches.
      #     Default value is `false`.
      # @!attribute [rw] navigation_status
      #   @return [::Maps::Fleetengine::V1::NavigationStatus]
      #     Vehicle's navigation status.
      # @!attribute [rw] device_settings
      #   @return [::Maps::Fleetengine::V1::DeviceSettings]
      #     Information about various device settings. This is internal debug only
      #     field, not included in the response.
      class Vehicle
        include ::Google::Protobuf::MessageExts
        extend ::Google::Protobuf::MessageExts::ClassMethods

        # Types of vehicles that may be filtered for in SearchVehicles.
        # @!attribute [rw] category
        #   @return [::Maps::Fleetengine::V1::Vehicle::VehicleType::Category]
        #     Vehicle type category
        class VehicleType
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods

          # Vehicle type categories
          module Category
            # Default, used for unspecified or unrecognized vehicle types.
            UNKNOWN = 0

            # An automobile.
            AUTO = 1

            # Any vehicle that acts as a taxi.
            TAXI = 2

            # Generally, a vehicle with a large storage capacity.
            TRUCK = 3

            # A motorcycle, moped, or other two-wheeled vehicle
            TWO_WHEELER = 4
          end
        end
      end

      # Information about the device's battery.
      # @!attribute [rw] battery_status
      #   @return [::Maps::Fleetengine::V1::BatteryStatus]
      #     Status of the battery, whether full or charging etc.
      # @!attribute [rw] power_source
      #   @return [::Maps::Fleetengine::V1::PowerSource]
      #     Status of battery power source.
      # @!attribute [rw] battery_percentage
      #   @return [::Float]
      #     Current battery percentage [0-100].
      class BatteryInfo
        include ::Google::Protobuf::MessageExts
        extend ::Google::Protobuf::MessageExts::ClassMethods
      end

      # Information about various settings on the device.
      # @!attribute [rw] location_power_save_mode
      #   @return [::Maps::Fleetengine::V1::LocationPowerSaveMode]
      #     How location features are set to behave on the device when battery saver is
      #     on.
      # @!attribute [rw] is_power_save_mode
      #   @return [::Boolean]
      #     Whether the device is currently in power save mode.
      # @!attribute [rw] is_interactive
      #   @return [::Boolean]
      #     Whether the device is in an interactive state.
      # @!attribute [rw] battery_info
      #   @return [::Maps::Fleetengine::V1::BatteryInfo]
      #     Information about the battery state.
      class DeviceSettings
        include ::Google::Protobuf::MessageExts
        extend ::Google::Protobuf::MessageExts::ClassMethods
      end

      # The license plate information of the Vehicle.  This is used to support
      # congestion pricing restrictions in certain areas.  To avoid storing
      # personally-identifiable information, only the minimum information
      # about the license plate is stored as part of the entity.
      # @!attribute [rw] country_code
      #   @return [::String]
      #     Required. CLDR Country/Region Code.  For example, "US" for United States,
      #     or "IN" for India.
      # @!attribute [rw] last_character
      #   @return [::String]
      #     The last digit of the license plate or "-1" to denote no numeric value
      #     present in the license plate.
      #
      #     * "ABC 1234" -> "4"
      #     * "AB 123 CD" -> "3"
      #     * "ABCDEF" -> "-1"
      class LicensePlate
        include ::Google::Protobuf::MessageExts
        extend ::Google::Protobuf::MessageExts::ClassMethods
      end

      # The state of a Vehicle.
      module VehicleState
        # Default, used for unspecified or unrecognized vehicle states.
        UNKNOWN_VEHICLE_STATE = 0

        # The vehicle is not accepting new trips.
        OFFLINE = 1

        # The vehicle is accepting new trips.
        ONLINE = 2
      end

      # How location features are set to behave on the device when battery saver is
      # on.
      # (https://developer.android.com/reference/android/os/PowerManager#getLocationPowerSaveMode())
      module LocationPowerSaveMode
        # Undefined LocationPowerSaveMode
        UNKNOWN_LOCATION_POWER_SAVE_MODE = 0

        # Either the location providers shouldn't be affected by battery saver, or
        # battery saver is off.
        LOCATION_MODE_NO_CHANGE = 1

        # The GPS based location provider should be disabled when battery saver is on
        # and the device is non-interactive.
        LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF = 2

        # All location providers should be disabled when battery saver is on and the
        # device is non-interactive.
        LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF = 3

        # All the location providers will be kept available, but location fixes
        # should only be provided to foreground apps.
        LOCATION_MODE_FOREGROUND_ONLY = 4

        # Location will not be turned off, but LocationManager will throttle all
        # requests to providers when the device is non-interactive.
        LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF = 5
      end

      # Status of the battery, whether full or charging etc.
      module BatteryStatus
        # Battery status unknown.
        UNKNOWN_BATTERY_STATUS = 0

        # Battery is being charged.
        BATTERY_STATUS_CHARGING = 1

        # Battery is discharging.
        BATTERY_STATUS_DISCHARGING = 2

        # Battery is full.
        BATTERY_STATUS_FULL = 3

        # Battery is not charging.
        BATTERY_STATUS_NOT_CHARGING = 4

        # Battery is low on power.
        BATTERY_STATUS_POWER_LOW = 5
      end

      # Type of the charger being used to charge the battery.
      module PowerSource
        # Power source unknown.
        UNKNOWN_POWER_SOURCE = 0

        # Power source is an AC charger.
        POWER_SOURCE_AC = 1

        # Power source is a USB port.
        POWER_SOURCE_USB = 2

        # Power source is wireless.
        POWER_SOURCE_WIRELESS = 3

        # Battery is unplugged.
        POWER_SOURCE_UNPLUGGED = 4
      end
    end
  end
end
