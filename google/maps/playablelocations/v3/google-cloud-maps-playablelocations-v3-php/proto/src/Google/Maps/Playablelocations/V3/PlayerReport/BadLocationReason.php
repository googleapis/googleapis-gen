<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/playablelocations/v3/resources.proto

namespace Google\Maps\Playablelocations\V3\PlayerReport;

use UnexpectedValueException;

/**
 * The reason why the playable location is considered bad.
 *
 * Protobuf type <code>google.maps.playablelocations.v3.PlayerReport.BadLocationReason</code>
 */
class BadLocationReason
{
    /**
     * Unspecified reason. Do not use.
     *
     * Generated from protobuf enum <code>BAD_LOCATION_REASON_UNSPECIFIED = 0;</code>
     */
    const BAD_LOCATION_REASON_UNSPECIFIED = 0;
    /**
     * The reason isn't one of the reasons in this enumeration.
     *
     * Generated from protobuf enum <code>OTHER = 1;</code>
     */
    const OTHER = 1;
    /**
     * The playable location isn't accessible to pedestrians. For example, if
     * it's in the middle of a highway.
     *
     * Generated from protobuf enum <code>NOT_PEDESTRIAN_ACCESSIBLE = 2;</code>
     */
    const NOT_PEDESTRIAN_ACCESSIBLE = 2;
    /**
     * The playable location isn't open to the public. For example, a private
     * office building.
     *
     * Generated from protobuf enum <code>NOT_OPEN_TO_PUBLIC = 4;</code>
     */
    const NOT_OPEN_TO_PUBLIC = 4;
    /**
     * The playable location is permanently closed. For example, when a business
     * has been shut down.
     *
     * Generated from protobuf enum <code>PERMANENTLY_CLOSED = 5;</code>
     */
    const PERMANENTLY_CLOSED = 5;
    /**
     * The playable location is temporarily inaccessible. For example, when a
     * business has closed for renovations.
     *
     * Generated from protobuf enum <code>TEMPORARILY_INACCESSIBLE = 6;</code>
     */
    const TEMPORARILY_INACCESSIBLE = 6;

    private static $valueToName = [
        self::BAD_LOCATION_REASON_UNSPECIFIED => 'BAD_LOCATION_REASON_UNSPECIFIED',
        self::OTHER => 'OTHER',
        self::NOT_PEDESTRIAN_ACCESSIBLE => 'NOT_PEDESTRIAN_ACCESSIBLE',
        self::NOT_OPEN_TO_PUBLIC => 'NOT_OPEN_TO_PUBLIC',
        self::PERMANENTLY_CLOSED => 'PERMANENTLY_CLOSED',
        self::TEMPORARILY_INACCESSIBLE => 'TEMPORARILY_INACCESSIBLE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(BadLocationReason::class, \Google\Maps\Playablelocations\V3\PlayerReport_BadLocationReason::class);

