// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.

package streetviewpublish_test

import (
	"context"

	"google.golang.org/api/iterator"
	streetviewpublish "google.golang.org/api/streetviewpublish/apiv1"
	publishpb "google.golang.org/genproto/googleapis/streetview/publish/v1"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

func ExampleNewClient() {
	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use client.
	_ = c
}

func ExampleClient_StartUpload() {
	// import emptypb "google.golang.org/protobuf/types/known/emptypb"

	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &emptypb.Empty{
		// TODO: Fill request struct fields.
	}
	resp, err := c.StartUpload(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_CreatePhoto() {
	// import publishpb "google.golang.org/genproto/googleapis/streetview/publish/v1"

	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &publishpb.CreatePhotoRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.CreatePhoto(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_GetPhoto() {
	// import publishpb "google.golang.org/genproto/googleapis/streetview/publish/v1"

	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &publishpb.GetPhotoRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetPhoto(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_BatchGetPhotos() {
	// import publishpb "google.golang.org/genproto/googleapis/streetview/publish/v1"

	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &publishpb.BatchGetPhotosRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.BatchGetPhotos(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_ListPhotos() {
	// import publishpb "google.golang.org/genproto/googleapis/streetview/publish/v1"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &publishpb.ListPhotosRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListPhotos(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleClient_UpdatePhoto() {
	// import publishpb "google.golang.org/genproto/googleapis/streetview/publish/v1"

	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &publishpb.UpdatePhotoRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.UpdatePhoto(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_BatchUpdatePhotos() {
	// import publishpb "google.golang.org/genproto/googleapis/streetview/publish/v1"

	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &publishpb.BatchUpdatePhotosRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.BatchUpdatePhotos(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_DeletePhoto() {
	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &publishpb.DeletePhotoRequest{
		// TODO: Fill request struct fields.
	}
	err = c.DeletePhoto(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleClient_BatchDeletePhotos() {
	// import publishpb "google.golang.org/genproto/googleapis/streetview/publish/v1"

	ctx := context.Background()
	c, err := streetviewpublish.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &publishpb.BatchDeletePhotosRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.BatchDeletePhotos(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}
