<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/streetview/publish/v1/resources.proto

namespace Google\Streetview\Publish\V1\Photo;

use UnexpectedValueException;

/**
 * Publication status of the photo in Google Maps.
 *
 * Protobuf type <code>google.streetview.publish.v1.Photo.MapsPublishStatus</code>
 */
class MapsPublishStatus
{
    /**
     * The status of the photo is unknown.
     *
     * Generated from protobuf enum <code>UNSPECIFIED_MAPS_PUBLISH_STATUS = 0;</code>
     */
    const UNSPECIFIED_MAPS_PUBLISH_STATUS = 0;
    /**
     * The photo is published to the public through Google Maps.
     *
     * Generated from protobuf enum <code>PUBLISHED = 1;</code>
     */
    const PUBLISHED = 1;
    /**
     * The photo has been rejected for an unknown reason.
     *
     * Generated from protobuf enum <code>REJECTED_UNKNOWN = 2;</code>
     */
    const REJECTED_UNKNOWN = 2;

    private static $valueToName = [
        self::UNSPECIFIED_MAPS_PUBLISH_STATUS => 'UNSPECIFIED_MAPS_PUBLISH_STATUS',
        self::PUBLISHED => 'PUBLISHED',
        self::REJECTED_UNKNOWN => 'REJECTED_UNKNOWN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(MapsPublishStatus::class, \Google\Streetview\Publish\V1\Photo_MapsPublishStatus::class);

